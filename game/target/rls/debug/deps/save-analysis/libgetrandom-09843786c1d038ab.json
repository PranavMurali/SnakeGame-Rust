{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10","program":"C:\\Users\\Pranav\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","getrandom","--edition=2018","C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=09843786c1d038ab","-C","extra-filename=-09843786c1d038ab","--out-dir","f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","--extern","cfg_if=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcfg_if-35fa30235f11c2d1.rmeta","--cap-lints","allow","-l","advapi32","--error-format=json","--sysroot","C:\\Users\\Pranav\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libgetrandom-09843786c1d038ab.rmeta"},"prelude":{"crate_id":{"name":"getrandom","disambiguator":[551489825368504492,5979137380212166974]},"crate_root":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src","external_crates":[{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","num":4,"id":{"name":"cfg_if","disambiguator":[3765223586286468020,8905192521727625958]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":5,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":6,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":7,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":8,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":9,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":10,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}}],"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":356,"byte_end":11961,"line_start":9,"line_end":276,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":7775,"byte_end":7780,"line_start":158,"line_end":158,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":356,"byte_end":11961,"line_start":9,"line_end":276,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":62},{"krate":0,"index":92},{"krate":0,"index":75}],"decl_id":null,"docs":" Interface to the random number generator of the operating system.","sig":null,"attributes":[{"value":"/ Interface to the random number generator of the operating system.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":356,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":426,"byte_end":429,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Platform sources","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":430,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | OS               | interface","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":457,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ |------------------|---------------------------------------------------------","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":492,"byte_end":573,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ | Linux, Android   | [`getrandom`][1] system call if available, otherwise [`/dev/urandom`][2] after successfully polling `/dev/random`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":574,"byte_end":712,"line_start":15,"line_end":15,"column_start":1,"column_end":139}},{"value":"/ | Windows          | [`RtlGenRandom`][3]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":713,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ | macOS            | [`getentropy()`][19] if available, otherwise [`/dev/random`][20] (identical to `/dev/urandom`)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":758,"byte_end":877,"line_start":17,"line_end":17,"column_start":1,"column_end":120}},{"value":"/ | iOS              | [`SecRandomCopyBytes`][4]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":878,"byte_end":928,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ | FreeBSD          | [`getrandom()`][21] if available, otherwise [`kern.arandom`][5]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":929,"byte_end":1017,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/ | OpenBSD          | [`getentropy`][6]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1018,"byte_end":1060,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ | NetBSD           | [`/dev/urandom`][7] after successfully polling `/dev/random`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1061,"byte_end":1146,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/ | Dragonfly BSD    | [`/dev/random`][8]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1147,"byte_end":1190,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ | Solaris, illumos | [`getrandom`][9] system call if available, otherwise [`/dev/random`][10]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1191,"byte_end":1288,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ | Fuchsia OS       | [`cprng_draw`][11]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1289,"byte_end":1332,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ | Redox            | [`rand:`][12]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1333,"byte_end":1371,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ | CloudABI         | [`cloudabi_sys_random_get`][13]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1372,"byte_end":1428,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/ | Haiku            | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1429,"byte_end":1497,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ | L4RE, SGX, UEFI  | [RDRAND][18]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1498,"byte_end":1535,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ | Hermit           | [RDRAND][18] as [`sys_rand`][22] is currently broken.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1536,"byte_end":1614,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ | Web browsers     | [`Crypto.getRandomValues`][14] (see [Support for WebAssembly and ams.js][14])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1615,"byte_end":1717,"line_start":30,"line_end":30,"column_start":1,"column_end":103}},{"value":"/ | Node.js          | [`crypto.randomBytes`][15] (see [Support for WebAssembly and ams.js][16])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1718,"byte_end":1816,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ | WASI             | [`__wasi_random_get`][17]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1817,"byte_end":1867,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1868,"byte_end":1871,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Getrandom doesn't have a blanket implementation for all Unix-like operating","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1872,"byte_end":1951,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ systems that reads from `/dev/urandom`. This ensures all supported operating","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":1952,"byte_end":2032,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ systems are using the recommended interface and respect maximum buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2033,"byte_end":2107,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ sizes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2108,"byte_end":2118,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2119,"byte_end":2122,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Unsupported targets","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2123,"byte_end":2149,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2150,"byte_end":2153,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ By default, compiling `getrandom` for an unsupported target will result in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2154,"byte_end":2232,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ a compilation error. If you want to build an application which uses `getrandom`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2233,"byte_end":2316,"line_start":42,"line_end":42,"column_start":1,"column_end":84}},{"value":"/ for such target, you can either:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2317,"byte_end":2353,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ - Use [`[replace]`][replace] or [`[patch]`][patch] section in your `Cargo.toml`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2354,"byte_end":2437,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ to switch to a custom implementation with a support of your target.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2438,"byte_end":2509,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ - Enable the `dummy` feature to have getrandom use an implementation that always","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2510,"byte_end":2594,"line_start":46,"line_end":46,"column_start":1,"column_end":85}},{"value":"/ fails at run-time on unsupported targets.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2595,"byte_end":2640,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2641,"byte_end":2644,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [replace]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-replace-section","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2645,"byte_end":2735,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/ [patch]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2736,"byte_end":2822,"line_start":50,"line_end":50,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2823,"byte_end":2826,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Support for WebAssembly and asm.js","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2827,"byte_end":2868,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2869,"byte_end":2872,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Getrandom supports all of Rust's current `wasm32` targets, and it works with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2873,"byte_end":2953,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ both Node.js and web browsers. The three Emscripten targets","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":2954,"byte_end":3017,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/ `asmjs-unknown-emscripten`, `wasm32-unknown-emscripten`, and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3018,"byte_end":3082,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ `wasm32-experimental-emscripten` use Emscripten's `/dev/random` emulation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3083,"byte_end":3161,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ The WASI target `wasm32-wasi` uses the [`__wasi_random_get`][17] function","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3162,"byte_end":3239,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ defined by the WASI standard.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3240,"byte_end":3273,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3274,"byte_end":3277,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Getrandom also supports `wasm32-unknown-unknown` by directly calling","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3278,"byte_end":3350,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ JavaScript methods. Rust currently has two ways to do this: [bindgen] and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3351,"byte_end":3428,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ [stdweb]. Getrandom supports using either one by enabling the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3429,"byte_end":3494,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ `wasm-bindgen` or `stdweb` crate features. Note that if both features are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3495,"byte_end":3572,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ enabled, `wasm-bindgen` will be used. If neither feature is enabled, calls","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3573,"byte_end":3651,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ to `getrandom` will always fail at runtime.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3652,"byte_end":3699,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3700,"byte_end":3703,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [bindgen]: https://github.com/rust-lang/rust-bindgen","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3704,"byte_end":3760,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/ [stdweb]: https://github.com/koute/stdweb","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3761,"byte_end":3806,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3807,"byte_end":3810,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Early boot","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3811,"byte_end":3828,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3829,"byte_end":3832,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ It is possible that early in the boot process the OS hasn't had enough time","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3833,"byte_end":3912,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ yet to collect entropy to securely seed its RNG, especially on virtual","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3913,"byte_end":3987,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ machines.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":3988,"byte_end":4001,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4002,"byte_end":4005,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Some operating systems always block the thread until the RNG is securely","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4006,"byte_end":4082,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ seeded. This can take anywhere from a few seconds to more than a minute.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4083,"byte_end":4159,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ Others make a best effort to use a seed from before the shutdown and don't","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4160,"byte_end":4238,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ document much.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4239,"byte_end":4257,"line_start":80,"line_end":80,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4258,"byte_end":4261,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ A few, Linux, NetBSD and Solaris, offer a choice between blocking and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4262,"byte_end":4335,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ getting an error; in these cases we always choose to block.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4336,"byte_end":4399,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4400,"byte_end":4403,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ On Linux (when the `genrandom` system call is not available) and on NetBSD","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4404,"byte_end":4482,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/ reading from `/dev/urandom` never blocks, even when the OS hasn't collected","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4483,"byte_end":4562,"line_start":86,"line_end":86,"column_start":1,"column_end":80}},{"value":"/ enough entropy yet. To avoid returning low-entropy bytes, we first read from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4563,"byte_end":4643,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ `/dev/random` and only switch to `/dev/urandom` once this has succeeded.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4644,"byte_end":4720,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4721,"byte_end":4724,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Error handling","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4725,"byte_end":4745,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4746,"byte_end":4749,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ We always choose failure over returning insecure \"random\" bytes. In general,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4750,"byte_end":4830,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"/ on supported platforms, failure is highly unlikely, though not impossible.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4831,"byte_end":4909,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ If an error does occur, then it is likely that it will occur on every call to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4910,"byte_end":4991,"line_start":94,"line_end":94,"column_start":1,"column_end":82}},{"value":"/ `getrandom`, hence after the first successful call one can be reasonably","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":4992,"byte_end":5068,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ confident that no errors will occur.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5069,"byte_end":5109,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5110,"byte_end":5113,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ On unsupported platforms, `getrandom` always fails. See the [`Error`] type","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5114,"byte_end":5192,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ for more information on what data is returned on failure.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5193,"byte_end":5254,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5255,"byte_end":5258,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [1]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5259,"byte_end":5321,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/ [2]: http://man7.org/linux/man-pages/man4/urandom.4.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5322,"byte_end":5382,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/ [3]: https://docs.microsoft.com/en-us/windows/desktop/api/ntsecapi/nf-ntsecapi-rtlgenrandom","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5383,"byte_end":5478,"line_start":103,"line_end":103,"column_start":1,"column_end":96}},{"value":"/ [4]: https://developer.apple.com/documentation/security/1399291-secrandomcopybytes?language=objc","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5479,"byte_end":5579,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/ [5]: https://www.freebsd.org/cgi/man.cgi?query=random&sektion=4","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5580,"byte_end":5647,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/ [6]: https://man.openbsd.org/getentropy.2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5648,"byte_end":5693,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"/ [7]: http://netbsd.gw.com/cgi-bin/man-cgi?random+4+NetBSD-current","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5694,"byte_end":5763,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ [8]: https://leaf.dragonflybsd.org/cgi/web-man?command=random&section=4","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5764,"byte_end":5839,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ [9]: https://docs.oracle.com/cd/E88353_01/html/E37841/getrandom-2.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5840,"byte_end":5914,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/ [10]: https://docs.oracle.com/cd/E86824_01/html/E54777/random-7d.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5915,"byte_end":5988,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ [11]: https://fuchsia.dev/fuchsia-src/zircon/syscalls/cprng_draw","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":5989,"byte_end":6057,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [12]: https://github.com/redox-os/randd/blob/master/src/main.rs","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6058,"byte_end":6125,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"/ [13]: https://github.com/nuxinl/cloudabi#random_get","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6126,"byte_end":6181,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/ [14]: https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6182,"byte_end":6257,"line_start":114,"line_end":114,"column_start":1,"column_end":76}},{"value":"/ [15]: https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6258,"byte_end":6342,"line_start":115,"line_end":115,"column_start":1,"column_end":85}},{"value":"/ [16]: #support-for-webassembly-and-amsjs","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6343,"byte_end":6387,"line_start":116,"line_end":116,"column_start":1,"column_end":45}},{"value":"/ [17]: https://github.com/WebAssembly/WASI/blob/master/design/WASI-core.md#__wasi_random_get","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6388,"byte_end":6483,"line_start":117,"line_end":117,"column_start":1,"column_end":96}},{"value":"/ [18]: https://software.intel.com/en-us/articles/intel-digital-random-number-generator-drng-software-implementation-guide","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6484,"byte_end":6608,"line_start":118,"line_end":118,"column_start":1,"column_end":125}},{"value":"/ [19]: https://www.unix.com/man-page/mojave/2/getentropy/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6609,"byte_end":6669,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ [20]: https://www.unix.com/man-page/mojave/4/random/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6670,"byte_end":6726,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"/ [21]: https://www.freebsd.org/cgi/man.cgi?query=getrandom&manpath=FreeBSD+12.0-stable","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6727,"byte_end":6816,"line_start":121,"line_end":121,"column_start":1,"column_end":90}},{"value":"/ [22]: https://github.com/hermitcore/libhermit-rs/blob/09c38b0371cee6f56a541400ba453e319e43db53/src/syscalls/random.rs#L21","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":6817,"byte_end":6942,"line_start":122,"line_end":122,"column_start":1,"column_end":126}},{"value":"no_std","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":7158,"byte_end":7168,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms, unused_lifetimes, missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":7227,"byte_end":7285,"line_start":131,"line_end":131,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12844,"byte_end":12849,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small and `no_std` compatible error type.","sig":null,"attributes":[{"value":"/ A small and `no_std` compatible error type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12361,"byte_end":12408,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12409,"byte_end":12412,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`Error::raw_os_error()`] will indicate if the error is from the OS, and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12413,"byte_end":12493,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ if so, which error code the OS gave the application. If such an error is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12494,"byte_end":12570,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ encountered, please consult with your system documentation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12571,"byte_end":12634,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12635,"byte_end":12638,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Internally this type is a NonZeroU32, with certain values reserved for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12639,"byte_end":12713,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ certain purposes, see [`Error::INTERNAL_START`] and [`Error::CUSTOM_START`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12714,"byte_end":12794,"line_start":18,"line_end":18,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12949,"byte_end":12956,"line_start":25,"line_end":25,"column_start":15,"column_end":22},"name":"UNKNOWN","qualname":"::error::Error::UNKNOWN","value":"Error","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.7\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12881,"byte_end":12911,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/ Unknown error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12916,"byte_end":12934,"line_start":24,"line_end":24,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13074,"byte_end":13085,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"name":"UNAVAILABLE","qualname":"::error::Error::UNAVAILABLE","value":"Error","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" System entropy source is unavailable.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.7\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12983,"byte_end":13013,"line_start":26,"line_end":26,"column_start":5,"column_end":35}},{"value":"/ System entropy source is unavailable.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13018,"byte_end":13059,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13341,"byte_end":13355,"line_start":33,"line_end":33,"column_start":15,"column_end":29},"name":"INTERNAL_START","qualname":"::error::Error::INTERNAL_START","value":"u32","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Codes below this point represent OS Errors (i.e. positive i32 values).\n Codes at or above this point, but below [`Error::CUSTOM_START`] are\n reserved for use by the `rand` and `getrandom` crates.\n","sig":null,"attributes":[{"value":"/ Codes below this point represent OS Errors (i.e. positive i32 values).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13113,"byte_end":13187,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ Codes at or above this point, but below [`Error::CUSTOM_START`] are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13192,"byte_end":13263,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ reserved for use by the `rand` and `getrandom` crates.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13268,"byte_end":13326,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13488,"byte_end":13500,"line_start":37,"line_end":37,"column_start":15,"column_end":27},"name":"CUSTOM_START","qualname":"::error::Error::CUSTOM_START","value":"u32","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Codes at or above this point can be used by users to define their own\n custom errors.\n","sig":null,"attributes":[{"value":"/ Codes at or above this point can be used by users to define their own","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13377,"byte_end":13450,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ custom errors.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13455,"byte_end":13473,"line_start":36,"line_end":36,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13868,"byte_end":13880,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"pub fn raw_os_error(Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw OS error code (if this error came from the OS)","sig":null,"attributes":[{"value":"/ Extract the raw OS error code (if this error came from the OS)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13536,"byte_end":13602,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13607,"byte_end":13610,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method is identical to `std::io::Error::raw_os_error()`, except","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13615,"byte_end":13687,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ that it works in `no_std` contexts. If this method returns `None`, the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13692,"byte_end":13766,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ error value can still be formatted via the `Diplay` implementation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13771,"byte_end":13842,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":13847,"byte_end":13856,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14247,"byte_end":14251,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"code","qualname":"<Error>::code","value":"pub fn code(Self) -> NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":" Extract the bare error code.","sig":null,"attributes":[{"value":"/ Extract the bare error code.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14046,"byte_end":14078,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14083,"byte_end":14086,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This code can either come from the underlying OS, or be a custom error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14091,"byte_end":14166,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ Use [`Error::raw_os_error()`] to disambiguate.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14171,"byte_end":14221,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14226,"byte_end":14235,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11872,"byte_end":11881,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"getrandom","qualname":"::getrandom","value":"pub fn getrandom(&mut [u8]) -> Result<(), error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill `dest` with random bytes from the system's preferred random number\n source.","sig":null,"attributes":[{"value":"/ Fill `dest` with random bytes from the system's preferred random number","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11313,"byte_end":11388,"line_start":263,"line_end":263,"column_start":1,"column_end":76}},{"value":"/ source.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11389,"byte_end":11400,"line_start":264,"line_end":264,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11401,"byte_end":11404,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ This function returns an error on any failure, including partial reads. We","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11405,"byte_end":11483,"line_start":266,"line_end":266,"column_start":1,"column_end":79}},{"value":"/ make no guarantees regarding the contents of `dest` on error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11484,"byte_end":11549,"line_start":267,"line_end":267,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11550,"byte_end":11553,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ Blocking is possible, at least during early boot; see module documentation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11554,"byte_end":11633,"line_start":269,"line_end":269,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11634,"byte_end":11637,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ In general, `getrandom` will be fast enough for interactive usage, though","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11638,"byte_end":11715,"line_start":271,"line_end":271,"column_start":1,"column_end":78}},{"value":"/ significantly slower than a user-space CSPRNG; for the latter consider","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11716,"byte_end":11790,"line_start":272,"line_end":272,"column_start":1,"column_end":75}},{"value":"/ [`rand::thread_rng`](https://docs.rs/rand/*/rand/fn.thread_rng.html).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\lib.rs","byte_start":11791,"byte_end":11864,"line_start":273,"line_end":273,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12869,"byte_end":12874,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14858,"byte_end":14863,"line_start":81,"line_end":81,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":15525,"byte_end":15530,"line_start":100,"line_end":100,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":16062,"byte_end":16067,"line_start":116,"line_end":116,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\util.rs","byte_start":19461,"byte_end":19470,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\util.rs","byte_start":21673,"byte_end":21681,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22395,"byte_end":22400,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22680,"byte_end":22685,"line_start":26,"line_end":26,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22930,"byte_end":22935,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":12869,"byte_end":12874,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":14858,"byte_end":14863,"line_start":81,"line_end":81,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":15525,"byte_end":15530,"line_start":100,"line_end":100,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error.rs","byte_start":16062,"byte_end":16067,"line_start":116,"line_end":116,"column_start":27,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\util.rs","byte_start":19461,"byte_end":19470,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\util.rs","byte_start":21673,"byte_end":21681,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22395,"byte_end":22400,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22680,"byte_end":22685,"line_start":26,"line_end":26,"column_start":26,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":2659},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\getrandom-0.1.10\\src\\error_impls.rs","byte_start":22930,"byte_end":22935,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":79},"to":{"krate":5,"index":1720}}]}