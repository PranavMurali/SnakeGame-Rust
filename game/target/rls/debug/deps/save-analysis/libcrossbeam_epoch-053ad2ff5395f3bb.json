{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2","program":"C:\\Users\\Pranav\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=053ad2ff5395f3bb","-C","extra-filename=-053ad2ff5395f3bb","--out-dir","f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","--extern","arrayvec=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libarrayvec-f3cb53df79745edf.rmeta","--extern","cfg_if=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcfg_if-35fa30235f11c2d1.rmeta","--extern","crossbeam_utils=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcrossbeam_utils-82c21ed09ed18818.rmeta","--extern","lazy_static=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\liblazy_static-5e2dbdbc894cc0a5.rmeta","--extern","memoffset=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libmemoffset-42e4cbd7ef50039b.rmeta","--extern","scopeguard=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libscopeguard-19a89fa4d6b01cdf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pranav\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcrossbeam_epoch-053ad2ff5395f3bb.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[6892001264834159939,7775472202257045174]},"crate_root":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src","external_crates":[{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[3765223586286468020,8905192521727625958]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":14,"id":{"name":"arrayvec","disambiguator":[11563243034863110384,7675451055610069323]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":15,"id":{"name":"nodrop","disambiguator":[17793049393425882433,13999540853910940507]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":16,"id":{"name":"crossbeam_utils","disambiguator":[15252322891328332338,9207682984445073907]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":17,"id":{"name":"lazy_static","disambiguator":[6809859229561447421,5375163887299390715]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":18,"id":{"name":"memoffset","disambiguator":[7973753861615305952,8223003288457406633]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","num":19,"id":{"name":"scopeguard","disambiguator":[11591700275758915249,6308026967918677093]}}],"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":4228,"line_start":1,"line_end":111,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3838,"byte_end":3844,"line_start":97,"line_end":97,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3846,"byte_end":3864,"line_start":97,"line_end":97,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3866,"byte_end":3887,"line_start":97,"line_end":97,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3889,"byte_end":3894,"line_start":97,"line_end":97,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3896,"byte_end":3903,"line_start":97,"line_end":97,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3905,"byte_end":3911,"line_start":97,"line_end":97,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3948,"byte_end":3957,"line_start":98,"line_end":98,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":3959,"byte_end":3970,"line_start":98,"line_end":98,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":4003,"byte_end":4014,"line_start":99,"line_end":99,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":4016,"byte_end":4021,"line_start":99,"line_end":99,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":4185,"byte_end":4202,"line_start":109,"line_end":109,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":4204,"byte_end":4213,"line_start":109,"line_end":109,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":4215,"byte_end":4218,"line_start":109,"line_end":109,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":4228,"line_start":1,"line_end":111,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":243},{"krate":0,"index":274},{"krate":0,"index":297},{"krate":0,"index":313},{"krate":0,"index":346},{"krate":0,"index":428},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [`Collector`]: struct.Collector.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ [`defer`]: fn.defer.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2821,"byte_end":2849,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2851,"byte_end":2873,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\lib.rs","byte_start":2874,"byte_end":2913,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039594,"byte_end":7039612,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039523,"byte_end":7039582,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039726,"byte_end":7039733,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039645,"byte_end":7039717,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039819,"byte_end":7039822,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039755,"byte_end":7039810,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040707,"byte_end":7040728,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040137,"byte_end":7040189,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040190,"byte_end":7040193,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040194,"byte_end":7040285,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040286,"byte_end":7040378,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040379,"byte_end":7040382,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040383,"byte_end":7040448,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040449,"byte_end":7040452,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040453,"byte_end":7040547,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040548,"byte_end":7040574,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040575,"byte_end":7040667,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040668,"byte_end":7040696,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040794,"byte_end":7040801,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040735,"byte_end":7040786,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7041019,"byte_end":7041026,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040827,"byte_end":7040875,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040880,"byte_end":7040883,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040888,"byte_end":7040981,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7040986,"byte_end":7041011,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042798,"byte_end":7042804,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042359,"byte_end":7042423,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042424,"byte_end":7042427,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042428,"byte_end":7042526,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042527,"byte_end":7042619,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042620,"byte_end":7042664,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042665,"byte_end":7042668,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042669,"byte_end":7042749,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042750,"byte_end":7042753,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042754,"byte_end":7042786,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043450,"byte_end":7043454,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043220,"byte_end":7043258,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043263,"byte_end":7043266,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043271,"byte_end":7043285,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043290,"byte_end":7043293,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043298,"byte_end":7043305,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043310,"byte_end":7043342,"line_start":149,"line_end":149,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043347,"byte_end":7043350,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043355,"byte_end":7043389,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043394,"byte_end":7043401,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043406,"byte_end":7043438,"line_start":153,"line_end":153,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044176,"byte_end":7044179,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7043943,"byte_end":7044025,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044030,"byte_end":7044033,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044038,"byte_end":7044052,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044057,"byte_end":7044060,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044065,"byte_end":7044072,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044077,"byte_end":7044109,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044114,"byte_end":7044117,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044122,"byte_end":7044152,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044157,"byte_end":7044164,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044803,"byte_end":7044807,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044254,"byte_end":7044299,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044304,"byte_end":7044307,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044312,"byte_end":7044402,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044407,"byte_end":7044421,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044426,"byte_end":7044429,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044434,"byte_end":7044512,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044517,"byte_end":7044520,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044525,"byte_end":7044539,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044544,"byte_end":7044547,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044552,"byte_end":7044559,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044564,"byte_end":7044613,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044618,"byte_end":7044662,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044667,"byte_end":7044670,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044675,"byte_end":7044705,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044710,"byte_end":7044740,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044745,"byte_end":7044779,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044784,"byte_end":7044791,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045814,"byte_end":7045826,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7044937,"byte_end":7045016,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045021,"byte_end":7045024,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045029,"byte_end":7045102,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045107,"byte_end":7045183,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045188,"byte_end":7045259,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045264,"byte_end":7045338,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045343,"byte_end":7045366,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045371,"byte_end":7045374,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045379,"byte_end":7045454,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045459,"byte_end":7045533,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045538,"byte_end":7045572,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045577,"byte_end":7045580,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045585,"byte_end":7045599,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045604,"byte_end":7045607,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045612,"byte_end":7045619,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045624,"byte_end":7045673,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045678,"byte_end":7045681,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045686,"byte_end":7045716,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045721,"byte_end":7045751,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045756,"byte_end":7045790,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045795,"byte_end":7045802,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046540,"byte_end":7046545,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<'g, P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7045946,"byte_end":7046011,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046016,"byte_end":7046019,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046024,"byte_end":7046114,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046119,"byte_end":7046133,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046138,"byte_end":7046141,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046146,"byte_end":7046224,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046229,"byte_end":7046232,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046237,"byte_end":7046251,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046256,"byte_end":7046259,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046264,"byte_end":7046271,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046276,"byte_end":7046340,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046345,"byte_end":7046389,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046394,"byte_end":7046397,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046402,"byte_end":7046432,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046437,"byte_end":7046473,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046478,"byte_end":7046516,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046521,"byte_end":7046528,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047297,"byte_end":7047301,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046656,"byte_end":7046744,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046749,"byte_end":7046762,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046767,"byte_end":7046770,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046775,"byte_end":7046865,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046870,"byte_end":7046884,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046889,"byte_end":7046892,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046897,"byte_end":7046975,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046980,"byte_end":7046983,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7046988,"byte_end":7047002,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047007,"byte_end":7047010,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047015,"byte_end":7047022,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047027,"byte_end":7047091,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047096,"byte_end":7047140,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047145,"byte_end":7047148,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047153,"byte_end":7047183,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047188,"byte_end":7047218,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047223,"byte_end":7047273,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047278,"byte_end":7047285,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048648,"byte_end":7048663,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047472,"byte_end":7047568,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047573,"byte_end":7047667,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047672,"byte_end":7047743,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047748,"byte_end":7047751,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047756,"byte_end":7047851,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047856,"byte_end":7047947,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047952,"byte_end":7047965,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047970,"byte_end":7047973,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7047978,"byte_end":7048063,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048068,"byte_end":7048099,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048104,"byte_end":7048107,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048112,"byte_end":7048175,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048180,"byte_end":7048183,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048188,"byte_end":7048202,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048207,"byte_end":7048210,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048215,"byte_end":7048222,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048227,"byte_end":7048291,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048296,"byte_end":7048340,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048345,"byte_end":7048348,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048353,"byte_end":7048383,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048388,"byte_end":7048391,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048396,"byte_end":7048426,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048431,"byte_end":7048472,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048477,"byte_end":7048547,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048552,"byte_end":7048624,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7048629,"byte_end":7048636,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051214,"byte_end":7051234,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049328,"byte_end":7049424,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049429,"byte_end":7049523,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049528,"byte_end":7049599,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049604,"byte_end":7049607,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049612,"byte_end":7049706,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049711,"byte_end":7049806,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049811,"byte_end":7049901,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049906,"byte_end":7049990,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7049995,"byte_end":7049998,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050003,"byte_end":7050088,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050093,"byte_end":7050124,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050129,"byte_end":7050132,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050137,"byte_end":7050203,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050208,"byte_end":7050271,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050276,"byte_end":7050279,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050284,"byte_end":7050298,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050303,"byte_end":7050306,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050311,"byte_end":7050318,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050323,"byte_end":7050387,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050392,"byte_end":7050436,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050441,"byte_end":7050444,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050449,"byte_end":7050479,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050484,"byte_end":7050514,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050519,"byte_end":7050522,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050527,"byte_end":7050562,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050567,"byte_end":7050607,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050612,"byte_end":7050622,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050627,"byte_end":7050690,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050695,"byte_end":7050717,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050722,"byte_end":7050746,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050751,"byte_end":7050773,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050778,"byte_end":7050791,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050796,"byte_end":7050821,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050826,"byte_end":7050860,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050865,"byte_end":7050895,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050900,"byte_end":7050913,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050918,"byte_end":7050927,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050932,"byte_end":7050937,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050942,"byte_end":7050945,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050950,"byte_end":7050991,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7050996,"byte_end":7051006,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051011,"byte_end":7051086,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051091,"byte_end":7051118,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051123,"byte_end":7051166,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051171,"byte_end":7051180,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051185,"byte_end":7051190,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051195,"byte_end":7051202,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052726,"byte_end":7052735,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051904,"byte_end":7051943,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051948,"byte_end":7051951,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7051956,"byte_end":7052050,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052055,"byte_end":7052111,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052116,"byte_end":7052119,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052124,"byte_end":7052214,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052219,"byte_end":7052233,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052238,"byte_end":7052241,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052246,"byte_end":7052324,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052329,"byte_end":7052332,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052337,"byte_end":7052351,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052356,"byte_end":7052359,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052364,"byte_end":7052371,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052376,"byte_end":7052433,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052438,"byte_end":7052482,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052487,"byte_end":7052490,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052495,"byte_end":7052555,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052560,"byte_end":7052590,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052595,"byte_end":7052650,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052655,"byte_end":7052702,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052707,"byte_end":7052714,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053725,"byte_end":7053733,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052906,"byte_end":7052944,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052949,"byte_end":7052952,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7052957,"byte_end":7053050,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053055,"byte_end":7053111,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053116,"byte_end":7053119,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053124,"byte_end":7053214,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053219,"byte_end":7053233,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053238,"byte_end":7053241,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053246,"byte_end":7053324,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053329,"byte_end":7053332,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053337,"byte_end":7053351,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053356,"byte_end":7053359,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053364,"byte_end":7053371,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053376,"byte_end":7053433,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053438,"byte_end":7053482,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053487,"byte_end":7053490,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053495,"byte_end":7053555,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053560,"byte_end":7053590,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053595,"byte_end":7053649,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053654,"byte_end":7053701,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053706,"byte_end":7053713,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054724,"byte_end":7054733,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053902,"byte_end":7053941,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053946,"byte_end":7053949,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7053954,"byte_end":7054048,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054053,"byte_end":7054109,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054114,"byte_end":7054117,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054122,"byte_end":7054212,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054217,"byte_end":7054231,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054236,"byte_end":7054239,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054244,"byte_end":7054322,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054327,"byte_end":7054330,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054335,"byte_end":7054349,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054354,"byte_end":7054357,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054362,"byte_end":7054369,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054374,"byte_end":7054431,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054436,"byte_end":7054480,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054485,"byte_end":7054488,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054493,"byte_end":7054553,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054558,"byte_end":7054588,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054593,"byte_end":7054648,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054653,"byte_end":7054700,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054705,"byte_end":7054712,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056030,"byte_end":7056040,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054903,"byte_end":7054938,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054943,"byte_end":7054946,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7054951,"byte_end":7055040,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055045,"byte_end":7055131,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055136,"byte_end":7055171,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055176,"byte_end":7055179,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055184,"byte_end":7055196,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055201,"byte_end":7055204,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055209,"byte_end":7055268,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055273,"byte_end":7055276,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055281,"byte_end":7055293,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055298,"byte_end":7055301,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055306,"byte_end":7055393,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055398,"byte_end":7055431,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055436,"byte_end":7055439,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055444,"byte_end":7055458,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055463,"byte_end":7055466,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055471,"byte_end":7055482,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055487,"byte_end":7055506,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055511,"byte_end":7055545,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055550,"byte_end":7055576,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055581,"byte_end":7055608,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055613,"byte_end":7055618,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055623,"byte_end":7055626,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055631,"byte_end":7055664,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055669,"byte_end":7055697,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055702,"byte_end":7055796,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055801,"byte_end":7055848,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055853,"byte_end":7055873,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055878,"byte_end":7055957,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055962,"byte_end":7055975,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055980,"byte_end":7055989,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7055994,"byte_end":7055999,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056004,"byte_end":7056011,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058510,"byte_end":7058517,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058447,"byte_end":7058499,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058589,"byte_end":7058599,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058527,"byte_end":7058581,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058700,"byte_end":7058710,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058621,"byte_end":7058685,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058976,"byte_end":7058981,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058736,"byte_end":7058771,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058772,"byte_end":7058775,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058776,"byte_end":7058818,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058819,"byte_end":7058822,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058823,"byte_end":7058921,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058922,"byte_end":7058964,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059827,"byte_end":7059830,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059597,"byte_end":7059678,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059683,"byte_end":7059686,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059691,"byte_end":7059705,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059710,"byte_end":7059713,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059718,"byte_end":7059725,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059730,"byte_end":7059761,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059766,"byte_end":7059769,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059774,"byte_end":7059803,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059808,"byte_end":7059815,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060464,"byte_end":7060472,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059902,"byte_end":7059952,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059957,"byte_end":7059960,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059965,"byte_end":7060057,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060062,"byte_end":7060155,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060160,"byte_end":7060185,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060190,"byte_end":7060193,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060198,"byte_end":7060210,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060215,"byte_end":7060218,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060223,"byte_end":7060267,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060272,"byte_end":7060275,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060280,"byte_end":7060294,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060299,"byte_end":7060302,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060307,"byte_end":7060314,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060319,"byte_end":7060350,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060355,"byte_end":7060358,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060363,"byte_end":7060433,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060438,"byte_end":7060445,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060914,"byte_end":7060925,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060579,"byte_end":7060628,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060633,"byte_end":7060636,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060641,"byte_end":7060655,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060660,"byte_end":7060663,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060668,"byte_end":7060675,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060680,"byte_end":7060728,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060733,"byte_end":7060736,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060741,"byte_end":7060770,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060775,"byte_end":7060805,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060810,"byte_end":7060843,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060848,"byte_end":7060855,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060860,"byte_end":7060863,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7060868,"byte_end":7060902,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061317,"byte_end":7061325,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061037,"byte_end":7061081,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061086,"byte_end":7061089,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061094,"byte_end":7061108,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061113,"byte_end":7061116,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061121,"byte_end":7061128,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061133,"byte_end":7061181,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061186,"byte_end":7061189,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061194,"byte_end":7061223,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061228,"byte_end":7061263,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061268,"byte_end":7061293,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061298,"byte_end":7061305,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061683,"byte_end":7061686,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061475,"byte_end":7061521,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061526,"byte_end":7061529,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061534,"byte_end":7061548,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061553,"byte_end":7061556,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061561,"byte_end":7061568,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061573,"byte_end":7061604,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061609,"byte_end":7061612,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061617,"byte_end":7061659,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061664,"byte_end":7061671,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062160,"byte_end":7062168,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061783,"byte_end":7061873,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061878,"byte_end":7061916,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061921,"byte_end":7061924,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061929,"byte_end":7061943,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061948,"byte_end":7061951,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061956,"byte_end":7061963,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7061968,"byte_end":7061999,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062004,"byte_end":7062007,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062012,"byte_end":7062041,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062046,"byte_end":7062073,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062078,"byte_end":7062104,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062109,"byte_end":7062136,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062141,"byte_end":7062148,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064448,"byte_end":7064454,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064169,"byte_end":7064222,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064223,"byte_end":7064226,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064227,"byte_end":7064290,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064291,"byte_end":7064294,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064295,"byte_end":7064393,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064394,"byte_end":7064436,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065261,"byte_end":7065265,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065045,"byte_end":7065076,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065081,"byte_end":7065084,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065089,"byte_end":7065103,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065108,"byte_end":7065111,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065116,"byte_end":7065123,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065128,"byte_end":7065160,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065165,"byte_end":7065168,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065173,"byte_end":7065207,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065212,"byte_end":7065237,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065242,"byte_end":7065249,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065822,"byte_end":7065829,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065380,"byte_end":7065422,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065427,"byte_end":7065430,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065435,"byte_end":7065449,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065454,"byte_end":7065457,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065462,"byte_end":7065469,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065474,"byte_end":7065530,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065535,"byte_end":7065579,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065584,"byte_end":7065587,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065592,"byte_end":7065619,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065624,"byte_end":7065654,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065659,"byte_end":7065704,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065709,"byte_end":7065747,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065752,"byte_end":7065798,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065803,"byte_end":7065810,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066360,"byte_end":7066366,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065890,"byte_end":7065950,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065955,"byte_end":7065958,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065963,"byte_end":7065977,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065982,"byte_end":7065985,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065990,"byte_end":7065997,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066002,"byte_end":7066058,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066063,"byte_end":7066107,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066112,"byte_end":7066115,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066120,"byte_end":7066149,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066154,"byte_end":7066184,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066189,"byte_end":7066217,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066222,"byte_end":7066225,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066230,"byte_end":7066260,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066265,"byte_end":7066299,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066304,"byte_end":7066336,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066341,"byte_end":7066348,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067645,"byte_end":7067650,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066466,"byte_end":7066495,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066500,"byte_end":7066503,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066508,"byte_end":7066586,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066591,"byte_end":7066594,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066599,"byte_end":7066611,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066616,"byte_end":7066619,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066624,"byte_end":7066709,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066714,"byte_end":7066717,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066722,"byte_end":7066812,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066817,"byte_end":7066866,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066871,"byte_end":7066874,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066879,"byte_end":7066951,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7066956,"byte_end":7067031,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067036,"byte_end":7067039,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067044,"byte_end":7067137,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067142,"byte_end":7067235,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067240,"byte_end":7067278,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067283,"byte_end":7067286,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067291,"byte_end":7067305,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067310,"byte_end":7067313,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067318,"byte_end":7067325,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067330,"byte_end":7067379,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067384,"byte_end":7067428,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067433,"byte_end":7067436,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067441,"byte_end":7067471,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067476,"byte_end":7067506,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067511,"byte_end":7067545,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067550,"byte_end":7067562,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067567,"byte_end":7067604,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067609,"byte_end":7067614,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067619,"byte_end":7067626,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068864,"byte_end":7068873,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067704,"byte_end":7067733,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067738,"byte_end":7067741,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067746,"byte_end":7067832,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067837,"byte_end":7067840,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067845,"byte_end":7067857,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067862,"byte_end":7067865,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067870,"byte_end":7067965,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7067970,"byte_end":7068007,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068012,"byte_end":7068015,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068020,"byte_end":7068109,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068114,"byte_end":7068117,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068122,"byte_end":7068196,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068201,"byte_end":7068204,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068209,"byte_end":7068223,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068228,"byte_end":7068231,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068236,"byte_end":7068243,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068248,"byte_end":7068297,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068302,"byte_end":7068346,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068351,"byte_end":7068354,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068359,"byte_end":7068401,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068406,"byte_end":7068436,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068441,"byte_end":7068444,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068449,"byte_end":7068487,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068492,"byte_end":7068504,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068509,"byte_end":7068539,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068544,"byte_end":7068574,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068579,"byte_end":7068620,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068625,"byte_end":7068643,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068648,"byte_end":7068692,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068697,"byte_end":7068702,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068707,"byte_end":7068710,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068715,"byte_end":7068749,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068754,"byte_end":7068766,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068771,"byte_end":7068823,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068828,"byte_end":7068833,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068838,"byte_end":7068845,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070165,"byte_end":7070171,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068951,"byte_end":7068991,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7068996,"byte_end":7068999,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069004,"byte_end":7069099,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069104,"byte_end":7069107,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069112,"byte_end":7069124,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069129,"byte_end":7069132,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069137,"byte_end":7069222,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069227,"byte_end":7069230,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069235,"byte_end":7069325,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069330,"byte_end":7069379,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069384,"byte_end":7069387,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069392,"byte_end":7069464,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069469,"byte_end":7069544,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069549,"byte_end":7069552,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069557,"byte_end":7069650,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069655,"byte_end":7069748,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069753,"byte_end":7069791,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069796,"byte_end":7069799,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069804,"byte_end":7069818,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069823,"byte_end":7069826,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069831,"byte_end":7069838,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069843,"byte_end":7069892,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069897,"byte_end":7069941,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069946,"byte_end":7069949,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069954,"byte_end":7069984,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7069989,"byte_end":7070019,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070024,"byte_end":7070058,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070063,"byte_end":7070075,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070080,"byte_end":7070124,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070129,"byte_end":7070134,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070139,"byte_end":7070146,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070910,"byte_end":7070920,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070240,"byte_end":7070275,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070280,"byte_end":7070283,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070288,"byte_end":7070300,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070305,"byte_end":7070308,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070313,"byte_end":7070372,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070377,"byte_end":7070380,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070385,"byte_end":7070397,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070402,"byte_end":7070405,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070410,"byte_end":7070497,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070502,"byte_end":7070535,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070540,"byte_end":7070543,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070548,"byte_end":7070562,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070567,"byte_end":7070570,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070575,"byte_end":7070582,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070587,"byte_end":7070636,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070641,"byte_end":7070685,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070690,"byte_end":7070693,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070698,"byte_end":7070728,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070733,"byte_end":7070745,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070750,"byte_end":7070792,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070797,"byte_end":7070835,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070840,"byte_end":7070869,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070874,"byte_end":7070879,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7070884,"byte_end":7070891,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071527,"byte_end":7071530,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071119,"byte_end":7071165,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071170,"byte_end":7071173,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071178,"byte_end":7071192,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071197,"byte_end":7071200,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071205,"byte_end":7071212,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071217,"byte_end":7071273,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071278,"byte_end":7071322,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071327,"byte_end":7071330,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071335,"byte_end":7071397,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071402,"byte_end":7071432,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071437,"byte_end":7071471,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071476,"byte_end":7071503,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071508,"byte_end":7071515,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072205,"byte_end":7072213,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071627,"byte_end":7071717,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071722,"byte_end":7071760,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071765,"byte_end":7071768,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071773,"byte_end":7071787,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071792,"byte_end":7071795,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071800,"byte_end":7071807,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071812,"byte_end":7071861,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071866,"byte_end":7071910,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071915,"byte_end":7071918,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071923,"byte_end":7071953,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071958,"byte_end":7071988,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7071993,"byte_end":7072028,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072033,"byte_end":7072061,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072066,"byte_end":7072069,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072074,"byte_end":7072102,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072107,"byte_end":7072135,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072140,"byte_end":7072181,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072186,"byte_end":7072193,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074541,"byte_end":7074550,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074492,"byte_end":7074529,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074722,"byte_end":7074725,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074682,"byte_end":7074710,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074881,"byte_end":7074889,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074824,"byte_end":7074869,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075553,"byte_end":7075564,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075505,"byte_end":7075541,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075675,"byte_end":7075678,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075629,"byte_end":7075649,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075654,"byte_end":7075663,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075816,"byte_end":7075825,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075747,"byte_end":7075790,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075795,"byte_end":7075804,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075981,"byte_end":7075990,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075899,"byte_end":7075955,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075960,"byte_end":7075969,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094544,"byte_end":7094549,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":321}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092820,"byte_end":7092869,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092870,"byte_end":7092873,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092874,"byte_end":7092887,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092888,"byte_end":7092891,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092892,"byte_end":7092971,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092972,"byte_end":7092975,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092976,"byte_end":7092983,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7092984,"byte_end":7093017,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093018,"byte_end":7093021,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093022,"byte_end":7093120,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093121,"byte_end":7093213,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093214,"byte_end":7093244,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093245,"byte_end":7093252,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093253,"byte_end":7093256,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093257,"byte_end":7093333,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093334,"byte_end":7093337,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093338,"byte_end":7093365,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093366,"byte_end":7093369,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093370,"byte_end":7093457,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093458,"byte_end":7093474,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093475,"byte_end":7093478,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093479,"byte_end":7093486,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093487,"byte_end":7093543,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093544,"byte_end":7093588,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093589,"byte_end":7093592,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093593,"byte_end":7093631,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093632,"byte_end":7093661,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093662,"byte_end":7093665,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093666,"byte_end":7093696,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093697,"byte_end":7093727,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093728,"byte_end":7093731,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093732,"byte_end":7093806,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093807,"byte_end":7093841,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093842,"byte_end":7093845,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093846,"byte_end":7093897,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093898,"byte_end":7093944,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093945,"byte_end":7093988,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093989,"byte_end":7093994,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7093995,"byte_end":7094002,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094003,"byte_end":7094006,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094007,"byte_end":7094028,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094029,"byte_end":7094032,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094033,"byte_end":7094128,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094129,"byte_end":7094227,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094228,"byte_end":7094247,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094248,"byte_end":7094251,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094252,"byte_end":7094259,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094260,"byte_end":7094293,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094294,"byte_end":7094297,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094298,"byte_end":7094328,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094329,"byte_end":7094359,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094360,"byte_end":7094392,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094393,"byte_end":7094410,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094411,"byte_end":7094443,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094444,"byte_end":7094461,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094462,"byte_end":7094495,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094496,"byte_end":7094503,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094504,"byte_end":7094507,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094508,"byte_end":7094532,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095577,"byte_end":7095582,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094608,"byte_end":7094697,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094702,"byte_end":7094727,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094732,"byte_end":7094735,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094740,"byte_end":7094833,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094838,"byte_end":7094926,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094931,"byte_end":7095021,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095026,"byte_end":7095066,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095071,"byte_end":7095074,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095079,"byte_end":7095169,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095174,"byte_end":7095265,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095270,"byte_end":7095357,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095362,"byte_end":7095382,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095387,"byte_end":7095390,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095395,"byte_end":7095482,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095487,"byte_end":7095512,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095517,"byte_end":7095520,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095525,"byte_end":7095565,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099935,"byte_end":7099950,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095746,"byte_end":7095835,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095840,"byte_end":7095865,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095870,"byte_end":7095873,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095878,"byte_end":7095971,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7095976,"byte_end":7096064,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096069,"byte_end":7096159,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096164,"byte_end":7096204,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096209,"byte_end":7096212,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096217,"byte_end":7096307,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096312,"byte_end":7096403,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096408,"byte_end":7096495,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096500,"byte_end":7096520,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096525,"byte_end":7096528,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096533,"byte_end":7096620,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096625,"byte_end":7096650,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096655,"byte_end":7096658,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096663,"byte_end":7096675,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096680,"byte_end":7096683,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096688,"byte_end":7096780,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096785,"byte_end":7096872,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096877,"byte_end":7096889,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096894,"byte_end":7096897,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096902,"byte_end":7096909,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096914,"byte_end":7096947,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096952,"byte_end":7096955,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096960,"byte_end":7096990,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7096995,"byte_end":7097022,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097027,"byte_end":7097039,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097044,"byte_end":7097119,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097124,"byte_end":7097163,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097168,"byte_end":7097204,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097209,"byte_end":7097220,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097225,"byte_end":7097230,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097235,"byte_end":7097242,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097247,"byte_end":7097250,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097255,"byte_end":7097349,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097354,"byte_end":7097385,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097390,"byte_end":7097393,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097398,"byte_end":7097493,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097498,"byte_end":7097590,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097595,"byte_end":7097684,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097689,"byte_end":7097692,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097697,"byte_end":7097710,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097715,"byte_end":7097768,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097773,"byte_end":7097855,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097860,"byte_end":7097867,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097872,"byte_end":7097875,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097880,"byte_end":7097973,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7097978,"byte_end":7098073,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098078,"byte_end":7098138,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098143,"byte_end":7098146,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098151,"byte_end":7098165,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098170,"byte_end":7098173,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098178,"byte_end":7098264,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098269,"byte_end":7098363,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098368,"byte_end":7098464,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098469,"byte_end":7098561,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098566,"byte_end":7098622,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098627,"byte_end":7098630,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098635,"byte_end":7098642,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098647,"byte_end":7098703,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098708,"byte_end":7098752,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098757,"byte_end":7098760,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098765,"byte_end":7098796,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098801,"byte_end":7098804,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098809,"byte_end":7098886,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098891,"byte_end":7098922,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098927,"byte_end":7098930,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098935,"byte_end":7098965,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7098970,"byte_end":7099000,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099005,"byte_end":7099008,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099013,"byte_end":7099090,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099095,"byte_end":7099167,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099172,"byte_end":7099175,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099180,"byte_end":7099201,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099206,"byte_end":7099266,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099271,"byte_end":7099353,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099358,"byte_end":7099374,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099379,"byte_end":7099458,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099463,"byte_end":7099506,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099511,"byte_end":7099579,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099584,"byte_end":7099676,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099681,"byte_end":7099765,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099770,"byte_end":7099807,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099812,"byte_end":7099827,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099832,"byte_end":7099841,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099846,"byte_end":7099851,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099856,"byte_end":7099863,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099868,"byte_end":7099871,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7099876,"byte_end":7099916,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103550,"byte_end":7103563,"line_start":269,"line_end":269,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100149,"byte_end":7100242,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100247,"byte_end":7100299,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100304,"byte_end":7100307,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100312,"byte_end":7100405,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100410,"byte_end":7100500,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100505,"byte_end":7100594,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100599,"byte_end":7100653,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100658,"byte_end":7100661,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100666,"byte_end":7100759,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100764,"byte_end":7100857,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100862,"byte_end":7100955,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100960,"byte_end":7100991,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7100996,"byte_end":7100999,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101004,"byte_end":7101093,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101098,"byte_end":7101123,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101128,"byte_end":7101131,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101136,"byte_end":7101148,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101153,"byte_end":7101156,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101161,"byte_end":7101254,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101259,"byte_end":7101292,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101297,"byte_end":7101300,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101305,"byte_end":7101400,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101405,"byte_end":7101443,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101448,"byte_end":7101451,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101456,"byte_end":7101551,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101556,"byte_end":7101648,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101653,"byte_end":7101742,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101747,"byte_end":7101750,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101755,"byte_end":7101768,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101773,"byte_end":7101826,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101831,"byte_end":7101890,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101895,"byte_end":7101902,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101907,"byte_end":7101910,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7101915,"byte_end":7102009,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102014,"byte_end":7102101,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102106,"byte_end":7102166,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102171,"byte_end":7102174,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102179,"byte_end":7102193,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102198,"byte_end":7102201,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102206,"byte_end":7102292,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102297,"byte_end":7102391,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102396,"byte_end":7102492,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102497,"byte_end":7102589,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102594,"byte_end":7102650,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102655,"byte_end":7102658,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102663,"byte_end":7102670,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102675,"byte_end":7102731,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102736,"byte_end":7102780,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102785,"byte_end":7102788,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102793,"byte_end":7102824,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102829,"byte_end":7102832,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102837,"byte_end":7102914,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102919,"byte_end":7102950,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102955,"byte_end":7102958,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102963,"byte_end":7102993,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7102998,"byte_end":7103028,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103033,"byte_end":7103036,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103041,"byte_end":7103118,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103123,"byte_end":7103195,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103200,"byte_end":7103203,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103208,"byte_end":7103229,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103234,"byte_end":7103294,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103299,"byte_end":7103381,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103386,"byte_end":7103402,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103407,"byte_end":7103442,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103447,"byte_end":7103456,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103461,"byte_end":7103466,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103471,"byte_end":7103478,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103483,"byte_end":7103486,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103491,"byte_end":7103531,"line_start":268,"line_end":268,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104536,"byte_end":7104541,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103659,"byte_end":7103754,"line_start":273,"line_end":273,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103759,"byte_end":7103776,"line_start":274,"line_end":274,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103781,"byte_end":7103784,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103789,"byte_end":7103883,"line_start":276,"line_end":276,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103888,"byte_end":7103980,"line_start":277,"line_end":277,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7103985,"byte_end":7104053,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104058,"byte_end":7104061,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104066,"byte_end":7104158,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104163,"byte_end":7104166,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104171,"byte_end":7104185,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104190,"byte_end":7104193,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104198,"byte_end":7104205,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104210,"byte_end":7104243,"line_start":285,"line_end":285,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104248,"byte_end":7104251,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104256,"byte_end":7104286,"line_start":287,"line_end":287,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104291,"byte_end":7104303,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104308,"byte_end":7104337,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104342,"byte_end":7104410,"line_start":290,"line_end":290,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104415,"byte_end":7104426,"line_start":291,"line_end":291,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104431,"byte_end":7104436,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104441,"byte_end":7104459,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104464,"byte_end":7104471,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104476,"byte_end":7104479,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104484,"byte_end":7104524,"line_start":296,"line_end":296,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105814,"byte_end":7105819,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104665,"byte_end":7104716,"line_start":303,"line_end":303,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104721,"byte_end":7104724,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104729,"byte_end":7104819,"line_start":305,"line_end":305,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104824,"byte_end":7104918,"line_start":306,"line_end":306,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7104923,"byte_end":7105017,"line_start":307,"line_end":307,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105022,"byte_end":7105074,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105079,"byte_end":7105082,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105087,"byte_end":7105180,"line_start":310,"line_end":310,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105185,"byte_end":7105188,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105193,"byte_end":7105207,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105212,"byte_end":7105215,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105220,"byte_end":7105227,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105232,"byte_end":7105281,"line_start":315,"line_end":315,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105286,"byte_end":7105330,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105335,"byte_end":7105355,"line_start":317,"line_end":317,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105360,"byte_end":7105388,"line_start":318,"line_end":318,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105393,"byte_end":7105396,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105401,"byte_end":7105430,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105435,"byte_end":7105468,"line_start":321,"line_end":321,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105473,"byte_end":7105478,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105483,"byte_end":7105522,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105527,"byte_end":7105581,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105586,"byte_end":7105591,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105596,"byte_end":7105614,"line_start":326,"line_end":326,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105619,"byte_end":7105624,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105629,"byte_end":7105668,"line_start":328,"line_end":328,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105673,"byte_end":7105727,"line_start":329,"line_end":329,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105732,"byte_end":7105737,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105742,"byte_end":7105749,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105754,"byte_end":7105757,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105762,"byte_end":7105802,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107199,"byte_end":7107210,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7105943,"byte_end":7106034,"line_start":340,"line_end":340,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106039,"byte_end":7106042,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106047,"byte_end":7106138,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106143,"byte_end":7106239,"line_start":343,"line_end":343,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106244,"byte_end":7106338,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106343,"byte_end":7106362,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106367,"byte_end":7106370,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106375,"byte_end":7106469,"line_start":347,"line_end":347,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106474,"byte_end":7106516,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106521,"byte_end":7106524,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106529,"byte_end":7106543,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106548,"byte_end":7106551,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106556,"byte_end":7106563,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106568,"byte_end":7106617,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106622,"byte_end":7106666,"line_start":354,"line_end":354,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106671,"byte_end":7106691,"line_start":355,"line_end":355,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106696,"byte_end":7106724,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106729,"byte_end":7106732,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106737,"byte_end":7106766,"line_start":358,"line_end":358,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106771,"byte_end":7106804,"line_start":359,"line_end":359,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106809,"byte_end":7106814,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106819,"byte_end":7106858,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106863,"byte_end":7106917,"line_start":362,"line_end":362,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106922,"byte_end":7106927,"line_start":363,"line_end":363,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7106932,"byte_end":7106999,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107004,"byte_end":7107009,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107014,"byte_end":7107053,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107058,"byte_end":7107112,"line_start":367,"line_end":367,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107117,"byte_end":7107122,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107127,"byte_end":7107134,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107139,"byte_end":7107142,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107147,"byte_end":7107187,"line_start":371,"line_end":371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108417,"byte_end":7108426,"line_start":412,"line_end":412,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107815,"byte_end":7107870,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107875,"byte_end":7107878,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107883,"byte_end":7107958,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7107963,"byte_end":7108013,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108018,"byte_end":7108021,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108026,"byte_end":7108110,"line_start":399,"line_end":399,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108115,"byte_end":7108118,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108123,"byte_end":7108137,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108142,"byte_end":7108145,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108150,"byte_end":7108157,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108162,"byte_end":7108195,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108200,"byte_end":7108203,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108208,"byte_end":7108242,"line_start":406,"line_end":406,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108247,"byte_end":7108281,"line_start":407,"line_end":407,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108286,"byte_end":7108340,"line_start":408,"line_end":408,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108345,"byte_end":7108352,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108357,"byte_end":7108360,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108365,"byte_end":7108405,"line_start":411,"line_end":411,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111744,"byte_end":7111755,"line_start":518,"line_end":518,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108832,"byte_end":7108919,"line_start":432,"line_end":432,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108920,"byte_end":7108923,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108924,"byte_end":7109019,"line_start":434,"line_end":434,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109020,"byte_end":7109109,"line_start":435,"line_end":435,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109110,"byte_end":7109113,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109114,"byte_end":7109207,"line_start":437,"line_end":437,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109208,"byte_end":7109245,"line_start":438,"line_end":438,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109246,"byte_end":7109249,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109250,"byte_end":7109346,"line_start":440,"line_end":440,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109347,"byte_end":7109350,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109351,"byte_end":7109363,"line_start":442,"line_end":442,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109364,"byte_end":7109367,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109368,"byte_end":7109458,"line_start":444,"line_end":444,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109459,"byte_end":7109526,"line_start":445,"line_end":445,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109527,"byte_end":7109530,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109531,"byte_end":7109545,"line_start":447,"line_end":447,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109546,"byte_end":7109549,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109550,"byte_end":7109557,"line_start":449,"line_end":449,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109558,"byte_end":7109607,"line_start":450,"line_end":450,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109608,"byte_end":7109653,"line_start":451,"line_end":451,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109654,"byte_end":7109657,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109658,"byte_end":7109685,"line_start":453,"line_end":453,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109686,"byte_end":7109689,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109690,"byte_end":7109702,"line_start":455,"line_end":455,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109703,"byte_end":7109758,"line_start":456,"line_end":456,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109759,"byte_end":7109805,"line_start":457,"line_end":457,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109806,"byte_end":7109809,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109810,"byte_end":7109884,"line_start":459,"line_end":459,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109885,"byte_end":7109935,"line_start":460,"line_end":460,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109936,"byte_end":7109939,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109940,"byte_end":7109969,"line_start":462,"line_end":462,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7109970,"byte_end":7110026,"line_start":463,"line_end":463,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110027,"byte_end":7110038,"line_start":464,"line_end":464,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110039,"byte_end":7110042,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110043,"byte_end":7110124,"line_start":466,"line_end":466,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110125,"byte_end":7110130,"line_start":467,"line_end":467,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110131,"byte_end":7110138,"line_start":468,"line_end":468,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110139,"byte_end":7110142,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110143,"byte_end":7110237,"line_start":470,"line_end":470,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110238,"byte_end":7110241,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110242,"byte_end":7110336,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110337,"byte_end":7110422,"line_start":473,"line_end":473,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110423,"byte_end":7110426,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110427,"byte_end":7110526,"line_start":475,"line_end":475,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110527,"byte_end":7110625,"line_start":476,"line_end":476,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110626,"byte_end":7110646,"line_start":477,"line_end":477,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110647,"byte_end":7110650,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110651,"byte_end":7110658,"line_start":479,"line_end":479,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110659,"byte_end":7110708,"line_start":480,"line_end":480,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110709,"byte_end":7110740,"line_start":481,"line_end":481,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110741,"byte_end":7110786,"line_start":482,"line_end":482,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110787,"byte_end":7110790,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110791,"byte_end":7110812,"line_start":484,"line_end":484,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110813,"byte_end":7110843,"line_start":485,"line_end":485,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110844,"byte_end":7110849,"line_start":486,"line_end":486,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110850,"byte_end":7110853,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110854,"byte_end":7110874,"line_start":488,"line_end":488,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110875,"byte_end":7110905,"line_start":489,"line_end":489,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110906,"byte_end":7110936,"line_start":490,"line_end":490,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110937,"byte_end":7110942,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110943,"byte_end":7110946,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110947,"byte_end":7110978,"line_start":493,"line_end":493,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7110979,"byte_end":7111007,"line_start":494,"line_end":494,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111008,"byte_end":7111028,"line_start":495,"line_end":495,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111029,"byte_end":7111065,"line_start":496,"line_end":496,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111066,"byte_end":7111143,"line_start":497,"line_end":497,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111144,"byte_end":7111147,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111148,"byte_end":7111199,"line_start":499,"line_end":499,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111200,"byte_end":7111240,"line_start":500,"line_end":500,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111241,"byte_end":7111315,"line_start":501,"line_end":501,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111316,"byte_end":7111319,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111320,"byte_end":7111408,"line_start":503,"line_end":503,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111409,"byte_end":7111459,"line_start":504,"line_end":504,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111460,"byte_end":7111512,"line_start":505,"line_end":505,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111513,"byte_end":7111541,"line_start":506,"line_end":506,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111542,"byte_end":7111545,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111546,"byte_end":7111578,"line_start":508,"line_end":508,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111579,"byte_end":7111596,"line_start":509,"line_end":509,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111597,"byte_end":7111610,"line_start":510,"line_end":510,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111611,"byte_end":7111620,"line_start":511,"line_end":511,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111621,"byte_end":7111626,"line_start":512,"line_end":512,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111627,"byte_end":7111634,"line_start":513,"line_end":513,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111635,"byte_end":7111638,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111639,"byte_end":7111673,"line_start":515,"line_end":515,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111674,"byte_end":7111719,"line_start":516,"line_end":516,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7111720,"byte_end":7111729,"line_start":517,"line_end":517,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318405,"byte_end":8318408,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318359,"byte_end":8318387,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318388,"byte_end":8318397,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318533,"byte_end":8318542,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318464,"byte_end":8318515,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318516,"byte_end":8318525,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318652,"byte_end":8318669,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\default.rs","byte_start":8318603,"byte_end":8318644,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039889,"byte_end":7039907,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7041081,"byte_end":7041089,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042907,"byte_end":7042913,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042957,"byte_end":7042963,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042979,"byte_end":7042985,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":87},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056143,"byte_end":7056149,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056473,"byte_end":7056479,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056709,"byte_end":7056715,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057042,"byte_end":7057048,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057140,"byte_end":7057146,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057541,"byte_end":7057547,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057650,"byte_end":7057656,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057756,"byte_end":7057762,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058111,"byte_end":7058117,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059064,"byte_end":7059069,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059582,"byte_end":7059587,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062332,"byte_end":7062337,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062520,"byte_end":7062525,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062800,"byte_end":7062805,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062926,"byte_end":7062931,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063097,"byte_end":7063102,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063261,"byte_end":7063266,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063356,"byte_end":7063361,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063814,"byte_end":7063819,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063904,"byte_end":7063909,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064006,"byte_end":7064011,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064092,"byte_end":7064097,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064556,"byte_end":7064562,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064722,"byte_end":7064728,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064767,"byte_end":7064773,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065025,"byte_end":7065031,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072364,"byte_end":7072370,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072896,"byte_end":7072902,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073013,"byte_end":7073019,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073073,"byte_end":7073079,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073228,"byte_end":7073234,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073366,"byte_end":7073372,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073656,"byte_end":7073662,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073809,"byte_end":7073815,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074613,"byte_end":7074622,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074647,"byte_end":7074656,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074666,"byte_end":7074675,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074968,"byte_end":7074977,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075175,"byte_end":7075184,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075308,"byte_end":7075317,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075491,"byte_end":7075500,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075611,"byte_end":7075622,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7076082,"byte_end":7076093,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7076240,"byte_end":7076251,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\deferred.rs","byte_start":7086155,"byte_end":7086163,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\deferred.rs","byte_start":7086283,"byte_end":7086291,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\epoch.rs","byte_start":7089886,"byte_end":7089891,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\epoch.rs","byte_start":7091646,"byte_end":7091657,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094596,"byte_end":7094601,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108551,"byte_end":7108556,"line_start":417,"line_end":417,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108726,"byte_end":7108731,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7115293,"byte_end":7115296,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7115306,"byte_end":7115309,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116128,"byte_end":7116131,"line_start":101,"line_end":101,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116515,"byte_end":7116524,"line_start":118,"line_end":118,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116534,"byte_end":7116543,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7117218,"byte_end":7117224,"line_start":141,"line_end":141,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7121963,"byte_end":7121968,"line_start":271,"line_end":271,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7130491,"byte_end":7130496,"line_start":491,"line_end":491,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7136469,"byte_end":7136474,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7136610,"byte_end":7136615,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7137121,"byte_end":7137125,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7139677,"byte_end":7139681,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7140214,"byte_end":7140218,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149564,"byte_end":7149569,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149606,"byte_end":7149611,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149627,"byte_end":7149632,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7154501,"byte_end":7154506,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7039889,"byte_end":7039907,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7041081,"byte_end":7041089,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":31960},"to":{"krate":0,"index":41}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042907,"byte_end":7042913,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042957,"byte_end":7042963,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7042979,"byte_end":7042985,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056143,"byte_end":7056149,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056473,"byte_end":7056479,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6577}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7056709,"byte_end":7056715,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057042,"byte_end":7057048,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057140,"byte_end":7057146,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057541,"byte_end":7057547,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057650,"byte_end":7057656,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7057756,"byte_end":7057762,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7058111,"byte_end":7058117,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059064,"byte_end":7059069,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7059582,"byte_end":7059587,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062332,"byte_end":7062337,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062520,"byte_end":7062525,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062800,"byte_end":7062805,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7062926,"byte_end":7062931,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2231}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063097,"byte_end":7063102,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2244}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063261,"byte_end":7063266,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063356,"byte_end":7063361,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063814,"byte_end":7063819,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1710}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7063904,"byte_end":7063909,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1713}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064006,"byte_end":7064011,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064092,"byte_end":7064097,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1946}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064556,"byte_end":7064562,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064722,"byte_end":7064728,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7064767,"byte_end":7064773,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7065025,"byte_end":7065031,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072364,"byte_end":7072370,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7072896,"byte_end":7072902,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1760}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073013,"byte_end":7073019,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1765}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073073,"byte_end":7073079,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1797}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073228,"byte_end":7073234,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1786}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073366,"byte_end":7073372,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073656,"byte_end":7073662,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6577}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\atomic.rs","byte_start":7073809,"byte_end":7073815,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074613,"byte_end":7074622,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074647,"byte_end":7074656,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074666,"byte_end":7074675,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7074968,"byte_end":7074977,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075175,"byte_end":7075184,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075308,"byte_end":7075317,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1760}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075491,"byte_end":7075500,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1765}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7075611,"byte_end":7075622,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7076082,"byte_end":7076093,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\collector.rs","byte_start":7076240,"byte_end":7076251,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\deferred.rs","byte_start":7086155,"byte_end":7086163,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\deferred.rs","byte_start":7086283,"byte_end":7086291,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\epoch.rs","byte_start":7089886,"byte_end":7089891,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\epoch.rs","byte_start":7091646,"byte_end":7091657,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7094596,"byte_end":7094601,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108551,"byte_end":7108556,"line_start":417,"line_end":417,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\guard.rs","byte_start":7108726,"byte_end":7108731,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7115293,"byte_end":7115296,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":550},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7115306,"byte_end":7115309,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116128,"byte_end":7116131,"line_start":101,"line_end":101,"column_start":15,"column_end":18},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":550},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116515,"byte_end":7116524,"line_start":118,"line_end":118,"column_start":22,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":557},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7116534,"byte_end":7116543,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7117218,"byte_end":7117224,"line_start":141,"line_end":141,"column_start":6,"column_end":12},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7121963,"byte_end":7121968,"line_start":271,"line_end":271,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\internal.rs","byte_start":7130491,"byte_end":7130496,"line_start":491,"line_end":491,"column_start":27,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7136469,"byte_end":7136474,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7136610,"byte_end":7136615,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7137121,"byte_end":7137125,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7139677,"byte_end":7139681,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\list.rs","byte_start":7140214,"byte_end":7140218,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149564,"byte_end":7149569,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149606,"byte_end":7149611,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7149627,"byte_end":7149632,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.7.2\\src\\sync\\queue.rs","byte_start":7154501,"byte_end":7154506,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":2255}}]}