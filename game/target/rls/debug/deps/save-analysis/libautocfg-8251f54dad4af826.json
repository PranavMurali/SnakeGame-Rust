{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5","program":"C:\\Users\\Pranav\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","autocfg","C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8251f54dad4af826","-C","extra-filename=-8251f54dad4af826","--out-dir","f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pranav\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libautocfg-8251f54dad4af826.rmeta"},"prelude":{"crate_id":{"name":"autocfg","disambiguator":[330094443172616378,18356760611580727121]},"crate_root":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src","external_crates":[{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}}],"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":9690,"line_start":1,"line_end":309,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1702,"byte_end":1707,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":9690,"line_start":1,"line_end":309,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":130},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":44},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":126},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":68}],"decl_id":null,"docs":" A Rust library for build scripts to automatically configure code based on\n compiler support.  Code snippets are dynamically tested to see if the `rustc`\n will accept them, rather than hard-coding specific version support.","sig":null,"attributes":[{"value":"/ A Rust library for build scripts to automatically configure code based on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ compiler support.  Code snippets are dynamically tested to see if the `rustc`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":78,"byte_end":159,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ will accept them, rather than hard-coding specific version support.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":160,"byte_end":231,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":232,"byte_end":235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":236,"byte_end":239,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":240,"byte_end":252,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":257,"byte_end":291,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":292,"byte_end":295,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":296,"byte_end":307,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ [build-dependencies]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":308,"byte_end":332,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ autocfg = \"0.1\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":333,"byte_end":352,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":353,"byte_end":360,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":361,"byte_end":364,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Then use it in your `build.rs` script to detect compiler features.  For","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":365,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ example, to test for 128-bit integer support, it might look like:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":441,"byte_end":510,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":515,"byte_end":526,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ extern crate autocfg;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":527,"byte_end":552,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":553,"byte_end":556,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":557,"byte_end":572,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ #   // Normally, cargo will set `OUT_DIR` for build scripts.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":573,"byte_end":637,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ #   std::env::set_var(\"OUT_DIR\", \"target\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":638,"byte_end":685,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/     let ac = autocfg::new();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":686,"byte_end":718,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/     ac.emit_has_type(\"i128\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":719,"byte_end":752,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":753,"byte_end":756,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // (optional) We don't need to rerun for anything external.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":757,"byte_end":824,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/     autocfg::rerun_path(file!());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":825,"byte_end":862,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":863,"byte_end":868,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":869,"byte_end":876,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":877,"byte_end":880,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ If the type test succeeds, this will write a `cargo:rustc-cfg=has_i128` line","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":881,"byte_end":961,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ for Cargo, which translates to Rust arguments `--cfg has_i128`.  Then in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":962,"byte_end":1042,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ rest of your Rust code, you can add `#[cfg(has_i128)]` conditions on code that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1043,"byte_end":1125,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"/ should only be used when the compiler supports it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1126,"byte_end":1180,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1182,"byte_end":1221,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1222,"byte_end":1244,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1322,"byte_end":1346,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"allow(bare_trait_objects)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1347,"byte_end":1376,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1377,"byte_end":1421,"line_start":42,"line_end":42,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":9841,"byte_end":9846,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" A common error type for the `autocfg` crate.\n","sig":null,"attributes":[{"value":"/ A common error type for the `autocfg` crate.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":9764,"byte_end":9812,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1880,"byte_end":1887,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"AutoCfg","qualname":"::AutoCfg","value":"AutoCfg {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Helper to detect compiler features for `cfg` output in build scripts.\n","sig":null,"attributes":[{"value":"/ Helper to detect compiler features for `cfg` output in build scripts.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":1771,"byte_end":1844,"line_start":63,"line_end":63,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2186,"byte_end":2190,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"emit","qualname":"::emit","value":"pub fn emit(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a config flag for rustc on standard out.","sig":null,"attributes":[{"value":"/ Writes a config flag for rustc on standard out.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2011,"byte_end":2062,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2063,"byte_end":2066,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rustc-cfg=CFG`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2067,"byte_end":2109,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2110,"byte_end":2113,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Cargo will use this in arguments to rustc, like `--cfg CFG`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2114,"byte_end":2178,"line_start":77,"line_end":77,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2526,"byte_end":2536,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"rerun_path","qualname":"::rerun_path","value":"pub fn rerun_path(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if `path` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if `path` changes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2248,"byte_end":2324,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2325,"byte_end":2328,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-changed=PATH`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2329,"byte_end":2379,"line_start":84,"line_end":84,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2380,"byte_end":2383,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.7.0, corresponding to rustc 1.6.0.  Earlier","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2384,"byte_end":2462,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2463,"byte_end":2518,"line_start":87,"line_end":87,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2914,"byte_end":2923,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"rerun_env","qualname":"::rerun_env","value":"pub fn rerun_env(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if the environment\n variable `var` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if the environment","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2603,"byte_end":2679,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ variable `var` changes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2680,"byte_end":2707,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2708,"byte_end":2711,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-env-changed=VAR`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2712,"byte_end":2765,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2766,"byte_end":2769,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.21.0, corresponding to rustc 1.20.0.  Earlier","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2770,"byte_end":2850,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2851,"byte_end":2906,"line_start":98,"line_end":98,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3106,"byte_end":3109,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"pub fn new() -> AutoCfg","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":2992,"byte_end":3028,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3029,"byte_end":3032,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3033,"byte_end":3045,"line_start":105,"line_end":105,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3046,"byte_end":3049,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Panics if `AutoCfg::new()` returns an error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3050,"byte_end":3098,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3481,"byte_end":3484,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoCfg>::new","value":"pub fn new() -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3175,"byte_end":3211,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3216,"byte_end":3219,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3224,"byte_end":3243,"line_start":115,"line_end":115,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3248,"byte_end":3251,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3256,"byte_end":3319,"line_start":117,"line_end":117,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3324,"byte_end":3378,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"/ - `OUT_DIR` is not set in the environment, or is not a writable directory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3383,"byte_end":3461,"line_start":119,"line_end":119,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3466,"byte_end":3469,"line_start":120,"line_end":120,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3985,"byte_end":3993,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<AutoCfg>::with_dir","value":"pub fn with_dir<T: Into<PathBuf>>(T) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance with the specified output directory.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance with the specified output directory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3681,"byte_end":3753,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3758,"byte_end":3761,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3766,"byte_end":3785,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3790,"byte_end":3793,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3798,"byte_end":3861,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3866,"byte_end":3920,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/ - `dir` is not a writable directory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3925,"byte_end":3965,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3970,"byte_end":3973,"line_start":135,"line_end":135,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5293,"byte_end":5312,"line_start":171,"line_end":171,"column_start":12,"column_end":31},"name":"probe_rustc_version","qualname":"<AutoCfg>::probe_rustc_version","value":"pub fn probe_rustc_version(&Self, usize, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the current `rustc` reports a version greater than\n or equal to \"`major`.`minor`\".\n","sig":null,"attributes":[{"value":"/ Test whether the current `rustc` reports a version greater than","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5175,"byte_end":5242,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ or equal to \"`major`.`minor`\".","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5247,"byte_end":5281,"line_start":170,"line_end":170,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5572,"byte_end":5590,"line_start":177,"line_end":177,"column_start":12,"column_end":30},"name":"emit_rustc_version","qualname":"<AutoCfg>::emit_rustc_version","value":"pub fn emit_rustc_version(&Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,\n if the current `rustc` is at least that version.\n","sig":null,"attributes":[{"value":"/ Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5429,"byte_end":5503,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ if the current `rustc` is at least that version.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":5508,"byte_end":5560,"line_start":176,"line_end":176,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7040,"byte_end":7050,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"probe_path","qualname":"<AutoCfg>::probe_path","value":"pub fn probe_path(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given path can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given path can be used.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6845,"byte_end":6890,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6895,"byte_end":6898,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6903,"byte_end":6968,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6973,"byte_end":6976,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6981,"byte_end":6994,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/ pub use PATH;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":6999,"byte_end":7016,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7021,"byte_end":7028,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7359,"byte_end":7372,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"emit_has_path","qualname":"<AutoCfg>::emit_has_path","value":"pub fn emit_has_path(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_PATH` if `probe_path` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_PATH` if `probe_path` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7157,"byte_end":7222,"line_start":226,"line_end":226,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7227,"byte_end":7230,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the `path` will be replaced with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7235,"byte_end":7304,"line_start":228,"line_end":228,"column_start":5,"column_end":74}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7309,"byte_end":7347,"line_start":229,"line_end":229,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7575,"byte_end":7588,"line_start":237,"line_end":237,"column_start":12,"column_end":25},"name":"emit_path_cfg","qualname":"<AutoCfg>::emit_path_cfg","value":"pub fn emit_path_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_path` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_path` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7502,"byte_end":7563,"line_start":236,"line_end":236,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7916,"byte_end":7927,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"probe_trait","qualname":"<AutoCfg>::probe_trait","value":"pub fn probe_trait(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given trait can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given trait can be used.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7700,"byte_end":7746,"line_start":243,"line_end":243,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7751,"byte_end":7754,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7759,"byte_end":7824,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7829,"byte_end":7832,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7837,"byte_end":7850,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ pub trait Probe: TRAIT + Sized {}","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7855,"byte_end":7892,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":7897,"byte_end":7904,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8278,"byte_end":8292,"line_start":259,"line_end":259,"column_start":12,"column_end":26},"name":"emit_has_trait","qualname":"<AutoCfg>::emit_has_trait","value":"pub fn emit_has_trait(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TRAIT` if `probe_trait` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TRAIT` if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8068,"byte_end":8135,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8140,"byte_end":8143,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the trait `name` will be replaced with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8148,"byte_end":8223,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8228,"byte_end":8266,"line_start":258,"line_end":258,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8497,"byte_end":8511,"line_start":266,"line_end":266,"column_start":12,"column_end":26},"name":"emit_trait_cfg","qualname":"<AutoCfg>::emit_trait_cfg","value":"pub fn emit_trait_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_trait` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8423,"byte_end":8485,"line_start":265,"line_end":265,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8828,"byte_end":8838,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"probe_type","qualname":"<AutoCfg>::probe_type","value":"pub fn probe_type(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given type can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given type can be used.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8624,"byte_end":8669,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8674,"byte_end":8677,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8682,"byte_end":8747,"line_start":274,"line_end":274,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8752,"byte_end":8755,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8760,"byte_end":8773,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ pub type Probe = TYPE;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8778,"byte_end":8804,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8809,"byte_end":8816,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9174,"byte_end":9187,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"name":"emit_has_type","qualname":"<AutoCfg>::emit_has_type","value":"pub fn emit_has_type(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TYPE` if `probe_type` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TYPE` if `probe_type` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":8967,"byte_end":9032,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9037,"byte_end":9040,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the type `name` will be replaced with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9045,"byte_end":9119,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9124,"byte_end":9162,"line_start":287,"line_end":287,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9390,"byte_end":9403,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"emit_type_cfg","qualname":"<AutoCfg>::emit_type_cfg","value":"pub fn emit_type_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_type` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_type` returns true.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":9317,"byte_end":9378,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":9895,"byte_end":9900,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":10263,"byte_end":10268,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\version.rs","byte_start":11394,"byte_end":11401,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3161,"byte_end":3168,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":9895,"byte_end":9900,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\error.rs","byte_start":10263,"byte_end":10268,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\version.rs","byte_start":11394,"byte_end":11401,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.5\\src\\lib.rs","byte_start":3161,"byte_end":3168,"line_start":112,"line_end":112,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}}]}