{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12","program":"C:\\Users\\Pranav\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","--edition=2018","C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=a5734dee09250afe","-C","extra-filename=-a5734dee09250afe","--out-dir","f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","--extern","bytemuck=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libbytemuck-bdf57a8a981cb4e5.rmeta","--extern","byteorder=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libbyteorder-e8ab65c98a502f75.rmeta","--extern","color_quant=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcolor_quant-12e862740b8b7bcb.rmeta","--extern","gif=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libgif-7b038dc9fd246116.rmeta","--extern","jpeg=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libjpeg_decoder-bf6ecc98575099d4.rmeta","--extern","num_iter=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libnum_iter-d6c1d298c63aa4fe.rmeta","--extern","num_rational=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libnum_rational-ec90639d3605d942.rmeta","--extern","num_traits=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libnum_traits-9980b84408ebfa27.rmeta","--extern","png=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libpng-73189542d01099bb.rmeta","--extern","scoped_threadpool=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libscoped_threadpool-383207012c1d278c.rmeta","--extern","tiff=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libtiff-8a6d066861402654.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pranav\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libimage-a5734dee09250afe.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[14157940024300488165,14014747313652063977]},"crate_root":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src","external_crates":[{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":13,"id":{"name":"tiff","disambiguator":[9621081692747197788,17484436186160050879]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","num":14,"id":{"name":"jpeg_decoder","disambiguator":[9574165646756650449,3158670662177958723]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","num":15,"id":{"name":"byteorder","disambiguator":[9609277860288020089,12264138052910517919]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":16,"id":{"name":"rayon","disambiguator":[8893603256609146334,129592929235571713]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":17,"id":{"name":"either","disambiguator":[1619881693516108792,15393816902594177639]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":18,"id":{"name":"rayon_core","disambiguator":[16699841549930013675,13405041014780705181]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":19,"id":{"name":"crossbeam_channel","disambiguator":[10433060612308127910,16240060180876971661]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":20,"id":{"name":"cfg_if","disambiguator":[568027780971654548,7179391208125931855]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[11143357664712464967,10101415511648174223]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":22,"id":{"name":"lazy_static","disambiguator":[11015315125905031475,12457729104174530383]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":23,"id":{"name":"crossbeam_deque","disambiguator":[13987352448563861952,4720920828822837150]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":24,"id":{"name":"crossbeam_epoch","disambiguator":[12762080570599697264,1024532594420139741]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":25,"id":{"name":"const_fn","disambiguator":[8555878419171571929,18151015449322683279]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":26,"id":{"name":"scopeguard","disambiguator":[16969046226023526448,7592289800875602641]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":27,"id":{"name":"memoffset","disambiguator":[6442699361942613942,10307375645424492608]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":28,"id":{"name":"num_cpus","disambiguator":[3530894540069738876,6748910607358366802]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":29,"id":{"name":"miniz_oxide","disambiguator":[8607929929807009333,10406191729179804142]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":30,"id":{"name":"adler","disambiguator":[2477790905653671753,574428016771947255]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","num":31,"id":{"name":"weezl","disambiguator":[12896758922237942092,15356839114746281787]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","num":32,"id":{"name":"num_traits","disambiguator":[9969931572121215825,490000610733527514]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","num":33,"id":{"name":"gif","disambiguator":[1018226667886534704,6842416500815900660]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","num":34,"id":{"name":"color_quant","disambiguator":[10358928880921668906,17560678111529076537]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","num":35,"id":{"name":"num_rational","disambiguator":[7417228646272607758,16333693754468447955]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","num":36,"id":{"name":"num_integer","disambiguator":[17920277086115366951,17633828294941603039]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","num":37,"id":{"name":"scoped_threadpool","disambiguator":[6875696207182460338,11947184440244433129]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","num":38,"id":{"name":"num_iter","disambiguator":[9021735466307896253,739165797189299519]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":39,"id":{"name":"png","disambiguator":[11375002629981449976,10791673248637357945]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":40,"id":{"name":"bitflags","disambiguator":[11073814531849482061,13262547598684167475]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":41,"id":{"name":"deflate","disambiguator":[5041165751271425211,6877672536228926638]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":42,"id":{"name":"adler32","disambiguator":[7053071442432402656,11532370607649244006]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":43,"id":{"name":"crc32fast","disambiguator":[7067655827656180448,7914699496217941698]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","num":44,"id":{"name":"miniz_oxide","disambiguator":[13956129078167289914,4598246275361771205]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","num":45,"id":{"name":"bytemuck","disambiguator":[9268792526804408184,5758984809430293679]}}],"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":0,"byte_end":12691,"line_start":1,"line_end":392,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3843,"byte_end":3852,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5595},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3854,"byte_end":3871,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3898,"byte_end":3902,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6020},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3898,"byte_end":3902,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":6106},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3904,"byte_end":3909,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6107},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3904,"byte_end":3909,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5962},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":6048},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3916,"byte_end":3920,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6049},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3916,"byte_end":3920,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3922,"byte_end":3925,"line_start":106,"line_end":106,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3927,"byte_end":3931,"line_start":106,"line_end":106,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6078},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3927,"byte_end":3931,"line_start":106,"line_end":106,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3958,"byte_end":3968,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3970,"byte_end":3981,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4008,"byte_end":4024,"line_start":110,"line_end":110,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4042,"byte_end":4054,"line_start":111,"line_end":111,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4072,"byte_end":4088,"line_start":112,"line_end":112,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4106,"byte_end":4118,"line_start":113,"line_end":113,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4136,"byte_end":4151,"line_start":114,"line_end":114,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4169,"byte_end":4181,"line_start":115,"line_end":115,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4199,"byte_end":4210,"line_start":116,"line_end":116,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4228,"byte_end":4245,"line_start":117,"line_end":117,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4263,"byte_end":4271,"line_start":118,"line_end":118,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4318,"byte_end":4324,"line_start":120,"line_end":120,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4342,"byte_end":4350,"line_start":121,"line_end":121,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4397,"byte_end":4411,"line_start":124,"line_end":124,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4430,"byte_end":4439,"line_start":125,"line_end":125,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4490,"byte_end":4501,"line_start":127,"line_end":127,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4520,"byte_end":4528,"line_start":128,"line_end":128,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4547,"byte_end":4556,"line_start":129,"line_end":129,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4581,"byte_end":4592,"line_start":131,"line_end":131,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4629,"byte_end":4644,"line_start":134,"line_end":134,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4646,"byte_end":4655,"line_start":134,"line_end":134,"column_start":42,"column_end":51},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4657,"byte_end":4662,"line_start":134,"line_end":134,"column_start":53,"column_end":58},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4732,"byte_end":4744,"line_start":137,"line_end":137,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4746,"byte_end":4750,"line_start":137,"line_end":137,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4779,"byte_end":4795,"line_start":138,"line_end":138,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4797,"byte_end":4825,"line_start":138,"line_end":138,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3834},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4827,"byte_end":4831,"line_start":138,"line_end":138,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4852,"byte_end":4863,"line_start":139,"line_end":139,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4865,"byte_end":4888,"line_start":139,"line_end":139,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4890,"byte_end":4906,"line_start":139,"line_end":139,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6186},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4935,"byte_end":4947,"line_start":141,"line_end":141,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4977,"byte_end":4982,"line_start":143,"line_end":143,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4984,"byte_end":4989,"line_start":143,"line_end":143,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":4991,"byte_end":4997,"line_start":143,"line_end":143,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5220,"byte_end":5233,"line_start":152,"line_end":152,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5243,"byte_end":5258,"line_start":153,"line_end":153,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5268,"byte_end":5286,"line_start":154,"line_end":154,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5296,"byte_end":5309,"line_start":155,"line_end":155,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5319,"byte_end":5335,"line_start":156,"line_end":156,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5345,"byte_end":5351,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5361,"byte_end":5370,"line_start":158,"line_end":158,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5380,"byte_end":5384,"line_start":159,"line_end":159,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5394,"byte_end":5401,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","byte_start":30481,"byte_end":30485,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39155,"byte_end":39165,"line_start":9,"line_end":9,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39203,"byte_end":39213,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39203,"byte_end":39213,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":164}},{"kind":"Use","ref_id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39215,"byte_end":39223,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39215,"byte_end":39223,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39225,"byte_end":39233,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39225,"byte_end":39233,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":166}},{"kind":"Use","ref_id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39235,"byte_end":39242,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39235,"byte_end":39242,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39244,"byte_end":39252,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39244,"byte_end":39252,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39311,"byte_end":39326,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39328,"byte_end":39352,"line_start":15,"line_end":15,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39354,"byte_end":39367,"line_start":15,"line_end":15,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39369,"byte_end":39391,"line_start":15,"line_end":15,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39393,"byte_end":39402,"line_start":15,"line_end":15,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39408,"byte_end":39426,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39428,"byte_end":39437,"line_start":16,"line_end":16,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39439,"byte_end":39447,"line_start":16,"line_end":16,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39449,"byte_end":39461,"line_start":16,"line_end":16,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39463,"byte_end":39474,"line_start":16,"line_end":16,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39476,"byte_end":39488,"line_start":16,"line_end":16,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39490,"byte_end":39508,"line_start":16,"line_end":16,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39510,"byte_end":39526,"line_start":16,"line_end":16,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39573,"byte_end":39577,"line_start":20,"line_end":20,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39579,"byte_end":39588,"line_start":20,"line_end":20,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39590,"byte_end":39596,"line_start":20,"line_end":20,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39598,"byte_end":39607,"line_start":20,"line_end":20,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39609,"byte_end":39618,"line_start":20,"line_end":20,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39668,"byte_end":39676,"line_start":23,"line_end":23,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39678,"byte_end":39686,"line_start":23,"line_end":23,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39688,"byte_end":39694,"line_start":23,"line_end":23,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39696,"byte_end":39705,"line_start":23,"line_end":23,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39707,"byte_end":39716,"line_start":23,"line_end":23,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39718,"byte_end":39730,"line_start":23,"line_end":23,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39732,"byte_end":39738,"line_start":23,"line_end":23,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39765,"byte_end":39772,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39765,"byte_end":39772,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":197}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39774,"byte_end":39782,"line_start":24,"line_end":24,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\mod.rs","byte_start":103581,"byte_end":103587,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":428}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184833,"byte_end":184843,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184946,"byte_end":184956,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":702}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184958,"byte_end":184968,"line_start":12,"line_end":12,"column_start":37,"column_end":47},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":702}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316377,"byte_end":316378,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HDRMetadata, HDRAdapter, read_raw_file, RGBE8Pixel, HdrImageDecoderIterator, HdrAdapter, rgbe8, Rgbe8Pixel, HdrMetadata, HdrDecoder, HDRImageDecoderIterator, SIGNATURE, HdrReader","parent":{"krate":0,"index":1329}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316403,"byte_end":316404,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HdrEncoder, to_rgbe8, HDREncoder","parent":{"krate":0,"index":1329}},{"kind":"Use","ref_id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368475,"byte_end":368485,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1557}},{"kind":"Use","ref_id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368532,"byte_end":368542,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":1557}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368544,"byte_end":368554,"line_start":11,"line_end":11,"column_start":37,"column_end":47},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1557}},{"kind":"Use","ref_id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386089,"byte_end":386100,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1684}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386203,"byte_end":386214,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1684}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386216,"byte_end":386228,"line_start":12,"line_end":12,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1684}},{"kind":"Use","ref_id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386230,"byte_end":386246,"line_start":12,"line_end":12,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1684}},{"kind":"Use","ref_id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386248,"byte_end":386259,"line_start":12,"line_end":12,"column_start":70,"column_end":81},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1684}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480713,"byte_end":480723,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480826,"byte_end":480836,"line_start":9,"line_end":9,"column_start":25,"column_end":35},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480838,"byte_end":480848,"line_start":9,"line_end":9,"column_start":37,"column_end":47},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480906,"byte_end":480921,"line_start":11,"line_end":11,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480923,"byte_end":480940,"line_start":11,"line_end":11,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5207},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480942,"byte_end":480954,"line_start":11,"line_end":11,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480956,"byte_end":480969,"line_start":11,"line_end":11,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480994,"byte_end":481006,"line_start":12,"line_end":12,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":481126,"byte_end":481135,"line_start":14,"line_end":14,"column_start":24,"column_end":33},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":481137,"byte_end":481146,"line_start":14,"line_end":14,"column_start":35,"column_end":44},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":481148,"byte_end":481158,"line_start":14,"line_end":14,"column_start":46,"column_end":56},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":481160,"byte_end":481170,"line_start":14,"line_end":14,"column_start":58,"column_end":68},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":481172,"byte_end":481186,"line_start":14,"line_end":14,"column_start":70,"column_end":84},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":2047}},{"kind":"Use","ref_id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569450,"byte_end":569460,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2443}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569526,"byte_end":569536,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":2443}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\mod.rs","byte_start":607527,"byte_end":607538,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2680}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8617,"byte_end":8627,"line_start":257,"line_end":257,"column_start":34,"column_end":44},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8629,"byte_end":8639,"line_start":257,"line_end":257,"column_start":46,"column_end":56},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8641,"byte_end":8651,"line_start":257,"line_end":257,"column_start":58,"column_end":68},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":2949}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8799,"byte_end":8809,"line_start":263,"line_end":263,"column_start":33,"column_end":43},"alias_span":null,"name":"DdsDecoder","value":"","parent":{"krate":0,"index":2954}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9000,"byte_end":9010,"line_start":271,"line_end":271,"column_start":9,"column_end":19},"alias_span":null,"name":"DXTEncoder","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9012,"byte_end":9021,"line_start":271,"line_end":271,"column_start":21,"column_end":30},"alias_span":null,"name":"DXTReader","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9023,"byte_end":9033,"line_start":271,"line_end":271,"column_start":32,"column_end":42},"alias_span":null,"name":"DXTVariant","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9035,"byte_end":9045,"line_start":271,"line_end":271,"column_start":44,"column_end":54},"alias_span":null,"name":"DxtDecoder","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9047,"byte_end":9057,"line_start":271,"line_end":271,"column_start":56,"column_end":66},"alias_span":null,"name":"DxtEncoder","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9059,"byte_end":9068,"line_start":271,"line_end":271,"column_start":68,"column_end":77},"alias_span":null,"name":"DxtReader","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9070,"byte_end":9080,"line_start":271,"line_end":271,"column_start":79,"column_end":89},"alias_span":null,"name":"DxtVariant","value":"","parent":{"krate":0,"index":2956}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9260,"byte_end":9275,"line_start":278,"line_end":278,"column_start":39,"column_end":54},"alias_span":null,"name":"FarbfeldDecoder","value":"","parent":{"krate":0,"index":2965}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9277,"byte_end":9292,"line_start":278,"line_end":278,"column_start":56,"column_end":71},"alias_span":null,"name":"FarbfeldEncoder","value":"","parent":{"krate":0,"index":2965}},{"kind":"Use","ref_id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9294,"byte_end":9308,"line_start":278,"line_end":278,"column_start":73,"column_end":87},"alias_span":null,"name":"FarbfeldReader","value":"","parent":{"krate":0,"index":2965}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9482,"byte_end":9489,"line_start":285,"line_end":285,"column_start":34,"column_end":41},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":2970}},{"kind":"Use","ref_id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9491,"byte_end":9501,"line_start":285,"line_end":285,"column_start":43,"column_end":53},"alias_span":null,"name":"GifDecoder","value":"","parent":{"krate":0,"index":2970}},{"kind":"Use","ref_id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9503,"byte_end":9513,"line_start":285,"line_end":285,"column_start":55,"column_end":65},"alias_span":null,"name":"GifEncoder","value":"","parent":{"krate":0,"index":2970}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9515,"byte_end":9524,"line_start":285,"line_end":285,"column_start":67,"column_end":76},"alias_span":null,"name":"GifReader","value":"","parent":{"krate":0,"index":2970}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9716,"byte_end":9729,"line_start":293,"line_end":293,"column_start":9,"column_end":22},"alias_span":null,"name":"read_raw_file","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9731,"byte_end":9736,"line_start":293,"line_end":293,"column_start":24,"column_end":29},"alias_span":null,"name":"rgbe8","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9738,"byte_end":9746,"line_start":293,"line_end":293,"column_start":31,"column_end":39},"alias_span":null,"name":"to_rgbe8","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9748,"byte_end":9758,"line_start":293,"line_end":293,"column_start":41,"column_end":51},"alias_span":null,"name":"HDRAdapter","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9760,"byte_end":9770,"line_start":293,"line_end":293,"column_start":53,"column_end":63},"alias_span":null,"name":"HDREncoder","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9772,"byte_end":9795,"line_start":293,"line_end":293,"column_start":65,"column_end":88},"alias_span":null,"name":"HDRImageDecoderIterator","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9805,"byte_end":9816,"line_start":294,"line_end":294,"column_start":9,"column_end":20},"alias_span":null,"name":"HDRMetadata","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9818,"byte_end":9828,"line_start":294,"line_end":294,"column_start":22,"column_end":32},"alias_span":null,"name":"HdrAdapter","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9830,"byte_end":9840,"line_start":294,"line_end":294,"column_start":34,"column_end":44},"alias_span":null,"name":"HdrDecoder","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9842,"byte_end":9852,"line_start":294,"line_end":294,"column_start":46,"column_end":56},"alias_span":null,"name":"HdrEncoder","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9854,"byte_end":9877,"line_start":294,"line_end":294,"column_start":58,"column_end":81},"alias_span":null,"name":"HdrImageDecoderIterator","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9879,"byte_end":9890,"line_start":294,"line_end":294,"column_start":83,"column_end":94},"alias_span":null,"name":"HdrMetadata","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9900,"byte_end":9909,"line_start":295,"line_end":295,"column_start":9,"column_end":18},"alias_span":null,"name":"HdrReader","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9911,"byte_end":9921,"line_start":295,"line_end":295,"column_start":20,"column_end":30},"alias_span":null,"name":"RGBE8Pixel","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9923,"byte_end":9933,"line_start":295,"line_end":295,"column_start":32,"column_end":42},"alias_span":null,"name":"Rgbe8Pixel","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9935,"byte_end":9944,"line_start":295,"line_end":295,"column_start":44,"column_end":53},"alias_span":null,"name":"SIGNATURE","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10136,"byte_end":10146,"line_start":303,"line_end":303,"column_start":34,"column_end":44},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10148,"byte_end":10158,"line_start":303,"line_end":303,"column_start":46,"column_end":56},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10160,"byte_end":10170,"line_start":303,"line_end":303,"column_start":58,"column_end":68},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10371,"byte_end":10382,"line_start":311,"line_end":311,"column_start":9,"column_end":20},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10384,"byte_end":10395,"line_start":311,"line_end":311,"column_start":22,"column_end":33},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10397,"byte_end":10408,"line_start":311,"line_end":311,"column_start":35,"column_end":46},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10410,"byte_end":10422,"line_start":311,"line_end":311,"column_start":48,"column_end":60},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10424,"byte_end":10440,"line_start":311,"line_end":311,"column_start":62,"column_end":78},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10642,"byte_end":10653,"line_start":320,"line_end":320,"column_start":9,"column_end":20},"alias_span":null,"name":"ApngDecoder","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10655,"byte_end":10670,"line_start":320,"line_end":320,"column_start":22,"column_end":37},"alias_span":null,"name":"CompressionType","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10672,"byte_end":10682,"line_start":320,"line_end":320,"column_start":39,"column_end":49},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10684,"byte_end":10694,"line_start":320,"line_end":320,"column_start":51,"column_end":61},"alias_span":null,"name":"PNGEncoder","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10696,"byte_end":10705,"line_start":320,"line_end":320,"column_start":63,"column_end":72},"alias_span":null,"name":"PNGReader","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10707,"byte_end":10717,"line_start":320,"line_end":320,"column_start":74,"column_end":84},"alias_span":null,"name":"PngDecoder","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":2018},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10719,"byte_end":10729,"line_start":320,"line_end":320,"column_start":86,"column_end":96},"alias_span":null,"name":"PngEncoder","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10739,"byte_end":10748,"line_start":321,"line_end":321,"column_start":9,"column_end":18},"alias_span":null,"name":"PngReader","value":"","parent":{"krate":0,"index":3006}},{"kind":"Use","ref_id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10984,"byte_end":10999,"line_start":330,"line_end":330,"column_start":9,"column_end":24},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11001,"byte_end":11018,"line_start":330,"line_end":330,"column_start":26,"column_end":43},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5207},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11020,"byte_end":11032,"line_start":330,"line_end":330,"column_start":45,"column_end":57},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11034,"byte_end":11047,"line_start":330,"line_end":330,"column_start":59,"column_end":72},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11049,"byte_end":11059,"line_start":330,"line_end":330,"column_start":74,"column_end":84},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11061,"byte_end":11070,"line_start":330,"line_end":330,"column_start":86,"column_end":95},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11080,"byte_end":11090,"line_start":331,"line_end":331,"column_start":9,"column_end":19},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11092,"byte_end":11104,"line_start":331,"line_end":331,"column_start":21,"column_end":33},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11106,"byte_end":11116,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11118,"byte_end":11128,"line_start":331,"line_end":331,"column_start":47,"column_end":57},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11130,"byte_end":11139,"line_start":331,"line_end":331,"column_start":59,"column_end":68},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11141,"byte_end":11151,"line_start":331,"line_end":331,"column_start":70,"column_end":80},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11153,"byte_end":11167,"line_start":331,"line_end":331,"column_start":82,"column_end":96},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11360,"byte_end":11370,"line_start":339,"line_end":339,"column_start":34,"column_end":44},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":3031}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11372,"byte_end":11382,"line_start":339,"line_end":339,"column_start":46,"column_end":56},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":3031}},{"kind":"Use","ref_id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11574,"byte_end":11585,"line_start":346,"line_end":346,"column_start":35,"column_end":46},"alias_span":null,"name":"TiffDecoder","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11587,"byte_end":11598,"line_start":346,"line_end":346,"column_start":48,"column_end":59},"alias_span":null,"name":"TiffEncoder","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11600,"byte_end":11610,"line_start":346,"line_end":346,"column_start":61,"column_end":71},"alias_span":null,"name":"TiffReader","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11789,"byte_end":11792,"line_start":353,"line_end":353,"column_start":35,"column_end":38},"alias_span":null,"name":"vp8","value":"","parent":{"krate":0,"index":3040}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11794,"byte_end":11805,"line_start":353,"line_end":353,"column_start":40,"column_end":51},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":3040}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":0,"byte_end":12691,"line_start":1,"line_end":392,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":6378},{"krate":0,"index":9},{"krate":0,"index":6380},{"krate":0,"index":10},{"krate":0,"index":6382},{"krate":0,"index":11},{"krate":0,"index":6384},{"krate":0,"index":12},{"krate":0,"index":6386},{"krate":0,"index":13},{"krate":0,"index":6388},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":117},{"krate":0,"index":128},{"krate":0,"index":150},{"krate":0,"index":428},{"krate":0,"index":522},{"krate":0,"index":701},{"krate":0,"index":2949},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2965},{"krate":0,"index":2970},{"krate":0,"index":2976},{"krate":0,"index":2994},{"krate":0,"index":2999},{"krate":0,"index":3006},{"krate":0,"index":3016},{"krate":0,"index":3031},{"krate":0,"index":3035},{"krate":0,"index":3040},{"krate":0,"index":3044},{"krate":0,"index":3084},{"krate":0,"index":3425},{"krate":0,"index":3663},{"krate":0,"index":3844},{"krate":0,"index":3998},{"krate":0,"index":4096},{"krate":0,"index":6371},{"krate":0,"index":4111}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Cursor;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":842,"byte_end":868,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":869,"byte_end":910,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":911,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":962,"byte_end":990,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":991,"byte_end":994,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":995,"byte_end":1053,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).decode()?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1054,"byte_end":1116,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1117,"byte_end":1129,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1130,"byte_end":1137,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1138,"byte_end":1145,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1146,"byte_end":1149,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1150,"byte_end":1207,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1212,"byte_end":1230,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Write;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1231,"byte_end":1256,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1257,"byte_end":1292,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1293,"byte_end":1323,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1324,"byte_end":1353,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1354,"byte_end":1404,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1405,"byte_end":1452,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1453,"byte_end":1501,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1530,"byte_end":1533,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1534,"byte_end":1574,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut bytes, image::ImageOutputFormat::Png)?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1575,"byte_end":1637,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1638,"byte_end":1650,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1651,"byte_end":1658,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1659,"byte_end":1706,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1707,"byte_end":1714,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1719,"byte_end":1842,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1847,"byte_end":1895,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1896,"byte_end":1952,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1953,"byte_end":1994,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1995,"byte_end":1998,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":1999,"byte_end":2018,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2019,"byte_end":2022,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2023,"byte_end":2065,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2066,"byte_end":2132,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2133,"byte_end":2211,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2212,"byte_end":2258,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2259,"byte_end":2262,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2263,"byte_end":2309,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2310,"byte_end":2366,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2367,"byte_end":2443,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2444,"byte_end":2524,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2525,"byte_end":2565,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2570,"byte_end":2623,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2624,"byte_end":2669,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2670,"byte_end":2714,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2715,"byte_end":2759,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2760,"byte_end":2789,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2794,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2832,"byte_end":2835,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderExt`] traits are implemented for many image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2836,"byte_end":2927,"line_start":76,"line_end":76,"column_start":1,"column_end":92}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":2928,"byte_end":3026,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3027,"byte_end":3089,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3094,"byte_end":3176,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3177,"byte_end":3180,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3181,"byte_end":3259,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderExt`]: trait.ImageDecoderExt.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3260,"byte_end":3311,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3312,"byte_end":3357,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3358,"byte_end":3403,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3404,"byte_end":3426,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3427,"byte_end":3458,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3459,"byte_end":3484,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3485,"byte_end":3505,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3506,"byte_end":3544,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":3642,"byte_end":3683,"line_start":93,"line_end":93,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":4112},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4138},{"krate":0,"index":4160},{"krate":0,"index":4158},{"krate":0,"index":4155},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4162},{"krate":0,"index":4165},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4172},{"krate":0,"index":4194},{"krate":0,"index":4192},{"krate":0,"index":4189},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4201},{"krate":0,"index":4203},{"krate":0,"index":4205},{"krate":0,"index":4225},{"krate":0,"index":4223},{"krate":0,"index":4220},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4227},{"krate":0,"index":4251},{"krate":0,"index":4249},{"krate":0,"index":4246},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":12693,"byte_end":12736,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":12737,"byte_end":12740,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":12741,"byte_end":12834,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":12835,"byte_end":12934,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":12935,"byte_end":13010,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13011,"byte_end":13014,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13015,"byte_end":13114,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13115,"byte_end":13213,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13214,"byte_end":13309,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13310,"byte_end":13406,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13407,"byte_end":13503,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13504,"byte_end":13585,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13586,"byte_end":13589,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13590,"byte_end":13630,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14342,"byte_end":14350,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14059,"byte_end":14103,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14108,"byte_end":14111,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14116,"byte_end":14209,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14214,"byte_end":14297,"line_start":32,"line_end":32,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14302,"byte_end":14337,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14736,"byte_end":14744,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14372,"byte_end":14416,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14421,"byte_end":14424,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14429,"byte_end":14515,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14520,"byte_end":14613,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14618,"byte_end":14711,"line_start":40,"line_end":40,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14716,"byte_end":14731,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14984,"byte_end":14993,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14766,"byte_end":14814,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14819,"byte_end":14822,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14827,"byte_end":14918,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14923,"byte_end":14979,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15253,"byte_end":15259,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15016,"byte_end":15093,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15098,"byte_end":15101,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15106,"byte_end":15201,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15206,"byte_end":15248,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15597,"byte_end":15608,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15278,"byte_end":15342,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15347,"byte_end":15350,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15355,"byte_end":15439,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15444,"byte_end":15481,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15486,"byte_end":15533,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15538,"byte_end":15592,"line_start":61,"line_end":61,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15699,"byte_end":15706,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":4112},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15633,"byte_end":15694,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":14042,"byte_end":14052,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n\n    /// An error was encountered while decoding.\n    ///\n    /// This means that the input data did not conform to the specification of some image format,\n    /// or that no format could be determined, or that it did not match format specific\n    /// requirements set by the caller.\n    Decoding(DecodingError),\n\n    /// An error was encountered while encoding.\n    ///\n    /// The input image can not be encoded with the chosen format, for example because the\n    /// specification has no representation for its color space or because a necessary conversion\n    /// is ambiguous. In some cases it might also happen that the dimensions can not be used with\n    /// the format.\n    Encoding(EncodingError),\n\n    /// An error was encountered in input arguments.\n    ///\n    /// This is a catch-all case for strictly internal operations such as scaling, conversions,\n    /// etc. that involve no external format specifications.\n    Parameter(ParameterError),\n\n    /// Completing the operation would have required more resources than allowed.\n    ///\n    /// Errors of this type are limits set by the user or environment, *not* inherent in a specific\n    /// format or operation that was executed.\n    Limits(LimitError),\n\n    /// An operation can not be completed by the chosen abstraction.\n    ///\n    /// This means that it might be possible for the operation to succeed in general but\n    /// * it requires a disabled feature,\n    /// * the implementation does not yet exist, or\n    /// * no abstraction for a lower level could be found.\n    Unsupported(UnsupportedError),\n\n    /// An error occurred while interacting with the environment.\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4122},{"krate":0,"index":4125},{"krate":0,"index":4128}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13784,"byte_end":13832,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13833,"byte_end":13836,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13837,"byte_end":13929,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":13930,"byte_end":14015,"line_start":26,"line_end":26,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15938,"byte_end":15954,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":4134},{"krate":0,"index":4135}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15722,"byte_end":15779,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15780,"byte_end":15783,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15784,"byte_end":15843,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15844,"byte_end":15847,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":15848,"byte_end":15909,"line_start":72,"line_end":72,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4139},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16193,"byte_end":16198,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16141,"byte_end":16188,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16265,"byte_end":16271,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16223,"byte_end":16260,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4145},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16415,"byte_end":16429,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16294,"byte_end":16331,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16336,"byte_end":16410,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16462,"byte_end":16477,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16114,"byte_end":16134,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n\n    /// The required color type can not be handled.\n    Color(ExtendedColorType),\n\n    /// An image format is not supported.\n    Format(ImageFormatHint),\n\n    /// Some feature specified by string.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    GenericFeature(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4145},{"krate":0,"index":4148}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16021,"byte_end":16063,"line_start":79,"line_end":79,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16796,"byte_end":16809,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16503,"byte_end":16556,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16557,"byte_end":16560,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16561,"byte_end":16655,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16656,"byte_end":16695,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16696,"byte_end":16699,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16700,"byte_end":16767,"line_start":98,"line_end":98,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17191,"byte_end":17205,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4169}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16899,"byte_end":16948,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16949,"byte_end":16952,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":16953,"byte_end":17048,"line_start":108,"line_end":108,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17049,"byte_end":17088,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17089,"byte_end":17092,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17093,"byte_end":17162,"line_start":111,"line_end":111,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4173},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17453,"byte_end":17470,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17412,"byte_end":17448,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17568,"byte_end":17581,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17476,"byte_end":17563,"line_start":123,"line_end":123,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17709,"byte_end":17716,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17587,"byte_end":17625,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17630,"byte_end":17704,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17777,"byte_end":17787,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17730,"byte_end":17772,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4182},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17871,"byte_end":17886,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17812,"byte_end":17866,"line_start":131,"line_end":131,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17387,"byte_end":17405,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n\n    /// The dimensions passed are wrong.\n    DimensionMismatch,\n\n    /// Repeated an operation for which error that could not be cloned was emitted already.\n    FailedAlready,\n\n    /// A string describing the parameter.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    Generic(String),\n\n    /// The end of the image has been reached.\n    NoMoreData,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4173},{"krate":0,"index":4175},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4182}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17295,"byte_end":17336,"line_start":118,"line_end":118,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18205,"byte_end":18218,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17912,"byte_end":17965,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17966,"byte_end":17969,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":17970,"byte_end":18064,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18065,"byte_end":18104,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18105,"byte_end":18108,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18109,"byte_end":18176,"line_start":140,"line_end":140,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18618,"byte_end":18628,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":4202}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18307,"byte_end":18384,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18385,"byte_end":18388,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18389,"byte_end":18481,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18482,"byte_end":18521,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18522,"byte_end":18525,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18526,"byte_end":18589,"line_start":152,"line_end":152,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19160,"byte_end":19174,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":4205},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19087,"byte_end":19155,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19258,"byte_end":19276,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":4205},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19180,"byte_end":19253,"line_start":168,"line_end":168,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19360,"byte_end":19375,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4205},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19301,"byte_end":19355,"line_start":171,"line_end":171,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19066,"byte_end":19080,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n\n    /// The resulting image exceed dimension limits in either direction.\n    DimensionError,\n\n    /// The operation would have performed an allocation larger than allowed.\n    InsufficientMemory,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4210}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18699,"byte_end":18767,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18768,"byte_end":18771,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18772,"byte_end":18870,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18871,"byte_end":18936,"line_start":162,"line_end":162,"column_start":1,"column_end":66}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":18982,"byte_end":19020,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19562,"byte_end":19567,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19525,"byte_end":19557,"line_start":178,"line_end":178,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19635,"byte_end":19639,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19587,"byte_end":19630,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19711,"byte_end":19724,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19654,"byte_end":19706,"line_start":184,"line_end":184,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19811,"byte_end":19818,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19751,"byte_end":19806,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19844,"byte_end":19859,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19503,"byte_end":19518,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n\n    /// The format is known exactly.\n    Exact(ImageFormat),\n\n    /// The format can be identified by a name.\n    Name(String),\n\n    /// A common path extension for the format is known.\n    PathExtension(std::path::PathBuf),\n\n    /// The format is not known or could not be determined.\n    Unknown,\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4239}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19401,"byte_end":19452,"line_start":175,"line_end":175,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20131,"byte_end":20151,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19913,"byte_end":19999,"line_start":195,"line_end":195,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20004,"byte_end":20007,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20012,"byte_end":20100,"line_start":197,"line_end":197,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20105,"byte_end":20119,"line_start":198,"line_end":198,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20379,"byte_end":20383,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20301,"byte_end":20367,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20522,"byte_end":20533,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20454,"byte_end":20510,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20725,"byte_end":20728,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20624,"byte_end":20713,"line_start":218,"line_end":218,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21096,"byte_end":21112,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20940,"byte_end":20989,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20994,"byte_end":20997,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21002,"byte_end":21084,"line_start":231,"line_end":231,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21311,"byte_end":21322,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21243,"byte_end":21299,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21515,"byte_end":21518,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21413,"byte_end":21503,"line_start":246,"line_end":246,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21887,"byte_end":21903,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21730,"byte_end":21780,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21785,"byte_end":21788,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21793,"byte_end":21875,"line_start":259,"line_end":259,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22101,"byte_end":22112,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22034,"byte_end":22089,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22284,"byte_end":22293,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22204,"byte_end":22272,"line_start":274,"line_end":274,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22500,"byte_end":22504,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22424,"byte_end":22488,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22677,"byte_end":22686,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22593,"byte_end":22665,"line_start":289,"line_end":289,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22851,"byte_end":22855,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22779,"byte_end":22839,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23734,"byte_end":23745,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23676,"byte_end":23724,"line_start":332,"line_end":332,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5125,"byte_end":5131,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5045,"byte_end":5116,"line_start":148,"line_end":148,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","byte_start":30378,"byte_end":30422,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[{"value":"/ NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":30535,"byte_end":30606,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":30607,"byte_end":30672,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":30673,"byte_end":30746,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ for a discussion of the algorithm.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":30747,"byte_end":30785,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/ See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":30786,"byte_end":30890,"line_start":5,"line_end":5,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33833,"byte_end":33841,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" Neural network color quantizer","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32076,"byte_end":32110,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32111,"byte_end":32114,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32115,"byte_end":32129,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32130,"byte_end":32137,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, ColorMap};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32138,"byte_end":32198,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/ use image::math::nq::NeuQuant;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32199,"byte_end":32233,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ use image::{ImageBuffer, Rgba, RgbaImage};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32234,"byte_end":32280,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32281,"byte_end":32284,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Create simple color image with RGBA pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32285,"byte_end":32335,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/ let (w, h) = (2, 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32336,"byte_end":32360,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ let red: Rgba<u8> = [255, 0, 0, 255].into();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32361,"byte_end":32409,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ let green: Rgba<u8> = [0, 255, 0, 255].into();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32410,"byte_end":32460,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ let blue: Rgba<u8> = [0, 0, 255, 255].into();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32461,"byte_end":32510,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/ let white: Rgba<u8> = [255, 255, 255, 255].into();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32511,"byte_end":32565,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ let mut color_image = RgbaImage::new(w, h);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32566,"byte_end":32613,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ color_image.put_pixel(0, 0, red);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32614,"byte_end":32651,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ color_image.put_pixel(1, 0, green);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32652,"byte_end":32691,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ color_image.put_pixel(0, 1, blue);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32692,"byte_end":32730,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ color_image.put_pixel(1, 1, white);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32731,"byte_end":32770,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32771,"byte_end":32774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Create a `NeuQuant` colormap that will build an approximate color palette that best matches","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32775,"byte_end":32873,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ // the original image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32874,"byte_end":32900,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ // Note, the NeuQuant algorithm is only designed to work with 6-8 bit output, so `colors`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32901,"byte_end":32994,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ // should be a power of 2 in the range [64, 256].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":32995,"byte_end":33048,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/ let pixels = color_image.clone().into_raw();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33049,"byte_end":33097,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ let cmap = NeuQuant::new(1, 256, &pixels);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33098,"byte_end":33144,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ // Map the original image through the color map to create an indexed image stored in a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33145,"byte_end":33235,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/ // `GrayImage`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33236,"byte_end":33255,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ let palletized = index_colors(&color_image, &cmap);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33256,"byte_end":33311,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ // Map indexed image back `RgbaImage`.  Note the NeuQuant algorithm creates an approximation of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33312,"byte_end":33411,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ // the original colors, so even in this simple example the output is not pixel equivalent to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33412,"byte_end":33508,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ // the original.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33509,"byte_end":33529,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| -> Rgba<u8> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33530,"byte_end":33594,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33595,"byte_end":33638,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33639,"byte_end":33675,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33676,"byte_end":33725,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/         .into()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33726,"byte_end":33745,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33746,"byte_end":33753,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33754,"byte_end":33761,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use the `color_quant` crate instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":33762,"byte_end":33821,"line_start":72,"line_end":72,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34360,"byte_end":34363,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34506,"byte_end":34510,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34588,"byte_end":34597,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34678,"byte_end":34686,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34771,"byte_end":34777,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"lookup","qualname":"<NeuQuant>::lookup","value":"pub fn lookup(&Self, usize) -> Option<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"/ Shared mathematical utility functions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35150,"byte_end":35192,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35451,"byte_end":35456,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35194,"byte_end":35232,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35233,"byte_end":35236,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35237,"byte_end":35244,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35245,"byte_end":35272,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35273,"byte_end":35276,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35277,"byte_end":35321,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35322,"byte_end":35366,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35367,"byte_end":35411,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35412,"byte_end":35419,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35420,"byte_end":35429,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"deprecated","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\utils.rs","byte_start":35430,"byte_end":35443,"line_start":13,"line_end":13,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38707,"byte_end":38711,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38579,"byte_end":38644,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38771,"byte_end":38772,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38718,"byte_end":38762,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38836,"byte_end":38837,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38783,"byte_end":38827,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4256},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38883,"byte_end":38888,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38848,"byte_end":38874,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38935,"byte_end":38941,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\rect.rs","byte_start":38899,"byte_end":38926,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":6510},{"krate":0,"index":165},{"krate":0,"index":6512},{"krate":0,"index":166},{"krate":0,"index":6514},{"krate":0,"index":167},{"krate":0,"index":6516},{"krate":0,"index":168},{"krate":0,"index":6518},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":6570},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":240},{"krate":0,"index":317},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":420},{"krate":0,"index":425}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":38951,"byte_end":38981,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":51330,"byte_end":51338,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":51281,"byte_end":51322,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":51670,"byte_end":51679,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":51620,"byte_end":51662,"line_start":20,"line_end":20,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":52012,"byte_end":52021,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":51962,"byte_end":52004,"line_start":32,"line_end":32,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":52409,"byte_end":52420,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":52304,"byte_end":52401,"line_start":44,"line_end":44,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":53194,"byte_end":53206,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":53088,"byte_end":53186,"line_start":69,"line_end":69,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":53989,"byte_end":54001,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":53883,"byte_end":53981,"line_start":94,"line_end":94,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":54707,"byte_end":54722,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":54669,"byte_end":54699,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":55047,"byte_end":55060,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":55011,"byte_end":55039,"line_start":131,"line_end":131,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":55442,"byte_end":55460,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\n                          Container>(&I,\n                                     &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":55347,"byte_end":55434,"line_start":143,"line_end":143,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":56221,"byte_end":56237,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\n                        Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":56128,"byte_end":56213,"line_start":168,"line_end":168,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":56964,"byte_end":56982,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":56905,"byte_end":56956,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":57762,"byte_end":57786,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":57714,"byte_end":57754,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":58192,"byte_end":58214,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\affine.rs","byte_start":58146,"byte_end":58184,"line_start":239,"line_end":239,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":6594},{"krate":0,"index":247},{"krate":0,"index":6596},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":268},{"krate":0,"index":274},{"krate":0,"index":279},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4275},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":298},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":314}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":63167,"byte_end":63231,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":63631,"byte_end":63640,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>> where\nSubpixel<I>: 'static, <Subpixel<I> as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":63580,"byte_end":63623,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64172,"byte_end":64178,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64079,"byte_end":64127,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64128,"byte_end":64164,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64641,"byte_end":64649,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64442,"byte_end":64488,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64489,"byte_end":64548,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":64549,"byte_end":64633,"line_start":52,"line_end":52,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":65624,"byte_end":65632,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":65450,"byte_end":65482,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":65483,"byte_end":65539,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":65540,"byte_end":65616,"line_start":87,"line_end":87,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":66618,"byte_end":66627,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":66402,"byte_end":66436,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":66437,"byte_end":66488,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":66489,"byte_end":66558,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":66559,"byte_end":66610,"line_start":122,"line_end":122,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68541,"byte_end":68549,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68515,"byte_end":68530,"line_start":179,"line_end":179,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68613,"byte_end":68618,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68556,"byte_end":68603,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68711,"byte_end":68719,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68624,"byte_end":68677,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68682,"byte_end":68703,"line_start":184,"line_end":184,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68927,"byte_end":68933,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68762,"byte_end":68855,"line_start":186,"line_end":186,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":68860,"byte_end":68919,"line_start":187,"line_end":187,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69114,"byte_end":69124,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69026,"byte_end":69106,"line_start":192,"line_end":192,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69229,"byte_end":69238,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69166,"byte_end":69221,"line_start":196,"line_end":196,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70383,"byte_end":70390,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69275,"byte_end":69299,"line_start":200,"line_end":200,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69300,"byte_end":69303,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69304,"byte_end":69318,"line_start":202,"line_end":202,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69319,"byte_end":69326,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69327,"byte_end":69396,"line_start":204,"line_end":204,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69397,"byte_end":69432,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69433,"byte_end":69436,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69437,"byte_end":69463,"line_start":207,"line_end":207,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69464,"byte_end":69551,"line_start":208,"line_end":208,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69552,"byte_end":69647,"line_start":209,"line_end":209,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69648,"byte_end":69744,"line_start":210,"line_end":210,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69745,"byte_end":69818,"line_start":211,"line_end":211,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69819,"byte_end":69842,"line_start":212,"line_end":212,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69843,"byte_end":69891,"line_start":213,"line_end":213,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69892,"byte_end":69944,"line_start":214,"line_end":214,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69945,"byte_end":69988,"line_start":215,"line_end":215,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":69989,"byte_end":70025,"line_start":216,"line_end":216,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70026,"byte_end":70075,"line_start":217,"line_end":217,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70076,"byte_end":70083,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70084,"byte_end":70142,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70143,"byte_end":70203,"line_start":220,"line_end":220,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70204,"byte_end":70229,"line_start":221,"line_end":221,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70230,"byte_end":70252,"line_start":222,"line_end":222,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70253,"byte_end":70269,"line_start":223,"line_end":223,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70270,"byte_end":70294,"line_start":224,"line_end":224,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70295,"byte_end":70304,"line_start":225,"line_end":225,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70305,"byte_end":70312,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70313,"byte_end":70340,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70341,"byte_end":70348,"line_start":228,"line_end":228,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":73363,"byte_end":73369,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map: ?Sized>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":73211,"byte_end":73292,"line_start":343,"line_end":343,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":73293,"byte_end":73355,"line_start":344,"line_end":344,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":74923,"byte_end":74935,"line_start":383,"line_end":383,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map: ?Sized>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":74826,"byte_end":74915,"line_start":382,"line_end":382,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78621,"byte_end":78628,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":4278},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78596,"byte_end":78616,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78657,"byte_end":78665,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":4278},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78635,"byte_end":78652,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78693,"byte_end":78703,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":4278},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78672,"byte_end":78688,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78734,"byte_end":78742,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":4278},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78710,"byte_end":78729,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4287},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78779,"byte_end":78787,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":4278},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78749,"byte_end":78774,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78579,"byte_end":78589,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType {\n\n    /// Nearest Neighbor\n    Nearest,\n\n    /// Linear Filter\n    Triangle,\n\n    /// Cubic Filter\n    CatmullRom,\n\n    /// Gaussian Filter\n    Gaussian,\n\n    /// Lanczos with window 3\n    Lanczos3,\n}","parent":null,"children":[{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4287}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76137,"byte_end":76168,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76169,"byte_end":76172,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76173,"byte_end":76188,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76189,"byte_end":76192,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76193,"byte_end":76271,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76272,"byte_end":76291,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76292,"byte_end":76375,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76376,"byte_end":76383,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76384,"byte_end":76463,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76464,"byte_end":76521,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76522,"byte_end":76525,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76526,"byte_end":76548,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76549,"byte_end":76640,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76641,"byte_end":76685,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76686,"byte_end":76689,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76690,"byte_end":76787,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76788,"byte_end":76862,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76863,"byte_end":76903,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":76904,"byte_end":77042,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77043,"byte_end":77067,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77068,"byte_end":77080,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77081,"byte_end":77121,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77122,"byte_end":77260,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77261,"byte_end":77285,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77286,"byte_end":77298,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77299,"byte_end":77339,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77340,"byte_end":77480,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77481,"byte_end":77507,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77508,"byte_end":77520,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77521,"byte_end":77561,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77562,"byte_end":77702,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77703,"byte_end":77719,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77720,"byte_end":77732,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77733,"byte_end":77773,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77774,"byte_end":77913,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77914,"byte_end":77943,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77944,"byte_end":77956,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77957,"byte_end":77967,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77968,"byte_end":77971,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77972,"byte_end":77984,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77985,"byte_end":77988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":77989,"byte_end":78063,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78064,"byte_end":78111,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78112,"byte_end":78115,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78116,"byte_end":78148,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78149,"byte_end":78159,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78160,"byte_end":78184,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78185,"byte_end":78207,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78208,"byte_end":78219,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78220,"byte_end":78230,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78231,"byte_end":78256,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78257,"byte_end":78280,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78281,"byte_end":78292,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78293,"byte_end":78303,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78304,"byte_end":78331,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78332,"byte_end":78355,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78356,"byte_end":78367,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78368,"byte_end":78378,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78379,"byte_end":78404,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78405,"byte_end":78429,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78430,"byte_end":78441,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78442,"byte_end":78452,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78453,"byte_end":78478,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78479,"byte_end":78503,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78504,"byte_end":78515,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":78516,"byte_end":78528,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":88249,"byte_end":88258,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87503,"byte_end":87560,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87561,"byte_end":87564,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87565,"byte_end":87663,"line_start":383,"line_end":383,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87664,"byte_end":87759,"line_start":384,"line_end":384,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87760,"byte_end":87763,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87764,"byte_end":87858,"line_start":386,"line_end":386,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87859,"byte_end":87956,"line_start":387,"line_end":387,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":87957,"byte_end":88053,"line_start":388,"line_end":388,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":88054,"byte_end":88090,"line_start":389,"line_end":389,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":88091,"byte_end":88094,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":88095,"byte_end":88194,"line_start":391,"line_end":391,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":88195,"byte_end":88241,"line_start":392,"line_end":392,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":96117,"byte_end":96126,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":95994,"byte_end":96045,"line_start":630,"line_end":630,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":96046,"byte_end":96109,"line_start":631,"line_end":631,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":98553,"byte_end":98559,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":98380,"byte_end":98438,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":98439,"byte_end":98497,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":98498,"byte_end":98545,"line_start":711,"line_end":711,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":99685,"byte_end":99689,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":99573,"byte_end":99624,"line_start":749,"line_end":749,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":99625,"byte_end":99677,"line_start":750,"line_end":750,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100513,"byte_end":100522,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100252,"byte_end":100305,"line_start":773,"line_end":773,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100306,"byte_end":100357,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100358,"byte_end":100421,"line_start":775,"line_end":775,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100422,"byte_end":100425,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":100426,"byte_end":100505,"line_start":777,"line_end":777,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39962,"byte_end":39966,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39915,"byte_end":39954,"line_start":32,"line_end":32,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":40260,"byte_end":40268,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":40210,"byte_end":40252,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":43052,"byte_end":43066,"line_start":129,"line_end":129,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":40880,"byte_end":40943,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":40944,"byte_end":40947,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":40948,"byte_end":41045,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41046,"byte_end":41131,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41132,"byte_end":41169,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41170,"byte_end":41204,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41205,"byte_end":41256,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41257,"byte_end":41260,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41261,"byte_end":41354,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41355,"byte_end":41454,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41455,"byte_end":41475,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41476,"byte_end":41479,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41480,"byte_end":41536,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41537,"byte_end":41598,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41599,"byte_end":41649,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41650,"byte_end":41653,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41654,"byte_end":41753,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41754,"byte_end":41847,"line_start":91,"line_end":91,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41848,"byte_end":41921,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41922,"byte_end":41925,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41926,"byte_end":41937,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41938,"byte_end":41968,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":41969,"byte_end":42024,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42025,"byte_end":42084,"line_start":97,"line_end":97,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42085,"byte_end":42153,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42154,"byte_end":42157,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42158,"byte_end":42260,"line_start":100,"line_end":100,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42261,"byte_end":42264,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42265,"byte_end":42276,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42277,"byte_end":42349,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42350,"byte_end":42387,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42388,"byte_end":42391,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42392,"byte_end":42413,"line_start":106,"line_end":106,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42414,"byte_end":42444,"line_start":107,"line_end":107,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42445,"byte_end":42488,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42489,"byte_end":42510,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42511,"byte_end":42532,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42533,"byte_end":42536,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42537,"byte_end":42600,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42601,"byte_end":42604,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42605,"byte_end":42620,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42621,"byte_end":42662,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42663,"byte_end":42692,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42693,"byte_end":42712,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42713,"byte_end":42716,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42717,"byte_end":42759,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42760,"byte_end":42763,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42764,"byte_end":42775,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42776,"byte_end":42848,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42849,"byte_end":42901,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42902,"byte_end":42942,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42943,"byte_end":42998,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":42999,"byte_end":43006,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":43007,"byte_end":43010,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":43011,"byte_end":43044,"line_start":128,"line_end":128,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":43580,"byte_end":43587,"line_start":147,"line_end":147,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":43523,"byte_end":43572,"line_start":146,"line_end":146,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44606,"byte_end":44610,"line_start":183,"line_end":183,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44246,"byte_end":44294,"line_start":169,"line_end":169,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44295,"byte_end":44298,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44299,"byte_end":44313,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44314,"byte_end":44327,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44328,"byte_end":44355,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44356,"byte_end":44359,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44360,"byte_end":44375,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"/      let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44376,"byte_end":44426,"line_start":176,"line_end":176,"column_start":1,"column_end":51}},{"value":"/      let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44427,"byte_end":44480,"line_start":177,"line_end":177,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44481,"byte_end":44484,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/      image::imageops::tile(&mut img, &tile);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44485,"byte_end":44533,"line_start":179,"line_end":179,"column_start":1,"column_end":49}},{"value":"/      img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44534,"byte_end":44584,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44585,"byte_end":44590,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44591,"byte_end":44598,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45407,"byte_end":45424,"line_start":211,"line_end":211,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient\n \n This function assumes a linear color space.\n \n # Examples\n ```no_run\n use image::{Rgba, RgbaImage, Pixel};\n \n fn main() {\n     let mut img = RgbaImage::new(100, 100);\n     let start = Rgba::from_slice(&[0, 128, 0, 0]);\n     let end = Rgba::from_slice(&[255, 255, 255, 255]);\n \n     image::imageops::vertical_gradient(&mut img, start, end);\n     img.save(\"vertical_gradient.png\").unwrap();\n }\n","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44909,"byte_end":44959,"line_start":195,"line_end":195,"column_start":1,"column_end":51}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44960,"byte_end":44964,"line_start":196,"line_end":196,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":44965,"byte_end":45012,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45013,"byte_end":45017,"line_start":198,"line_end":198,"column_start":1,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45018,"byte_end":45032,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45033,"byte_end":45046,"line_start":200,"line_end":200,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45047,"byte_end":45087,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45088,"byte_end":45092,"line_start":202,"line_end":202,"column_start":1,"column_end":5}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45093,"byte_end":45108,"line_start":203,"line_end":203,"column_start":1,"column_end":16}},{"value":"/     let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45109,"byte_end":45156,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/     let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45157,"byte_end":45211,"line_start":205,"line_end":205,"column_start":1,"column_end":55}},{"value":"/     let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45212,"byte_end":45270,"line_start":206,"line_end":206,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45271,"byte_end":45275,"line_start":207,"line_end":207,"column_start":1,"column_end":5}},{"value":"/     image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45276,"byte_end":45341,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/     img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45342,"byte_end":45393,"line_start":209,"line_end":209,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45394,"byte_end":45399,"line_start":210,"line_end":210,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46454,"byte_end":46473,"line_start":246,"line_end":246,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient\n \n This function assumes a linear color space.","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":45951,"byte_end":46003,"line_start":230,"line_end":230,"column_start":1,"column_end":53}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46004,"byte_end":46008,"line_start":231,"line_end":231,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46009,"byte_end":46056,"line_start":232,"line_end":232,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46057,"byte_end":46060,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46061,"byte_end":46075,"line_start":234,"line_end":234,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46076,"byte_end":46089,"line_start":235,"line_end":235,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46090,"byte_end":46130,"line_start":236,"line_end":236,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46131,"byte_end":46135,"line_start":237,"line_end":237,"column_start":1,"column_end":5}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46136,"byte_end":46151,"line_start":238,"line_end":238,"column_start":1,"column_end":16}},{"value":"/     let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46152,"byte_end":46199,"line_start":239,"line_end":239,"column_start":1,"column_end":48}},{"value":"/     let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46200,"byte_end":46254,"line_start":240,"line_end":240,"column_start":1,"column_end":55}},{"value":"/     let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46255,"byte_end":46313,"line_start":241,"line_end":241,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46314,"byte_end":46318,"line_start":242,"line_end":242,"column_start":1,"column_end":5}},{"value":"/     image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46319,"byte_end":46386,"line_start":243,"line_end":243,"column_start":1,"column_end":68}},{"value":"/     img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46387,"byte_end":46440,"line_start":244,"line_end":244,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46441,"byte_end":46446,"line_start":245,"line_end":245,"column_start":1,"column_end":6}}]},{"kind":"Function","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":47070,"byte_end":47077,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":46997,"byte_end":47062,"line_start":265,"line_end":265,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":475},{"krate":0,"index":521}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\mod.rs","byte_start":103483,"byte_end":103514,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105711,"byte_end":105717,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":103912,"byte_end":103944,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":103945,"byte_end":103948,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":103949,"byte_end":104042,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104043,"byte_end":104138,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104139,"byte_end":104142,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104143,"byte_end":104155,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104156,"byte_end":104159,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104160,"byte_end":104258,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104259,"byte_end":104356,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104357,"byte_end":104360,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104361,"byte_end":104374,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104375,"byte_end":104403,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104404,"byte_end":104432,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104433,"byte_end":104476,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104477,"byte_end":104527,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104528,"byte_end":104547,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104548,"byte_end":104562,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104563,"byte_end":104570,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104571,"byte_end":104574,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104575,"byte_end":104668,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104669,"byte_end":104765,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104766,"byte_end":104865,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104866,"byte_end":104869,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104965,"byte_end":104993,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":104994,"byte_end":105022,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105023,"byte_end":105066,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105067,"byte_end":105091,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105092,"byte_end":105119,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105120,"byte_end":105123,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105124,"byte_end":105154,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105155,"byte_end":105169,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105170,"byte_end":105185,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105186,"byte_end":105189,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105190,"byte_end":105245,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105246,"byte_end":105276,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105277,"byte_end":105318,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105319,"byte_end":105375,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105376,"byte_end":105379,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105380,"byte_end":105413,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105414,"byte_end":105428,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105429,"byte_end":105436,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105437,"byte_end":105440,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105441,"byte_end":105539,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105540,"byte_end":105607,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105608,"byte_end":105611,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105612,"byte_end":105650,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105651,"byte_end":105699,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106238,"byte_end":106241,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105881,"byte_end":105935,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105940,"byte_end":105943,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105948,"byte_end":106031,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106036,"byte_end":106115,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106120,"byte_end":106123,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106128,"byte_end":106184,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106189,"byte_end":106226,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106411,"byte_end":106422,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106354,"byte_end":106399,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106616,"byte_end":106622,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106564,"byte_end":106604,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106757,"byte_end":106767,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106686,"byte_end":106745,"line_start":96,"line_end":96,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107097,"byte_end":107109,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106849,"byte_end":106904,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106909,"byte_end":106912,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":106917,"byte_end":107011,"line_start":103,"line_end":103,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107016,"byte_end":107085,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107196,"byte_end":107206,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107162,"byte_end":107184,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107689,"byte_end":107693,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107283,"byte_end":107341,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107346,"byte_end":107349,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107354,"byte_end":107416,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107421,"byte_end":107424,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107429,"byte_end":107523,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107528,"byte_end":107608,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107613,"byte_end":107616,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107621,"byte_end":107677,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109335,"byte_end":109354,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108061,"byte_end":108131,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108136,"byte_end":108139,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108144,"byte_end":108233,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108238,"byte_end":108328,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108333,"byte_end":108383,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108388,"byte_end":108391,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108396,"byte_end":108488,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108493,"byte_end":108581,"line_start":145,"line_end":145,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108586,"byte_end":108614,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108619,"byte_end":108622,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108627,"byte_end":108718,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108723,"byte_end":108762,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108767,"byte_end":108770,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108775,"byte_end":108787,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108792,"byte_end":108795,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108800,"byte_end":108908,"line_start":153,"line_end":153,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108913,"byte_end":109005,"line_start":154,"line_end":154,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109010,"byte_end":109041,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109046,"byte_end":109049,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109054,"byte_end":109067,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109072,"byte_end":109100,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109105,"byte_end":109133,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109138,"byte_end":109181,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109186,"byte_end":109232,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109237,"byte_end":109268,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109273,"byte_end":109292,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109297,"byte_end":109311,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":109316,"byte_end":109323,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110312,"byte_end":110327,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110099,"byte_end":110129,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110134,"byte_end":110137,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110142,"byte_end":110217,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110222,"byte_end":110225,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110230,"byte_end":110300,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110721,"byte_end":110727,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110501,"byte_end":110538,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110543,"byte_end":110546,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110551,"byte_end":110626,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110631,"byte_end":110634,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":110639,"byte_end":110709,"line_start":201,"line_end":201,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112672,"byte_end":112676,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112459,"byte_end":112495,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112496,"byte_end":112499,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112500,"byte_end":112546,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112547,"byte_end":112550,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112551,"byte_end":112592,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":112593,"byte_end":112619,"line_start":56,"line_end":56,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":121142,"byte_end":121154,"line_start":245,"line_end":245,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":120881,"byte_end":120921,"line_start":240,"line_end":240,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":120922,"byte_end":120925,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":120926,"byte_end":121019,"line_start":242,"line_end":242,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":121020,"byte_end":121062,"line_start":243,"line_end":243,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\free_functions.rs","byte_start":121063,"byte_end":121134,"line_start":244,"line_end":244,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":6736},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":4297},{"krate":0,"index":4305},{"krate":0,"index":4302},{"krate":0,"index":4308},{"krate":0,"index":4328},{"krate":0,"index":4327},{"krate":0,"index":4325},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4315},{"krate":0,"index":4330},{"krate":0,"index":4356},{"krate":0,"index":4355},{"krate":0,"index":4353},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4336},{"krate":0,"index":4334},{"krate":0,"index":549},{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":618},{"krate":0,"index":4358},{"krate":0,"index":4367},{"krate":0,"index":4363},{"krate":0,"index":4371},{"krate":0,"index":4380},{"krate":0,"index":4376},{"krate":0,"index":4384},{"krate":0,"index":4406},{"krate":0,"index":4405},{"krate":0,"index":4403},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4393},{"krate":0,"index":4408},{"krate":0,"index":4431},{"krate":0,"index":4430},{"krate":0,"index":4428},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4419},{"krate":0,"index":623},{"krate":0,"index":636},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":671},{"krate":0,"index":683},{"krate":0,"index":691},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121586,"byte_end":121620,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121621,"byte_end":121624,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121625,"byte_end":121636,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121637,"byte_end":121640,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121641,"byte_end":121739,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121740,"byte_end":121839,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121840,"byte_end":121911,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121912,"byte_end":121915,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121916,"byte_end":121929,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121930,"byte_end":121947,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121948,"byte_end":121967,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121968,"byte_end":121987,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":121988,"byte_end":122037,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122038,"byte_end":122073,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122074,"byte_end":122077,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122078,"byte_end":122094,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122095,"byte_end":122139,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122140,"byte_end":122176,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122177,"byte_end":122212,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122213,"byte_end":122218,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122219,"byte_end":122234,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122235,"byte_end":122240,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122241,"byte_end":122307,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122308,"byte_end":122358,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122359,"byte_end":122362,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122363,"byte_end":122397,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122398,"byte_end":122418,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122419,"byte_end":122438,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122439,"byte_end":122468,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122469,"byte_end":122479,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122480,"byte_end":122483,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122484,"byte_end":122538,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122539,"byte_end":122593,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122594,"byte_end":122623,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122624,"byte_end":122634,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122635,"byte_end":122638,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122639,"byte_end":122671,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122672,"byte_end":122703,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122704,"byte_end":122730,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122731,"byte_end":122769,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122770,"byte_end":122775,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122776,"byte_end":122783,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":122784,"byte_end":122787,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124778,"byte_end":124789,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123195,"byte_end":123242,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123243,"byte_end":123246,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123247,"byte_end":123344,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123345,"byte_end":123442,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123443,"byte_end":123539,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123540,"byte_end":123628,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123629,"byte_end":123728,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123729,"byte_end":123827,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123828,"byte_end":123877,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123878,"byte_end":123881,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123882,"byte_end":123973,"line_start":66,"line_end":66,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":123974,"byte_end":124071,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124072,"byte_end":124169,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124170,"byte_end":124267,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124268,"byte_end":124329,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124330,"byte_end":124333,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124334,"byte_end":124382,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124383,"byte_end":124439,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124440,"byte_end":124527,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124528,"byte_end":124564,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124565,"byte_end":124621,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124622,"byte_end":124654,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124655,"byte_end":124695,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124696,"byte_end":124742,"line_start":79,"line_end":79,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4299},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124867,"byte_end":124874,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":4297},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124804,"byte_end":124858,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124958,"byte_end":124964,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":4297},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124889,"byte_end":124949,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125419,"byte_end":125429,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":4297},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":124985,"byte_end":125021,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125026,"byte_end":125029,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125034,"byte_end":125119,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125124,"byte_end":125216,"line_start":91,"line_end":91,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125221,"byte_end":125310,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125315,"byte_end":125410,"line_start":93,"line_end":93,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125579,"byte_end":125591,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125453,"byte_end":125505,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125506,"byte_end":125516,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4309},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125675,"byte_end":125683,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125598,"byte_end":125666,"line_start":101,"line_end":101,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125769,"byte_end":125783,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125694,"byte_end":125760,"line_start":104,"line_end":104,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125845,"byte_end":125850,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125797,"byte_end":125836,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125937,"byte_end":125949,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125862,"byte_end":125928,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126012,"byte_end":126018,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":125963,"byte_end":126003,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126105,"byte_end":126118,"line_start":117,"line_end":117,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":4308},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126030,"byte_end":126096,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127093,"byte_end":127109,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126299,"byte_end":126355,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126360,"byte_end":126363,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126368,"byte_end":126463,"line_start":127,"line_end":127,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126468,"byte_end":126537,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126542,"byte_end":126545,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126550,"byte_end":126557,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126562,"byte_end":126612,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126617,"byte_end":126678,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126683,"byte_end":126741,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126746,"byte_end":126753,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126758,"byte_end":126761,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126766,"byte_end":126778,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126783,"byte_end":126786,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126791,"byte_end":126886,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126891,"byte_end":126982,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126987,"byte_end":127081,"line_start":140,"line_end":140,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128360,"byte_end":128379,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127547,"byte_end":127606,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127611,"byte_end":127614,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127619,"byte_end":127709,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127714,"byte_end":127799,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127804,"byte_end":127807,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127812,"byte_end":127819,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127824,"byte_end":127874,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127879,"byte_end":127943,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":127948,"byte_end":128009,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128014,"byte_end":128021,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128026,"byte_end":128029,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128034,"byte_end":128046,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128051,"byte_end":128054,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128059,"byte_end":128154,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128159,"byte_end":128249,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128254,"byte_end":128348,"line_start":169,"line_end":169,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128995,"byte_end":129006,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128820,"byte_end":128879,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128884,"byte_end":128887,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128892,"byte_end":128963,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":128968,"byte_end":128983,"line_start":186,"line_end":186,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129323,"byte_end":129330,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129121,"byte_end":129172,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129177,"byte_end":129180,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129185,"byte_end":129278,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129283,"byte_end":129311,"line_start":194,"line_end":194,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129704,"byte_end":129710,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129452,"byte_end":129506,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129511,"byte_end":129514,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129519,"byte_end":129609,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129614,"byte_end":129692,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131863,"byte_end":131873,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129798,"byte_end":129888,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129893,"byte_end":129896,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":129901,"byte_end":129996,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130001,"byte_end":130091,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130096,"byte_end":130187,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130192,"byte_end":130249,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130254,"byte_end":130257,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130262,"byte_end":130279,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130284,"byte_end":130287,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130292,"byte_end":130376,"line_start":216,"line_end":216,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130381,"byte_end":130472,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130477,"byte_end":130480,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130485,"byte_end":130510,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130515,"byte_end":130518,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130523,"byte_end":130577,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130582,"byte_end":130606,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130611,"byte_end":130628,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130633,"byte_end":130658,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130663,"byte_end":130681,"line_start":225,"line_end":225,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130686,"byte_end":130689,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130694,"byte_end":130705,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130710,"byte_end":130733,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130738,"byte_end":130757,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130762,"byte_end":130804,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130809,"byte_end":130816,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130821,"byte_end":130824,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130829,"byte_end":130921,"line_start":233,"line_end":233,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":130926,"byte_end":131016,"line_start":234,"line_end":234,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131021,"byte_end":131024,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131029,"byte_end":131057,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131062,"byte_end":131065,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131070,"byte_end":131162,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131167,"byte_end":131261,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131266,"byte_end":131321,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131326,"byte_end":131329,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131334,"byte_end":131358,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131363,"byte_end":131380,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131385,"byte_end":131410,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131415,"byte_end":131433,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131438,"byte_end":131441,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131446,"byte_end":131457,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131462,"byte_end":131478,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131483,"byte_end":131502,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131507,"byte_end":131530,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131535,"byte_end":131564,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131569,"byte_end":131604,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131609,"byte_end":131616,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131621,"byte_end":131624,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131629,"byte_end":131723,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131728,"byte_end":131821,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":131826,"byte_end":131851,"line_start":257,"line_end":257,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":132205,"byte_end":132209,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":132139,"byte_end":132193,"line_start":267,"line_end":267,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":133319,"byte_end":133338,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":132969,"byte_end":133018,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":133023,"byte_end":133026,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":133031,"byte_end":133124,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":133129,"byte_end":133223,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":133228,"byte_end":133307,"line_start":292,"line_end":292,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134583,"byte_end":134592,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134073,"byte_end":134138,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134143,"byte_end":134146,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134151,"byte_end":134244,"line_start":318,"line_end":318,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134249,"byte_end":134344,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134349,"byte_end":134441,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134446,"byte_end":134540,"line_start":321,"line_end":321,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":134545,"byte_end":134571,"line_start":322,"line_end":322,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136290,"byte_end":136299,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":135948,"byte_end":136009,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136014,"byte_end":136017,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136022,"byte_end":136111,"line_start":375,"line_end":375,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136116,"byte_end":136210,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136215,"byte_end":136278,"line_start":377,"line_end":377,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136573,"byte_end":136578,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136426,"byte_end":136471,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136476,"byte_end":136479,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136484,"byte_end":136561,"line_start":384,"line_end":384,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137172,"byte_end":137193,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136801,"byte_end":136860,"line_start":393,"line_end":393,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136865,"byte_end":136868,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136873,"byte_end":136962,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":136967,"byte_end":137061,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137066,"byte_end":137160,"line_start":397,"line_end":397,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138124,"byte_end":138139,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137823,"byte_end":137863,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137868,"byte_end":137871,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137876,"byte_end":137968,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":137973,"byte_end":138068,"line_start":417,"line_end":417,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138073,"byte_end":138112,"line_start":418,"line_end":418,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138667,"byte_end":138676,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138342,"byte_end":138407,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138412,"byte_end":138415,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138420,"byte_end":138508,"line_start":427,"line_end":427,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138513,"byte_end":138608,"line_start":428,"line_end":428,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138613,"byte_end":138655,"line_start":429,"line_end":429,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139349,"byte_end":139360,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139174,"byte_end":139233,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139238,"byte_end":139241,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139246,"byte_end":139317,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139322,"byte_end":139337,"line_start":456,"line_end":456,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139642,"byte_end":139649,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139440,"byte_end":139491,"line_start":461,"line_end":461,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139496,"byte_end":139499,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139504,"byte_end":139597,"line_start":463,"line_end":463,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139602,"byte_end":139630,"line_start":464,"line_end":464,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139977,"byte_end":139983,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139725,"byte_end":139779,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139784,"byte_end":139787,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139792,"byte_end":139882,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139887,"byte_end":139965,"line_start":472,"line_end":472,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140097,"byte_end":140103,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140051,"byte_end":140085,"line_start":477,"line_end":477,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140377,"byte_end":140383,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140323,"byte_end":140365,"line_start":486,"line_end":486,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140662,"byte_end":140668,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140611,"byte_end":140650,"line_start":495,"line_end":495,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141941,"byte_end":141951,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140921,"byte_end":140960,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140965,"byte_end":140968,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":140973,"byte_end":141068,"line_start":508,"line_end":508,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141073,"byte_end":141151,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141156,"byte_end":141159,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141164,"byte_end":141171,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141176,"byte_end":141204,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141209,"byte_end":141268,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141273,"byte_end":141276,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141281,"byte_end":141321,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141326,"byte_end":141376,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141381,"byte_end":141384,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141389,"byte_end":141422,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141427,"byte_end":141477,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141482,"byte_end":141489,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141494,"byte_end":141497,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141502,"byte_end":141592,"line_start":522,"line_end":522,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141597,"byte_end":141678,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141683,"byte_end":141778,"line_start":524,"line_end":524,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141783,"byte_end":141870,"line_start":525,"line_end":525,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":141875,"byte_end":141929,"line_start":526,"line_end":526,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143548,"byte_end":143562,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142138,"byte_end":142185,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142190,"byte_end":142193,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142198,"byte_end":142287,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142292,"byte_end":142379,"line_start":537,"line_end":537,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142384,"byte_end":142479,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142484,"byte_end":142547,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142552,"byte_end":142555,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142560,"byte_end":142654,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142659,"byte_end":142728,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142733,"byte_end":142736,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142741,"byte_end":142748,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142753,"byte_end":142781,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142786,"byte_end":142849,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142854,"byte_end":142857,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142862,"byte_end":142923,"line_start":548,"line_end":548,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142928,"byte_end":142979,"line_start":549,"line_end":549,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142984,"byte_end":142987,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":142992,"byte_end":143025,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143030,"byte_end":143084,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143089,"byte_end":143096,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143101,"byte_end":143104,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143109,"byte_end":143199,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143204,"byte_end":143285,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143290,"byte_end":143385,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143390,"byte_end":143477,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143482,"byte_end":143536,"line_start":559,"line_end":559,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144226,"byte_end":144233,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: Pixel, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143814,"byte_end":143871,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143876,"byte_end":143879,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143884,"byte_end":143974,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":143979,"byte_end":144073,"line_start":572,"line_end":572,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144078,"byte_end":144172,"line_start":573,"line_end":573,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144177,"byte_end":144214,"line_start":574,"line_end":574,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145810,"byte_end":145834,"line_start":612,"line_end":612,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144845,"byte_end":144904,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144909,"byte_end":144912,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":144917,"byte_end":145009,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145014,"byte_end":145105,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145110,"byte_end":145203,"line_start":601,"line_end":601,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145208,"byte_end":145239,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145244,"byte_end":145247,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145252,"byte_end":145342,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145347,"byte_end":145441,"line_start":605,"line_end":605,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145446,"byte_end":145540,"line_start":606,"line_end":606,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145545,"byte_end":145582,"line_start":607,"line_end":607,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145587,"byte_end":145590,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145595,"byte_end":145689,"line_start":609,"line_end":609,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145694,"byte_end":145780,"line_start":610,"line_end":610,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":145785,"byte_end":145798,"line_start":611,"line_end":611,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":147197,"byte_end":147208,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146454,"byte_end":146499,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146504,"byte_end":146507,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146512,"byte_end":146602,"line_start":636,"line_end":636,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146607,"byte_end":146694,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146699,"byte_end":146766,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146771,"byte_end":146774,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146779,"byte_end":146874,"line_start":640,"line_end":640,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146879,"byte_end":146972,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":146977,"byte_end":147072,"line_start":642,"line_end":642,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":147077,"byte_end":147152,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":147157,"byte_end":147185,"line_start":644,"line_end":644,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148205,"byte_end":148213,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":147981,"byte_end":148013,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148018,"byte_end":148021,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148026,"byte_end":148118,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148123,"byte_end":148193,"line_start":674,"line_end":674,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148524,"byte_end":148536,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148300,"byte_end":148332,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148337,"byte_end":148340,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148345,"byte_end":148437,"line_start":681,"line_end":681,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148442,"byte_end":148512,"line_start":682,"line_end":682,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148967,"byte_end":148978,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148631,"byte_end":148693,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148698,"byte_end":148701,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148706,"byte_end":148801,"line_start":689,"line_end":689,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148806,"byte_end":148901,"line_start":690,"line_end":690,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":148906,"byte_end":148955,"line_start":691,"line_end":691,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149395,"byte_end":149410,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149324,"byte_end":149383,"line_start":706,"line_end":706,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":150064,"byte_end":150079,"line_start":726,"line_end":726,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: Pixel + 'static,\nP::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149768,"byte_end":149807,"line_start":721,"line_end":721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149812,"byte_end":149815,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149820,"byte_end":149916,"line_start":723,"line_end":723,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":149921,"byte_end":150016,"line_start":724,"line_end":724,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":150021,"byte_end":150052,"line_start":725,"line_end":725,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152915,"byte_end":152925,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":150850,"byte_end":150940,"line_start":749,"line_end":749,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":150945,"byte_end":150948,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":150953,"byte_end":151048,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151053,"byte_end":151143,"line_start":752,"line_end":752,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151148,"byte_end":151239,"line_start":753,"line_end":753,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151244,"byte_end":151301,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151306,"byte_end":151309,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151314,"byte_end":151331,"line_start":756,"line_end":756,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151336,"byte_end":151339,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151344,"byte_end":151428,"line_start":758,"line_end":758,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151433,"byte_end":151524,"line_start":759,"line_end":759,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151529,"byte_end":151532,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151537,"byte_end":151562,"line_start":761,"line_end":761,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151567,"byte_end":151570,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151575,"byte_end":151629,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151634,"byte_end":151658,"line_start":764,"line_end":764,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151663,"byte_end":151680,"line_start":765,"line_end":765,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151685,"byte_end":151710,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151715,"byte_end":151733,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151738,"byte_end":151741,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151746,"byte_end":151757,"line_start":769,"line_end":769,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151762,"byte_end":151785,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151790,"byte_end":151809,"line_start":771,"line_end":771,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151814,"byte_end":151856,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151861,"byte_end":151868,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151873,"byte_end":151876,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151881,"byte_end":151973,"line_start":775,"line_end":775,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":151978,"byte_end":152068,"line_start":776,"line_end":776,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152073,"byte_end":152076,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152081,"byte_end":152109,"line_start":778,"line_end":778,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152114,"byte_end":152117,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152122,"byte_end":152214,"line_start":780,"line_end":780,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152219,"byte_end":152313,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152318,"byte_end":152373,"line_start":782,"line_end":782,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152378,"byte_end":152381,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152386,"byte_end":152410,"line_start":784,"line_end":784,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152415,"byte_end":152432,"line_start":785,"line_end":785,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152437,"byte_end":152462,"line_start":786,"line_end":786,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152467,"byte_end":152485,"line_start":787,"line_end":787,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152490,"byte_end":152493,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152498,"byte_end":152509,"line_start":789,"line_end":789,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152514,"byte_end":152530,"line_start":790,"line_end":790,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152535,"byte_end":152554,"line_start":791,"line_end":791,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152559,"byte_end":152582,"line_start":792,"line_end":792,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152587,"byte_end":152616,"line_start":793,"line_end":793,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152621,"byte_end":152656,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152661,"byte_end":152668,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152673,"byte_end":152676,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152681,"byte_end":152775,"line_start":797,"line_end":797,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152780,"byte_end":152873,"line_start":798,"line_end":798,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152878,"byte_end":152903,"line_start":799,"line_end":799,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153062,"byte_end":153066,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":152996,"byte_end":153050,"line_start":804,"line_end":804,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153487,"byte_end":153506,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153137,"byte_end":153186,"line_start":809,"line_end":809,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153191,"byte_end":153194,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153199,"byte_end":153292,"line_start":811,"line_end":811,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153297,"byte_end":153391,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153396,"byte_end":153475,"line_start":813,"line_end":813,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154087,"byte_end":154096,"line_start":825,"line_end":825,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153577,"byte_end":153642,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153647,"byte_end":153650,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153655,"byte_end":153748,"line_start":820,"line_end":820,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153753,"byte_end":153848,"line_start":821,"line_end":821,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153853,"byte_end":153945,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":153950,"byte_end":154044,"line_start":823,"line_end":823,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154049,"byte_end":154075,"line_start":824,"line_end":824,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154521,"byte_end":154530,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154179,"byte_end":154240,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154245,"byte_end":154248,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154253,"byte_end":154342,"line_start":831,"line_end":831,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154347,"byte_end":154441,"line_start":832,"line_end":832,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154446,"byte_end":154509,"line_start":833,"line_end":833,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154780,"byte_end":154785,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154633,"byte_end":154678,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154683,"byte_end":154686,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154691,"byte_end":154768,"line_start":840,"line_end":840,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155264,"byte_end":155285,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154893,"byte_end":154952,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154957,"byte_end":154960,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":154965,"byte_end":155054,"line_start":847,"line_end":847,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155059,"byte_end":155153,"line_start":848,"line_end":848,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155158,"byte_end":155252,"line_start":849,"line_end":849,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155717,"byte_end":155732,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155416,"byte_end":155456,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155461,"byte_end":155464,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155469,"byte_end":155561,"line_start":856,"line_end":856,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155566,"byte_end":155661,"line_start":857,"line_end":857,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155666,"byte_end":155705,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156167,"byte_end":156176,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155842,"byte_end":155907,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155912,"byte_end":155915,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":155920,"byte_end":156008,"line_start":865,"line_end":865,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156013,"byte_end":156108,"line_start":866,"line_end":866,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156113,"byte_end":156155,"line_start":867,"line_end":867,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157062,"byte_end":157076,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156350,"byte_end":156399,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156404,"byte_end":156407,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156412,"byte_end":156507,"line_start":876,"line_end":876,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156512,"byte_end":156573,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156578,"byte_end":156581,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156586,"byte_end":156601,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156606,"byte_end":156609,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156614,"byte_end":156621,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156626,"byte_end":156662,"line_start":882,"line_end":882,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156667,"byte_end":156731,"line_start":883,"line_end":883,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156736,"byte_end":156739,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156744,"byte_end":156783,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156788,"byte_end":156853,"line_start":886,"line_end":886,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156858,"byte_end":156861,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156866,"byte_end":156910,"line_start":888,"line_end":888,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156915,"byte_end":156947,"line_start":889,"line_end":889,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156952,"byte_end":156955,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156960,"byte_end":156983,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156988,"byte_end":157038,"line_start":892,"line_end":892,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157043,"byte_end":157050,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4358},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158281,"byte_end":158285,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4362}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157579,"byte_end":157631,"line_start":914,"line_end":914,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157632,"byte_end":157635,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157636,"byte_end":157734,"line_start":916,"line_end":916,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157735,"byte_end":157784,"line_start":917,"line_end":917,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157785,"byte_end":157788,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157789,"byte_end":157887,"line_start":919,"line_end":919,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157888,"byte_end":157987,"line_start":920,"line_end":920,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":157988,"byte_end":158058,"line_start":921,"line_end":921,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158059,"byte_end":158062,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158063,"byte_end":158085,"line_start":923,"line_end":923,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158086,"byte_end":158089,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158090,"byte_end":158173,"line_start":925,"line_end":925,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158174,"byte_end":158241,"line_start":926,"line_end":926,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158242,"byte_end":158245,"line_start":927,"line_end":927,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4371},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159131,"byte_end":159138,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":4374},{"krate":0,"index":4375}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158409,"byte_end":158455,"line_start":937,"line_end":937,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158456,"byte_end":158459,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158460,"byte_end":158557,"line_start":939,"line_end":939,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158558,"byte_end":158656,"line_start":940,"line_end":940,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158657,"byte_end":158754,"line_start":941,"line_end":941,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158755,"byte_end":158796,"line_start":942,"line_end":942,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158797,"byte_end":158800,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158801,"byte_end":158823,"line_start":944,"line_end":944,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158824,"byte_end":158827,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158828,"byte_end":158911,"line_start":946,"line_end":946,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158912,"byte_end":158949,"line_start":947,"line_end":947,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":158950,"byte_end":159023,"line_start":948,"line_end":948,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159024,"byte_end":159091,"line_start":949,"line_end":949,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159092,"byte_end":159095,"line_start":950,"line_end":950,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159846,"byte_end":159854,"line_start":971,"line_end":971,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":4384},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159723,"byte_end":159763,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159768,"byte_end":159771,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159776,"byte_end":159841,"line_start":970,"line_end":970,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160011,"byte_end":160029,"line_start":976,"line_end":976,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":4384},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159861,"byte_end":159919,"line_start":973,"line_end":973,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159924,"byte_end":159927,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159932,"byte_end":160006,"line_start":975,"line_end":975,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160638,"byte_end":160648,"line_start":987,"line_end":987,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":4384},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160048,"byte_end":160101,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160106,"byte_end":160109,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160114,"byte_end":160205,"line_start":980,"line_end":980,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160210,"byte_end":160250,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160255,"byte_end":160258,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160263,"byte_end":160358,"line_start":983,"line_end":983,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160363,"byte_end":160454,"line_start":984,"line_end":984,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160459,"byte_end":160554,"line_start":985,"line_end":985,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160559,"byte_end":160633,"line_start":986,"line_end":986,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159711,"byte_end":159716,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n\n    /// The represented image was too large.\n    ///\n    /// The optional value denotes a possibly accepted maximal bound.\n    TooLarge,\n\n    /// The represented image can not use this representation.\n    ///\n    /// Has an additional value of the normalized form that would be accepted.\n    NormalFormRequired(NormalForm),\n\n    /// The color format did not match the channel count.\n    ///\n    /// In some cases you might be able to fix this by lowering the reported pixel count of the\n    /// buffer without touching the strides.\n    ///\n    /// In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not\n    /// directly memory unsafe although that will likely alias pixels. One scenario is when you\n    /// want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't\n    /// care about the value of the alpha channel even though you need `Rgba`.\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4390}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159262,"byte_end":159343,"line_start":960,"line_end":960,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159344,"byte_end":159347,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159348,"byte_end":159421,"line_start":962,"line_end":962,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159422,"byte_end":159498,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159499,"byte_end":159576,"line_start":964,"line_end":964,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":159577,"byte_end":159650,"line_start":965,"line_end":965,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161147,"byte_end":161156,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160924,"byte_end":160953,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160958,"byte_end":160961,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160966,"byte_end":161049,"line_start":998,"line_end":998,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161054,"byte_end":161142,"line_start":999,"line_end":999,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161386,"byte_end":161397,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161163,"byte_end":161194,"line_start":1002,"line_end":1002,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161199,"byte_end":161202,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161207,"byte_end":161295,"line_start":1004,"line_end":1004,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161300,"byte_end":161381,"line_start":1005,"line_end":1005,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161681,"byte_end":161692,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161404,"byte_end":161431,"line_start":1008,"line_end":1008,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161436,"byte_end":161439,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161444,"byte_end":161537,"line_start":1010,"line_end":1010,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161542,"byte_end":161632,"line_start":1011,"line_end":1011,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161637,"byte_end":161676,"line_start":1012,"line_end":1012,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4415},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161902,"byte_end":161916,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161699,"byte_end":161764,"line_start":1015,"line_end":1015,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161769,"byte_end":161772,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161777,"byte_end":161870,"line_start":1017,"line_end":1017,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161875,"byte_end":161897,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162132,"byte_end":162149,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161923,"byte_end":161991,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":161996,"byte_end":161999,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162004,"byte_end":162097,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162102,"byte_end":162127,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160907,"byte_end":160917,"line_start":995,"line_end":995,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n\n    /// No pixel aliases another.\n    ///\n    /// Unaliased also guarantees that all index calculations in the image bounds using\n    /// `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.\n    Unaliased,\n\n    /// At least pixels are packed.\n    ///\n    /// Images of these types can wrap `[T]`-slices into the standard color types. This is a\n    /// precondition for `GenericImage` which requires by-reference access to pixels.\n    PixelPacked,\n\n    /// All samples are packed.\n    ///\n    /// This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but\n    /// it is not necessary that the pixel samples themselves are adjacent. An example of this\n    /// behaviour is a planar image layout.\n    ImagePacked,\n\n    /// The samples are in row-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in row-major form.\n    RowMajorPacked,\n\n    /// The samples are in column-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in column-major form.\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4417}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160664,"byte_end":160702,"line_start":990,"line_end":990,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160703,"byte_end":160706,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160707,"byte_end":160806,"line_start":992,"line_end":992,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":160807,"byte_end":160846,"line_start":993,"line_end":993,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162357,"byte_end":162367,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162238,"byte_end":162269,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162274,"byte_end":162277,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162282,"byte_end":162345,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162850,"byte_end":162854,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162429,"byte_end":162480,"line_start":1039,"line_end":1039,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162485,"byte_end":162488,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162493,"byte_end":162582,"line_start":1041,"line_end":1041,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162587,"byte_end":162680,"line_start":1042,"line_end":1042,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162685,"byte_end":162772,"line_start":1043,"line_end":1043,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162777,"byte_end":162838,"line_start":1044,"line_end":1044,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163133,"byte_end":163140,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162919,"byte_end":162959,"line_start":1049,"line_end":1049,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162964,"byte_end":162967,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162972,"byte_end":163062,"line_start":1051,"line_end":1051,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163067,"byte_end":163121,"line_start":1052,"line_end":1052,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163459,"byte_end":163469,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163200,"byte_end":163262,"line_start":1057,"line_end":1057,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163267,"byte_end":163270,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163275,"byte_end":163365,"line_start":1059,"line_end":1059,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163370,"byte_end":163447,"line_start":1060,"line_end":1060,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164343,"byte_end":164357,"line_start":1079,"line_end":1079,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163801,"byte_end":163871,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163876,"byte_end":163879,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163884,"byte_end":163978,"line_start":1073,"line_end":1073,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":163983,"byte_end":164078,"line_start":1074,"line_end":1074,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164083,"byte_end":164150,"line_start":1075,"line_end":1075,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164155,"byte_end":164158,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164163,"byte_end":164257,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164262,"byte_end":164331,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164934,"byte_end":164944,"line_start":1094,"line_end":1094,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164752,"byte_end":164842,"line_start":1091,"line_end":1091,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164847,"byte_end":164850,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":164855,"byte_end":164922,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165278,"byte_end":165289,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165015,"byte_end":165077,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165082,"byte_end":165085,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165090,"byte_end":165181,"line_start":1100,"line_end":1100,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165186,"byte_end":165266,"line_start":1101,"line_end":1101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165746,"byte_end":165761,"line_start":1111,"line_end":1111,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165382,"byte_end":165452,"line_start":1106,"line_end":1106,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165457,"byte_end":165460,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165465,"byte_end":165559,"line_start":1108,"line_end":1108,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165564,"byte_end":165660,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165665,"byte_end":165734,"line_start":1110,"line_end":1110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166284,"byte_end":166293,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165954,"byte_end":165981,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165986,"byte_end":165989,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":165994,"byte_end":166081,"line_start":1120,"line_end":1120,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166086,"byte_end":166179,"line_start":1121,"line_end":1121,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166184,"byte_end":166272,"line_start":1122,"line_end":1122,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167297,"byte_end":167308,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166448,"byte_end":166506,"line_start":1128,"line_end":1128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166511,"byte_end":166514,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166519,"byte_end":166614,"line_start":1130,"line_end":1130,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166619,"byte_end":166709,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166714,"byte_end":166802,"line_start":1132,"line_end":1132,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166807,"byte_end":166883,"line_start":1133,"line_end":1133,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166888,"byte_end":166891,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166896,"byte_end":166903,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166908,"byte_end":166934,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166939,"byte_end":166960,"line_start":1137,"line_end":1137,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":166965,"byte_end":167030,"line_start":1138,"line_end":1138,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167035,"byte_end":167104,"line_start":1139,"line_end":1139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167109,"byte_end":167112,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167117,"byte_end":167148,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167153,"byte_end":167156,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167161,"byte_end":167221,"line_start":1143,"line_end":1143,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167226,"byte_end":167273,"line_start":1144,"line_end":1144,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167278,"byte_end":167285,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167949,"byte_end":167959,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167830,"byte_end":167861,"line_start":1165,"line_end":1165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167866,"byte_end":167869,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167874,"byte_end":167937,"line_start":1167,"line_end":1167,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168443,"byte_end":168447,"line_start":1178,"line_end":1178,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168021,"byte_end":168073,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168078,"byte_end":168081,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168086,"byte_end":168175,"line_start":1174,"line_end":1174,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168180,"byte_end":168273,"line_start":1175,"line_end":1175,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168278,"byte_end":168365,"line_start":1176,"line_end":1176,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168370,"byte_end":168431,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168820,"byte_end":168827,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168512,"byte_end":168552,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168557,"byte_end":168560,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168565,"byte_end":168655,"line_start":1184,"line_end":1184,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168660,"byte_end":168752,"line_start":1185,"line_end":1185,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168757,"byte_end":168808,"line_start":1186,"line_end":1186,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169069,"byte_end":169079,"line_start":1194,"line_end":1194,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168887,"byte_end":168977,"line_start":1191,"line_end":1191,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168982,"byte_end":168985,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":168990,"byte_end":169057,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169390,"byte_end":169400,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169150,"byte_end":169193,"line_start":1198,"line_end":1198,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169198,"byte_end":169201,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169206,"byte_end":169296,"line_start":1200,"line_end":1200,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169301,"byte_end":169378,"line_start":1201,"line_end":1201,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170025,"byte_end":170039,"line_start":1218,"line_end":1218,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169779,"byte_end":169828,"line_start":1214,"line_end":1214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169833,"byte_end":169836,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169841,"byte_end":169931,"line_start":1216,"line_end":1216,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":169936,"byte_end":170013,"line_start":1217,"line_end":1217,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170650,"byte_end":170661,"line_start":1232,"line_end":1232,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170387,"byte_end":170449,"line_start":1228,"line_end":1228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170454,"byte_end":170457,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170462,"byte_end":170553,"line_start":1230,"line_end":1230,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170558,"byte_end":170638,"line_start":1231,"line_end":1231,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170860,"byte_end":170875,"line_start":1237,"line_end":1237,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":170793,"byte_end":170848,"line_start":1236,"line_end":1236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171343,"byte_end":171352,"line_start":1247,"line_end":1247,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171013,"byte_end":171040,"line_start":1242,"line_end":1242,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171045,"byte_end":171048,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171053,"byte_end":171140,"line_start":1244,"line_end":1244,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171145,"byte_end":171238,"line_start":1245,"line_end":1245,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":171243,"byte_end":171331,"line_start":1246,"line_end":1246,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7611,"byte_end":7617,"line_start":215,"line_end":215,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":957},{"krate":0,"index":1010},{"krate":0,"index":1132},{"krate":0,"index":1225},{"krate":0,"index":1329},{"krate":0,"index":1557},{"krate":0,"index":1684},{"krate":0,"index":1912},{"krate":0,"index":2047},{"krate":0,"index":2443},{"krate":0,"index":2608},{"krate":0,"index":2680}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5569,"byte_end":5626,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5627,"byte_end":5630,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5631,"byte_end":5654,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5655,"byte_end":5658,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5659,"byte_end":5695,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5696,"byte_end":5732,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5733,"byte_end":5794,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5795,"byte_end":5852,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5853,"byte_end":5879,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | RGB8, RGBA8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5880,"byte_end":5929,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5930,"byte_end":5956,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | RGB8, RGBA8, Gray8 |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5957,"byte_end":6036,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Lossy(Luma channel only) | No |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6037,"byte_end":6083,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6084,"byte_end":6134,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6135,"byte_end":6173,"line_start":190,"line_end":190,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | RGB8, RGBA8, BGR8, BGRA8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6174,"byte_end":6236,"line_start":191,"line_end":191,"column_start":1,"column_end":63}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6237,"byte_end":6265,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6266,"byte_end":6269,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6270,"byte_end":6311,"line_start":194,"line_end":194,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6312,"byte_end":6315,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6316,"byte_end":6408,"line_start":196,"line_end":196,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6409,"byte_end":6507,"line_start":197,"line_end":197,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6508,"byte_end":6601,"line_start":198,"line_end":198,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6602,"byte_end":6701,"line_start":199,"line_end":199,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6702,"byte_end":6798,"line_start":200,"line_end":200,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6799,"byte_end":6802,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6803,"byte_end":6894,"line_start":202,"line_end":202,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6895,"byte_end":6967,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6968,"byte_end":6971,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":6972,"byte_end":7066,"line_start":205,"line_end":205,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7067,"byte_end":7124,"line_start":206,"line_end":206,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7125,"byte_end":7219,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7220,"byte_end":7319,"line_start":208,"line_end":208,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7320,"byte_end":7418,"line_start":209,"line_end":209,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7419,"byte_end":7443,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7444,"byte_end":7447,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7448,"byte_end":7509,"line_start":212,"line_end":212,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7510,"byte_end":7513,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7514,"byte_end":7602,"line_start":214,"line_end":214,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::codecs::bmp","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":915}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7671,"byte_end":7694,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184528,"byte_end":184568,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184569,"byte_end":184572,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184573,"byte_end":184631,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184632,"byte_end":184635,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184636,"byte_end":184656,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184657,"byte_end":184749,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184750,"byte_end":184804,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\mod.rs","byte_start":184805,"byte_end":184808,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":202945,"byte_end":202955,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::codecs::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":202916,"byte_end":202933,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":205523,"byte_end":205526,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":205450,"byte_end":205511,"line_start":631,"line_end":631,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":217324,"byte_end":217351,"line_start":945,"line_end":945,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"pub fn read_metadata_in_ico_format(&mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":217270,"byte_end":217293,"line_start":943,"line_end":943,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237280,"byte_end":237289,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::codecs::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237223,"byte_end":237268,"line_start":1418,"line_end":1418,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":239915,"byte_end":239925,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BmpEncoder","qualname":"::codecs::bmp::encoder::BmpEncoder","value":"BmpEncoder {  }","parent":null,"children":[{"krate":0,"index":935}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":239863,"byte_end":239903,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240163,"byte_end":240173,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"BMPEncoder","qualname":"::codecs::bmp::encoder::BMPEncoder","value":"BmpEncoder","parent":null,"children":[],"decl_id":null,"docs":" BMP Encoder","sig":null,"attributes":[{"value":"/ BMP Encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":239965,"byte_end":239980,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":239981,"byte_end":239984,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ An alias of [`BmpEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":239985,"byte_end":240016,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240017,"byte_end":240020,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240021,"byte_end":240037,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240038,"byte_end":240041,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`BmpEncoder`]: struct.BmpEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240042,"byte_end":240084,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240085,"byte_end":240104,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `BmpEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240105,"byte_end":240153,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240322,"byte_end":240325,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240251,"byte_end":240310,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240533,"byte_end":240539,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"encode","qualname":"<BmpEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240394,"byte_end":240427,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240432,"byte_end":240484,"line_start":35,"line_end":35,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240489,"byte_end":240521,"line_start":36,"line_end":36,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::codecs::dds","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":4621},{"krate":0,"index":4654},{"krate":0,"index":4653},{"krate":0,"index":4651},{"krate":0,"index":4648},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4635},{"krate":0,"index":4633},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":4656},{"krate":0,"index":4666},{"krate":0,"index":4668},{"krate":0,"index":4677},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1001}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7716,"byte_end":7739,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/  Decoding of DDS images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251491,"byte_end":251518,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251519,"byte_end":251522,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DDS (DirectDraw Surface) is a container format for storing DXT (S3TC) compressed images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251523,"byte_end":251616,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251617,"byte_end":251620,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251621,"byte_end":251641,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide> - Description of the DDS format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":251642,"byte_end":251765,"line_start":6,"line_end":6,"column_start":1,"column_end":124}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256197,"byte_end":256207,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::codecs::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":996}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[{"value":"/ The representation of a DDS decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256146,"byte_end":256185,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256351,"byte_end":256354,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256282,"byte_end":256339,"line_start":160,"line_end":160,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::codecs::dxt","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":4679},{"krate":0,"index":4695},{"krate":0,"index":4694},{"krate":0,"index":4692},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1042},{"krate":0,"index":1046},{"krate":0,"index":1055},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1116},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7761,"byte_end":7784,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/  Decoding of DXT (S3TC) compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258255,"byte_end":258294,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258295,"byte_end":258298,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DXT is an image format that supports lossy compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258299,"byte_end":258358,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258359,"byte_end":258362,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258363,"byte_end":258383,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258384,"byte_end":258536,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258537,"byte_end":258540,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258541,"byte_end":258670,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259452,"byte_end":259456,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::codecs::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259328,"byte_end":259394,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259399,"byte_end":259447,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259587,"byte_end":259591,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::codecs::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259462,"byte_end":259529,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259534,"byte_end":259582,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259722,"byte_end":259726,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::codecs::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259597,"byte_end":259664,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259669,"byte_end":259717,"line_start":35,"line_end":35,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259311,"byte_end":259321,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::codecs::dxt::DXTVariant","value":"pub enum DXTVariant {\n\n    /// The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n    /// compressed into an 8 byte block of DXT1 data\n    DXT1,\n\n    /// The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT3 data\n    DXT3,\n\n    /// The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT5 data\n    DXT5,\n}","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4684}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258945,"byte_end":258994,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":258995,"byte_end":259047,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259048,"byte_end":259095,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259096,"byte_end":259099,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: The name of this enum will be changed to [`DxtVariant`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259100,"byte_end":259172,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259173,"byte_end":259176,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ TODO: rename to [`DxtVariant`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259177,"byte_end":259211,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259212,"byte_end":259215,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`DxtVariant`]: type.DxtVariant.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259216,"byte_end":259256,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259923,"byte_end":259933,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"DxtVariant","qualname":"::codecs::dxt::DxtVariant","value":"DXTVariant","parent":null,"children":[],"decl_id":null,"docs":" DXT compression version.","sig":null,"attributes":[{"value":"/ DXT compression version.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259731,"byte_end":259759,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259760,"byte_end":259763,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DXTVariant`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259764,"byte_end":259795,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259796,"byte_end":259799,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ TODO: remove when [`DXTVariant`] is renamed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259800,"byte_end":259848,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259849,"byte_end":259852,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`DXTVariant`]: enum.DXTVariant.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259853,"byte_end":259893,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259894,"byte_end":259913,"line_start":46,"line_end":46,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260565,"byte_end":260575,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"pub fn color_type(Self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the color type that is stored in this DXT variant","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260492,"byte_end":260553,"line_start":67,"line_end":67,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260782,"byte_end":260792,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::codecs::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260755,"byte_end":260770,"line_start":76,"line_end":76,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261372,"byte_end":261375,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"pub fn new(R, u32, u32, DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260941,"byte_end":261007,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261012,"byte_end":261075,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261080,"byte_end":261137,"line_start":88,"line_end":88,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261142,"byte_end":261206,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261211,"byte_end":261244,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261249,"byte_end":261316,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":261321,"byte_end":261360,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264745,"byte_end":264754,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"DxtReader","qualname":"::codecs::dxt::DxtReader","value":"DxtReader {  }","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264719,"byte_end":264733,"line_start":193,"line_end":193,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265019,"byte_end":265028,"line_start":208,"line_end":208,"column_start":10,"column_end":19},"name":"DXTReader","qualname":"::codecs::dxt::DXTReader","value":"DxtReader<R>","parent":null,"children":[],"decl_id":null,"docs":" DXT reader","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264826,"byte_end":264840,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264841,"byte_end":264844,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DxtReader`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264845,"byte_end":264875,"line_start":201,"line_end":201,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264876,"byte_end":264879,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264880,"byte_end":264896,"line_start":203,"line_end":203,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264897,"byte_end":264900,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`DxtReader`]: struct.DxtReader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264901,"byte_end":264941,"line_start":205,"line_end":205,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264942,"byte_end":264961,"line_start":206,"line_end":206,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `DxtReader` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":264962,"byte_end":265009,"line_start":207,"line_end":207,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265290,"byte_end":265300,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"DxtEncoder","qualname":"::codecs::dxt::DxtEncoder","value":"DxtEncoder {  }","parent":null,"children":[{"krate":0,"index":1075}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265263,"byte_end":265278,"line_start":217,"line_end":217,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265524,"byte_end":265534,"line_start":231,"line_end":231,"column_start":10,"column_end":20},"name":"DXTEncoder","qualname":"::codecs::dxt::DXTEncoder","value":"DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" DXT encoder","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265326,"byte_end":265341,"line_start":222,"line_end":222,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265342,"byte_end":265345,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DxtEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265346,"byte_end":265377,"line_start":224,"line_end":224,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265378,"byte_end":265381,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265382,"byte_end":265398,"line_start":226,"line_end":226,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265399,"byte_end":265402,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ [`DxtEncoder`]: struct.DxtEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265403,"byte_end":265445,"line_start":228,"line_end":228,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265446,"byte_end":265465,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `DxtEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265466,"byte_end":265514,"line_start":230,"line_end":230,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265661,"byte_end":265664,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtEncoder<W>>::new","value":"pub fn new(W) -> DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265591,"byte_end":265649,"line_start":234,"line_end":234,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265928,"byte_end":265934,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"encode","qualname":"<DxtEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265726,"byte_end":265763,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265768,"byte_end":265820,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/ in ```DXTVariant``` ```variant```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265825,"byte_end":265862,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.color_type()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265867,"byte_end":265916,"line_start":242,"line_end":242,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::codecs::farbfeld","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1168},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1205},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1222}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7806,"byte_end":7834,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ Decoding of farbfeld images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":287940,"byte_end":287971,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":287972,"byte_end":287975,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ farbfeld is a lossless image format which is easy to parse, pipe and compress.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":287976,"byte_end":288058,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288059,"byte_end":288062,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It has the following format:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288063,"byte_end":288095,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288096,"byte_end":288099,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ | Bytes  | Description                                             |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288100,"byte_end":288172,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ |--------|---------------------------------------------------------|","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288173,"byte_end":288245,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ | 8      | \"farbfeld\" magic value                                  |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288246,"byte_end":288318,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (width)                      |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288319,"byte_end":288391,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ | 4      | 32-Bit BE unsigned integer (height)                     |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288392,"byte_end":288464,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ | [2222] | 4⋅16-Bit BE unsigned integers [RGBA] / pixel, row-major |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288465,"byte_end":288539,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288540,"byte_end":288543,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The RGB-data should be sRGB for best interoperability and not alpha-premultiplied.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288544,"byte_end":288630,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288631,"byte_end":288634,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288635,"byte_end":288654,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/ * <https://tools.suckless.org/farbfeld/> - the farbfeld specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":288655,"byte_end":288728,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":289153,"byte_end":289167,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::codecs::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[{"value":"/ farbfeld Reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":289122,"byte_end":289141,"line_start":29,"line_end":29,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":293875,"byte_end":293890,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::codecs::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":1193}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[{"value":"/ farbfeld decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":293843,"byte_end":293863,"line_start":162,"line_end":162,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":294049,"byte_end":294052,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":293975,"byte_end":294037,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295395,"byte_end":295410,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::codecs::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":1215}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[{"value":"/ farbfeld encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295363,"byte_end":295383,"line_start":215,"line_end":215,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295557,"byte_end":295560,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"pub fn new(W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295487,"byte_end":295545,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295768,"byte_end":295774,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data``` (native endian)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295651,"byte_end":295699,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295704,"byte_end":295756,"line_start":227,"line_end":227,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::codecs::gif","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":6978},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":6996},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1285},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1300},{"krate":0,"index":1304},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1324}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7861,"byte_end":7884,"line_start":226,"line_end":226,"column_start":5,"column_end":28}},{"value":"/  Decoding of GIF Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300015,"byte_end":300042,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300043,"byte_end":300046,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300047,"byte_end":300140,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300141,"byte_end":300144,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300145,"byte_end":300165,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300166,"byte_end":300245,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300246,"byte_end":300249,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300250,"byte_end":300264,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300265,"byte_end":300283,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ use image::gif::{GifDecoder, GifEncoder};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300284,"byte_end":300329,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300330,"byte_end":300378,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300379,"byte_end":300401,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300402,"byte_end":300442,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ // Decode a gif into frames","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300443,"byte_end":300474,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300475,"byte_end":300516,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300517,"byte_end":300573,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ let frames = decoder.into_frames();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300574,"byte_end":300613,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300614,"byte_end":300684,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300685,"byte_end":300688,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // Encode frames into a gif and save to a file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300689,"byte_end":300739,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300740,"byte_end":300786,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ let mut encoder = GifEncoder::new(file_out);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300787,"byte_end":300835,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ encoder.encode_frames(frames.into_iter());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300836,"byte_end":300882,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300883,"byte_end":300895,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300896,"byte_end":300903,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300904,"byte_end":300911,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":300912,"byte_end":300945,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301529,"byte_end":301539,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::codecs::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1262}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301502,"byte_end":301517,"line_start":46,"line_end":46,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301691,"byte_end":301694,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301617,"byte_end":301679,"line_start":52,"line_end":52,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":302019,"byte_end":302028,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::codecs::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301962,"byte_end":302007,"line_start":63,"line_end":63,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311004,"byte_end":311014,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"GifEncoder","qualname":"::codecs::gif::GifEncoder","value":"GifEncoder {  }","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":310976,"byte_end":310992,"line_start":292,"line_end":292,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311288,"byte_end":311295,"line_start":307,"line_end":307,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codecs::gif::Encoder","value":"GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" GIF encoder","sig":null,"attributes":[{"value":"/ GIF encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311090,"byte_end":311105,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311106,"byte_end":311109,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ An alias of [`GifEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311110,"byte_end":311141,"line_start":300,"line_end":300,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311142,"byte_end":311145,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311146,"byte_end":311162,"line_start":302,"line_end":302,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311163,"byte_end":311166,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ [`GifEncoder`]: struct.GifEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311167,"byte_end":311209,"line_start":304,"line_end":304,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311210,"byte_end":311229,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `GifEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311230,"byte_end":311278,"line_start":306,"line_end":306,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311394,"byte_end":311397,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<GifEncoder<W>>::new","value":"pub fn new(W) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311352,"byte_end":311382,"line_start":310,"line_end":310,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311558,"byte_end":311564,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"encode","qualname":"<GifEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311520,"byte_end":311546,"line_start":318,"line_end":318,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312279,"byte_end":312291,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<GifEncoder<W>>::encode_frame","value":"pub fn encode_frame(&mut Self, animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312233,"byte_end":312267,"line_start":339,"line_end":339,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312577,"byte_end":312590,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<GifEncoder<W>>::encode_frames","value":"pub fn encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = animation::Frame>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312447,"byte_end":312466,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312471,"byte_end":312565,"line_start":346,"line_end":346,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":313068,"byte_end":313085,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<GifEncoder<W>>::try_encode_frames","value":"pub fn try_encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = ImageResult<animation::Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312813,"byte_end":312887,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312892,"byte_end":312961,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":312966,"byte_end":313056,"line_start":359,"line_end":359,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::codecs::hdr","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1502},{"krate":0,"index":1555},{"krate":0,"index":1556}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7906,"byte_end":7929,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/  Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316095,"byte_end":316131,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316132,"byte_end":316135,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder for Radiance HDR images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316136,"byte_end":316174,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316175,"byte_end":316178,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316179,"byte_end":316199,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316200,"byte_end":316203,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316204,"byte_end":316263,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316264,"byte_end":316321,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\mod.rs","byte_start":316322,"byte_end":316325,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":320884,"byte_end":320894,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"HdrAdapter","qualname":"::codecs::hdr::decoder::HdrAdapter","value":"HdrAdapter {  }","parent":null,"children":[{"krate":0,"index":4772},{"krate":0,"index":4773}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":320805,"byte_end":320855,"line_start":116,"line_end":116,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321197,"byte_end":321207,"line_start":133,"line_end":133,"column_start":10,"column_end":20},"name":"HDRAdapter","qualname":"::codecs::hdr::decoder::HDRAdapter","value":"HdrAdapter<R>","parent":null,"children":[],"decl_id":null,"docs":" HDR Adapter","sig":null,"attributes":[{"value":"/ HDR Adapter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":320999,"byte_end":321014,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321015,"byte_end":321018,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrAdapter`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321019,"byte_end":321050,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321051,"byte_end":321054,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321055,"byte_end":321071,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321072,"byte_end":321075,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`HdrAdapter`]: struct.HdrAdapter.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321076,"byte_end":321118,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321119,"byte_end":321138,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrAdapter` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321139,"byte_end":321187,"line_start":132,"line_end":132,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321297,"byte_end":321300,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrAdapter<R>>::new","value":"pub fn new(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321266,"byte_end":321285,"line_start":136,"line_end":136,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321573,"byte_end":321586,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HdrAdapter<R>>::new_nonstrict","value":"pub fn new_nonstrict(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321519,"byte_end":321561,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":322563,"byte_end":322572,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::codecs::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":322506,"byte_end":322551,"line_start":175,"line_end":175,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324016,"byte_end":324025,"line_start":227,"line_end":227,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::codecs::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":323974,"byte_end":324005,"line_start":226,"line_end":226,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324143,"byte_end":324153,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::codecs::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324087,"byte_end":324114,"line_start":230,"line_end":230,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324378,"byte_end":324388,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"Rgbe8Pixel","qualname":"::codecs::hdr::decoder::Rgbe8Pixel","value":"Rgbe8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":4789}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324228,"byte_end":324301,"line_start":239,"line_end":239,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324302,"byte_end":324312,"line_start":240,"line_end":240,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4787},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324424,"byte_end":324425,"line_start":244,"line_end":244,"column_start":9,"column_end":10},"name":"c","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324395,"byte_end":324415,"line_start":243,"line_end":243,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":4789},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324461,"byte_end":324462,"line_start":246,"line_end":246,"column_start":9,"column_end":10},"name":"e","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::e","value":"u8","parent":{"krate":0,"index":4786},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324440,"byte_end":324452,"line_start":245,"line_end":245,"column_start":5,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324727,"byte_end":324737,"line_start":258,"line_end":258,"column_start":10,"column_end":20},"name":"RGBE8Pixel","qualname":"::codecs::hdr::decoder::RGBE8Pixel","value":"Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324471,"byte_end":324544,"line_start":249,"line_end":249,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324545,"byte_end":324548,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ An alias of [`Rgbe8Pixel`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324549,"byte_end":324580,"line_start":251,"line_end":251,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324581,"byte_end":324584,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324585,"byte_end":324601,"line_start":253,"line_end":253,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324602,"byte_end":324605,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`Rgbe8Pixel`]: struct.Rgbe8Pixel.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324606,"byte_end":324648,"line_start":255,"line_end":255,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324649,"byte_end":324668,"line_start":256,"line_end":256,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `Rgbe8Pixel` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324669,"byte_end":324717,"line_start":257,"line_end":257,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324805,"byte_end":324810,"line_start":261,"line_end":261,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::codecs::hdr::decoder::rgbe8","value":"pub fn rgbe8(u8, u8, u8, u8) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324753,"byte_end":324797,"line_start":260,"line_end":260,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324999,"byte_end":325005,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<Rgbe8Pixel>::to_hdr","value":"pub fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324915,"byte_end":324973,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324978,"byte_end":324987,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325765,"byte_end":325771,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<Rgbe8Pixel>::to_ldr","value":"pub fn to_ldr<T: Primitive + Zero>(Self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325500,"byte_end":325574,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325579,"byte_end":325582,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325587,"byte_end":325636,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325641,"byte_end":325644,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325649,"byte_end":325660,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325665,"byte_end":325668,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325673,"byte_end":325739,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325744,"byte_end":325753,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326157,"byte_end":326175,"line_start":303,"line_end":303,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<Rgbe8Pixel>::to_ldr_scale_gamma","value":"pub fn to_ldr_scale_gamma<T: Primitive + Zero>(Self, f32, f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325864,"byte_end":325930,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325935,"byte_end":325938,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325943,"byte_end":325992,"line_start":296,"line_end":296,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":325997,"byte_end":326000,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326005,"byte_end":326016,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326021,"byte_end":326024,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326029,"byte_end":326089,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326094,"byte_end":326131,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":326136,"byte_end":326145,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327383,"byte_end":327386,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327234,"byte_end":327289,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HdrDecoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327294,"byte_end":327340,"line_start":332,"line_end":332,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327345,"byte_end":327371,"line_start":333,"line_end":333,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327794,"byte_end":327809,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"pub fn with_strictness(R, bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327491,"byte_end":327552,"line_start":338,"line_end":338,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HdrDecoder```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327557,"byte_end":327610,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327615,"byte_end":327618,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327623,"byte_end":327653,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327658,"byte_end":327661,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327666,"byte_end":327716,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327721,"byte_end":327782,"line_start":344,"line_end":344,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":330362,"byte_end":330370,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"pub fn metadata(&Self) -> HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":330284,"byte_end":330350,"line_start":411,"line_end":411,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":330501,"byte_end":330518,"line_start":417,"line_end":417,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"pub fn read_image_native(Self) -> ImageResult<Vec<Rgbe8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":330432,"byte_end":330489,"line_start":416,"line_end":416,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":331151,"byte_end":331171,"line_start":432,"line_end":432,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"pub fn read_image_transform<T: Send, F: Send + Sync + Fn(Rgbe8Pixel) ->\n                            T>(Self, F, &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":331076,"byte_end":331139,"line_start":431,"line_end":431,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332310,"byte_end":332324,"line_start":468,"line_end":468,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"pub fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332207,"byte_end":332267,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332272,"byte_end":332298,"line_start":467,"line_end":467,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332628,"byte_end":332642,"line_start":476,"line_end":476,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"pub fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332547,"byte_end":332608,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332613,"byte_end":332616,"line_start":475,"line_end":475,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333453,"byte_end":333476,"line_start":501,"line_end":501,"column_start":12,"column_end":35},"name":"HdrImageDecoderIterator","qualname":"::codecs::hdr::decoder::HdrImageDecoderIterator","value":"HdrImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333396,"byte_end":333441,"line_start":500,"line_end":500,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334077,"byte_end":334100,"line_start":520,"line_end":520,"column_start":10,"column_end":33},"name":"HDRImageDecoderIterator","qualname":"::codecs::hdr::decoder::HDRImageDecoderIterator","value":"HdrImageDecoderIterator<R>","parent":null,"children":[],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333797,"byte_end":333842,"line_start":511,"line_end":511,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333843,"byte_end":333846,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrImageDecoderIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333847,"byte_end":333891,"line_start":513,"line_end":513,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333892,"byte_end":333895,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333896,"byte_end":333912,"line_start":515,"line_end":515,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333913,"byte_end":333916,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`HdrImageDecoderIterator`]: struct.HdrImageDecoderIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333917,"byte_end":333985,"line_start":517,"line_end":517,"column_start":1,"column_end":69}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":333986,"byte_end":334005,"line_start":518,"line_end":518,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrImageDecoderIterator` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334006,"byte_end":334067,"line_start":519,"line_end":519,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341379,"byte_end":341390,"line_start":734,"line_end":734,"column_start":12,"column_end":23},"name":"HdrMetadata","qualname":"::codecs::hdr::decoder::HdrMetadata","value":"HdrMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341308,"byte_end":341343,"line_start":732,"line_end":732,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341528,"byte_end":341533,"line_start":737,"line_end":737,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::hdr::decoder::HdrMetadata::width","value":"u32","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341397,"byte_end":341460,"line_start":735,"line_end":735,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341465,"byte_end":341519,"line_start":736,"line_end":736,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4808},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341612,"byte_end":341618,"line_start":739,"line_end":739,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::hdr::decoder::HdrMetadata::height","value":"u32","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341544,"byte_end":341603,"line_start":738,"line_end":738,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4809},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341893,"byte_end":341904,"line_start":743,"line_end":743,"column_start":9,"column_end":20},"name":"orientation","qualname":"::codecs::hdr::decoder::HdrMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341629,"byte_end":341729,"line_start":740,"line_end":740,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341734,"byte_end":341811,"line_start":741,"line_end":741,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341816,"byte_end":341884,"line_start":742,"line_end":742,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4810},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342129,"byte_end":342137,"line_start":748,"line_end":748,"column_start":9,"column_end":17},"name":"exposure","qualname":"::codecs::hdr::decoder::HdrMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":341932,"byte_end":342002,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342007,"byte_end":342040,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342045,"byte_end":342048,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342053,"byte_end":342120,"line_start":747,"line_end":747,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4811},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342381,"byte_end":342397,"line_start":753,"line_end":753,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::codecs::hdr::decoder::HdrMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342156,"byte_end":342251,"line_start":749,"line_end":749,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342256,"byte_end":342292,"line_start":750,"line_end":750,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342297,"byte_end":342300,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342305,"byte_end":342372,"line_start":752,"line_end":752,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342476,"byte_end":342494,"line_start":755,"line_end":755,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::codecs::hdr::decoder::HdrMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342428,"byte_end":342467,"line_start":754,"line_end":754,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4813},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342723,"byte_end":342740,"line_start":759,"line_end":759,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::codecs::hdr::decoder::HdrMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":4806},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342513,"byte_end":342598,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342603,"byte_end":342673,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342678,"byte_end":342714,"line_start":758,"line_end":758,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342971,"byte_end":342982,"line_start":771,"line_end":771,"column_start":10,"column_end":21},"name":"HDRMetadata","qualname":"::codecs::hdr::decoder::HDRMetadata","value":"HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" HDR MetaData","sig":null,"attributes":[{"value":"/ HDR MetaData","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342768,"byte_end":342784,"line_start":762,"line_end":762,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342785,"byte_end":342788,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrMetadata`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342789,"byte_end":342821,"line_start":764,"line_end":764,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342822,"byte_end":342825,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342826,"byte_end":342842,"line_start":766,"line_end":766,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342843,"byte_end":342846,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ [`HdrMetadata`]: struct.HdrMetadata.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342847,"byte_end":342891,"line_start":768,"line_end":768,"column_start":1,"column_end":45}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342892,"byte_end":342911,"line_start":769,"line_end":769,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrMetadata` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":342912,"byte_end":342961,"line_start":770,"line_end":770,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":352031,"byte_end":352044,"line_start":991,"line_end":991,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::codecs::hdr::decoder::read_raw_file","value":"pub fn read_raw_file<P: AsRef<Path>>(P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":351967,"byte_end":352023,"line_start":990,"line_end":990,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352865,"byte_end":352875,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HdrEncoder","qualname":"::codecs::hdr::encoder::HdrEncoder","value":"HdrEncoder {  }","parent":null,"children":[{"krate":0,"index":1515}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352829,"byte_end":352853,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353099,"byte_end":353109,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"HDREncoder","qualname":"::codecs::hdr::encoder::HDREncoder","value":"HdrEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" HDR Encoder","sig":null,"attributes":[{"value":"/ HDR Encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352901,"byte_end":352916,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352917,"byte_end":352920,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352921,"byte_end":352952,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352953,"byte_end":352956,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352957,"byte_end":352973,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352974,"byte_end":352977,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`HdrEncoder`]: struct.HdrEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":352978,"byte_end":353020,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353021,"byte_end":353040,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353041,"byte_end":353089,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353197,"byte_end":353200,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrEncoder<W>>::new","value":"pub fn new(W) -> HdrEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353166,"byte_end":353185,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353363,"byte_end":353369,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<HdrEncoder<W>>::encode","value":"pub fn encode(Self, &[Rgb<f32>], usize, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353262,"byte_end":353294,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353299,"byte_end":353351,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":360799,"byte_end":360807,"line_start":239,"line_end":239,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::codecs::hdr::encoder::to_rgbe8","value":"pub fn to_rgbe8(Rgb<f32>) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":360742,"byte_end":360791,"line_start":238,"line_end":238,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::codecs::ico","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1652}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7951,"byte_end":7974,"line_start":230,"line_end":230,"column_start":5,"column_end":28}},{"value":"/  Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368184,"byte_end":368223,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368224,"byte_end":368227,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368228,"byte_end":368300,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368301,"byte_end":368304,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368305,"byte_end":368325,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368326,"byte_end":368389,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\mod.rs","byte_start":368390,"byte_end":368450,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372651,"byte_end":372661,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::codecs::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372621,"byte_end":372639,"line_start":104,"line_end":104,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":373159,"byte_end":373162,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":373086,"byte_end":373147,"line_start":130,"line_end":130,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":376622,"byte_end":376631,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::codecs::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":376565,"byte_end":376610,"line_start":247,"line_end":247,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382645,"byte_end":382655,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"IcoEncoder","qualname":"::codecs::ico::encoder::IcoEncoder","value":"IcoEncoder {  }","parent":null,"children":[{"krate":0,"index":1668}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382618,"byte_end":382633,"line_start":17,"line_end":17,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382879,"byte_end":382889,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"name":"ICOEncoder","qualname":"::codecs::ico::encoder::ICOEncoder","value":"IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" ICO encoder","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382681,"byte_end":382696,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382697,"byte_end":382700,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An alias of [`IcoEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382701,"byte_end":382732,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382733,"byte_end":382736,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382737,"byte_end":382753,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382754,"byte_end":382757,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`IcoEncoder`]: struct.IcoEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382758,"byte_end":382800,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382801,"byte_end":382820,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `IcoEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382821,"byte_end":382869,"line_start":30,"line_end":30,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383017,"byte_end":383020,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoEncoder<W>>::new","value":"pub fn new(W) -> IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382946,"byte_end":383005,"line_start":34,"line_end":34,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383318,"byte_end":383324,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"encode","qualname":"<IcoEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383082,"byte_end":383151,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383156,"byte_end":383230,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383235,"byte_end":383306,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1741},{"krate":0,"index":1891},{"krate":0,"index":1894}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7996,"byte_end":8020,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385764,"byte_end":385804,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385805,"byte_end":385808,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385809,"byte_end":385904,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385905,"byte_end":385959,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385960,"byte_end":385963,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385964,"byte_end":385983,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":385984,"byte_end":386060,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\mod.rs","byte_start":386061,"byte_end":386064,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386637,"byte_end":386648,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386609,"byte_end":386625,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386827,"byte_end":386830,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386754,"byte_end":386815,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387947,"byte_end":387952,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387333,"byte_end":387394,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387399,"byte_end":387402,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387407,"byte_end":387470,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387475,"byte_end":387538,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387543,"byte_end":387601,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387606,"byte_end":387660,"line_start":42,"line_end":42,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387665,"byte_end":387668,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387673,"byte_end":387735,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387740,"byte_end":387801,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387806,"byte_end":387831,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387836,"byte_end":387839,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387844,"byte_end":387905,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":387910,"byte_end":387935,"line_start":49,"line_end":49,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388357,"byte_end":388367,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388300,"byte_end":388345,"line_start":65,"line_end":65,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419941,"byte_end":419957,"line_start":275,"line_end":275,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419793,"byte_end":419857,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419862,"byte_end":419936,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419998,"byte_end":420004,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419964,"byte_end":419993,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420041,"byte_end":420052,"line_start":281,"line_end":281,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420011,"byte_end":420036,"line_start":280,"line_end":280,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4938},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419770,"byte_end":419786,"line_start":272,"line_end":272,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit {\n\n    /// Represents the absence of a unit, the values indicate only a\n    /// [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n    PixelAspectRatio,\n\n    /// Pixels per inch (2.54 cm)\n    Inches,\n\n    /// Pixels per centimeter\n    Centimeters,\n}","parent":null,"children":[{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4943}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":419649,"byte_end":419715,"line_start":270,"line_end":270,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420389,"byte_end":420401,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4958}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420057,"byte_end":420101,"line_start":284,"line_end":284,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420102,"byte_end":420105,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420106,"byte_end":420157,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420158,"byte_end":420161,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420162,"byte_end":420173,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use image::jpeg::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420174,"byte_end":420197,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420198,"byte_end":420236,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420237,"byte_end":420324,"line_start":291,"line_end":291,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420325,"byte_end":420332,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420464,"byte_end":420471,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420408,"byte_end":420455,"line_start":295,"line_end":295,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420543,"byte_end":420547,"line_start":298,"line_end":298,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420489,"byte_end":420534,"line_start":297,"line_end":297,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420753,"byte_end":420756,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420594,"byte_end":420641,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420646,"byte_end":420700,"line_start":303,"line_end":303,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420705,"byte_end":420741,"line_start":304,"line_end":304,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421207,"byte_end":421218,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421155,"byte_end":421195,"line_start":323,"line_end":323,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421703,"byte_end":421714,"line_start":347,"line_end":347,"column_start":10,"column_end":21},"name":"JPEGEncoder","qualname":"::codecs::jpeg::encoder::JPEGEncoder","value":"JpegEncoder","parent":null,"children":[],"decl_id":null,"docs":" JPEG Encoder","sig":null,"attributes":[{"value":"/ JPEG Encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421500,"byte_end":421516,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421517,"byte_end":421520,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ An alias of [`JpegEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421521,"byte_end":421553,"line_start":340,"line_end":340,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421554,"byte_end":421557,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421558,"byte_end":421574,"line_start":342,"line_end":342,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421575,"byte_end":421578,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ [`JpegEncoder`]: struct.JpegEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421579,"byte_end":421623,"line_start":344,"line_end":344,"column_start":1,"column_end":45}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421624,"byte_end":421643,"line_start":345,"line_end":345,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `JpegEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421644,"byte_end":421693,"line_start":346,"line_end":346,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421859,"byte_end":421862,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder>::new","value":"pub fn new(&mut W) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421789,"byte_end":421847,"line_start":350,"line_end":350,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":422155,"byte_end":422171,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421950,"byte_end":422017,"line_start":355,"line_end":355,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":422022,"byte_end":422093,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":422098,"byte_end":422143,"line_start":357,"line_end":357,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424513,"byte_end":424530,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424281,"byte_end":424345,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424350,"byte_end":424441,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424446,"byte_end":424501,"line_start":429,"line_end":429,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424862,"byte_end":424868,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424628,"byte_end":424691,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424696,"byte_end":424748,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424753,"byte_end":424784,"line_start":436,"line_end":436,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424789,"byte_end":424792,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":424797,"byte_end":424850,"line_start":438,"line_end":438,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":427069,"byte_end":427081,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426541,"byte_end":426569,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426574,"byte_end":426577,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426582,"byte_end":426675,"line_start":484,"line_end":484,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426680,"byte_end":426774,"line_start":485,"line_end":485,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426779,"byte_end":426874,"line_start":486,"line_end":486,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426879,"byte_end":426970,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426975,"byte_end":426991,"line_start":488,"line_end":488,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":426996,"byte_end":426999,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":427004,"byte_end":427057,"line_start":490,"line_end":490,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":7298},{"krate":0,"index":1927},{"krate":0,"index":7300},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":7304},{"krate":0,"index":1930},{"krate":0,"index":7306},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1992},{"krate":0,"index":2000},{"krate":0,"index":2006},{"krate":0,"index":2018},{"krate":0,"index":2023},{"krate":0,"index":4971},{"krate":0,"index":4995},{"krate":0,"index":4994},{"krate":0,"index":4992},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4997},{"krate":0,"index":5021},{"krate":0,"index":5020},{"krate":0,"index":5018},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":2025},{"krate":0,"index":2032},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2045}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8043,"byte_end":8066,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454313,"byte_end":454352,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454353,"byte_end":454356,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454357,"byte_end":454447,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454448,"byte_end":454451,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454452,"byte_end":454471,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454472,"byte_end":454529,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":454530,"byte_end":454533,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455286,"byte_end":455295,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455096,"byte_end":455110,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455111,"byte_end":455114,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455115,"byte_end":455174,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455175,"byte_end":455236,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455237,"byte_end":455274,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455570,"byte_end":455579,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"PNGReader","qualname":"::codecs::png::PNGReader","value":"PngReader<R>","parent":null,"children":[],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[{"value":"/ PNG Reader","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455377,"byte_end":455391,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455392,"byte_end":455395,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngReader`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455396,"byte_end":455426,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455427,"byte_end":455430,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455431,"byte_end":455447,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455448,"byte_end":455451,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`PngReader`]: struct.PngReader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455452,"byte_end":455492,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455493,"byte_end":455512,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngReader` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455513,"byte_end":455560,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457661,"byte_end":457671,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457634,"byte_end":457649,"line_start":114,"line_end":114,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457849,"byte_end":457852,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457775,"byte_end":457837,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461605,"byte_end":461609,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":460958,"byte_end":461015,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461020,"byte_end":461023,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461028,"byte_end":461119,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461124,"byte_end":461214,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461219,"byte_end":461309,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461314,"byte_end":461368,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461373,"byte_end":461376,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461381,"byte_end":461474,"line_start":184,"line_end":184,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461479,"byte_end":461572,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461577,"byte_end":461593,"line_start":186,"line_end":186,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":462032,"byte_end":462039,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461678,"byte_end":461725,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461730,"byte_end":461733,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461738,"byte_end":461828,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461833,"byte_end":461917,"line_start":194,"line_end":194,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461922,"byte_end":461925,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":461930,"byte_end":462020,"line_start":196,"line_end":196,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":464008,"byte_end":464019,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463722,"byte_end":463776,"line_start":251,"line_end":251,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463777,"byte_end":463780,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463781,"byte_end":463831,"line_start":253,"line_end":253,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463832,"byte_end":463835,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463836,"byte_end":463892,"line_start":255,"line_end":255,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463893,"byte_end":463935,"line_start":256,"line_end":256,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":463936,"byte_end":463996,"line_start":257,"line_end":257,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2018},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471215,"byte_end":471225,"line_start":445,"line_end":445,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471188,"byte_end":471203,"line_start":444,"line_end":444,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471507,"byte_end":471517,"line_start":460,"line_end":460,"column_start":10,"column_end":20},"name":"PNGEncoder","qualname":"::codecs::png::PNGEncoder","value":"PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" PNG Encoder","sig":null,"attributes":[{"value":"/ PNG Encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471309,"byte_end":471324,"line_start":451,"line_end":451,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471325,"byte_end":471328,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471329,"byte_end":471360,"line_start":453,"line_end":453,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471361,"byte_end":471364,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471365,"byte_end":471381,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471382,"byte_end":471385,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ [`PngEncoder`]: struct.PngEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471386,"byte_end":471428,"line_start":457,"line_end":457,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471429,"byte_end":471448,"line_start":458,"line_end":458,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471449,"byte_end":471497,"line_start":459,"line_end":459,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471720,"byte_end":471727,"line_start":466,"line_end":466,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471686,"byte_end":471715,"line_start":465,"line_end":465,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471767,"byte_end":471771,"line_start":468,"line_end":468,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471733,"byte_end":471762,"line_start":467,"line_end":467,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471808,"byte_end":471812,"line_start":470,"line_end":470,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471777,"byte_end":471803,"line_start":469,"line_end":469,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471853,"byte_end":471860,"line_start":472,"line_end":472,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471818,"byte_end":471848,"line_start":471,"line_end":471,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471906,"byte_end":471909,"line_start":474,"line_end":474,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471866,"byte_end":471901,"line_start":473,"line_end":473,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471935,"byte_end":471950,"line_start":477,"line_end":477,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::CompressionType::__NonExhaustive","value":"CompressionType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471664,"byte_end":471679,"line_start":464,"line_end":464,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType {\n\n    /// Default compression level\n    Default,\n\n    /// Fast, minimal compression\n    Fast,\n\n    /// High compression level\n    Best,\n\n    /// Huffman coding compression\n    Huffman,\n\n    /// Run-length encoding compression\n    Rle,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4972},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4980},{"krate":0,"index":4982}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471539,"byte_end":471609,"line_start":462,"line_end":462,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4998},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472385,"byte_end":472393,"line_start":488,"line_end":488,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth greyscale or data with a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472280,"byte_end":472356,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472361,"byte_end":472380,"line_start":487,"line_end":487,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472460,"byte_end":472463,"line_start":490,"line_end":490,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472399,"byte_end":472455,"line_start":489,"line_end":489,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472513,"byte_end":472515,"line_start":492,"line_end":492,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472469,"byte_end":472508,"line_start":491,"line_end":491,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472592,"byte_end":472595,"line_start":494,"line_end":494,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472521,"byte_end":472587,"line_start":493,"line_end":493,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472682,"byte_end":472687,"line_start":496,"line_end":496,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472601,"byte_end":472677,"line_start":495,"line_end":495,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5008},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472713,"byte_end":472728,"line_start":499,"line_end":499,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::FilterType::__NonExhaustive","value":"FilterType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472263,"byte_end":472273,"line_start":485,"line_end":485,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType {\n\n    /// No processing done, best used for low bit depth greyscale or data with a\n    /// low color count\n    NoFilter,\n\n    /// Filters based on previous pixel in the same scanline\n    Sub,\n\n    /// Filters based on the scanline above\n    Up,\n\n    /// Filters based on the average of left and right neighbor pixels\n    Avg,\n\n    /// Algorithm that takes into account the left, upper left, and above pixels\n    Paeth,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4998},{"krate":0,"index":5000},{"krate":0,"index":5002},{"krate":0,"index":5004},{"krate":0,"index":5006},{"krate":0,"index":5008}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":471990,"byte_end":472062,"line_start":480,"line_end":480,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472063,"byte_end":472066,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Sub` though this default may change in the future, most notable if an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472067,"byte_end":472163,"line_start":482,"line_end":482,"column_start":1,"column_end":97}},{"value":"/ adaptive encoding option is implemented.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472164,"byte_end":472208,"line_start":483,"line_end":483,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472873,"byte_end":472876,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472803,"byte_end":472861,"line_start":503,"line_end":503,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":474058,"byte_end":474074,"line_start":526,"line_end":526,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473044,"byte_end":473139,"line_start":512,"line_end":512,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473144,"byte_end":473170,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473175,"byte_end":473178,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473183,"byte_end":473278,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473283,"byte_end":473376,"line_start":516,"line_end":516,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473381,"byte_end":473473,"line_start":517,"line_end":517,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473478,"byte_end":473569,"line_start":518,"line_end":518,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473574,"byte_end":473622,"line_start":519,"line_end":519,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473627,"byte_end":473630,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type. It is likely that the library used","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473635,"byte_end":473730,"line_start":521,"line_end":521,"column_start":5,"column_end":100}},{"value":"/ will at some point gain the ability to use adaptive filtering methods per pixel row (or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473735,"byte_end":473826,"line_start":522,"line_end":522,"column_start":5,"column_end":96}},{"value":"/ even interlaced row). We might make it the new default variant in which case choosing a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473831,"byte_end":473922,"line_start":523,"line_end":523,"column_start":5,"column_end":96}},{"value":"/ particular filter method likely produces larger images. Be sure to check the release notes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":473927,"byte_end":474021,"line_start":524,"line_end":524,"column_start":5,"column_end":99}},{"value":"/ once in a while.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":474026,"byte_end":474046,"line_start":525,"line_end":525,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":474354,"byte_end":474360,"line_start":535,"line_end":535,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.\n","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":474252,"byte_end":474342,"line_start":534,"line_end":534,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::codecs::pnm","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2086},{"krate":0,"index":2252},{"krate":0,"index":2390}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8088,"byte_end":8111,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/ Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480339,"byte_end":480400,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480401,"byte_end":480404,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480405,"byte_end":480501,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480502,"byte_end":480598,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ variants for now as alpha color types are unsupported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\mod.rs","byte_start":480599,"byte_end":480657,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":497890,"byte_end":497900,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::codecs::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":497863,"byte_end":497878,"line_start":219,"line_end":219,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":498090,"byte_end":498093,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":498014,"byte_end":498078,"line_start":227,"line_end":227,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":499280,"byte_end":499290,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> (R, PnmHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":499205,"byte_end":499268,"line_start":251,"line_end":251,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508772,"byte_end":508781,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::codecs::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508715,"byte_end":508760,"line_start":513,"line_end":513,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":512373,"byte_end":512380,"line_start":611,"line_end":611,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":512281,"byte_end":512361,"line_start":610,"line_end":610,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5156},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":534858,"byte_end":534860,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::codecs::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":5154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":534876,"byte_end":534879,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::codecs::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":5154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5154},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":534836,"byte_end":534847,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::codecs::pnm::encoder::FlatSamples","value":"pub enum FlatSamples<'a> { U8(&'a [u8]), U16(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":5156},{"krate":0,"index":5159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":534960,"byte_end":534970,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PnmEncoder","qualname":"::codecs::pnm::encoder::PnmEncoder","value":"PnmEncoder {  }","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":534895,"byte_end":534948,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535227,"byte_end":535237,"line_start":46,"line_end":46,"column_start":10,"column_end":20},"name":"PNMEncoder","qualname":"::codecs::pnm::encoder::PNMEncoder","value":"PnmEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" PNM Encoder","sig":null,"attributes":[{"value":"/ PNM Encoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535029,"byte_end":535044,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535045,"byte_end":535048,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PnmEncoder`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535049,"byte_end":535080,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535081,"byte_end":535084,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535085,"byte_end":535101,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535102,"byte_end":535105,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`PnmEncoder`]: struct.PnmEncoder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535106,"byte_end":535148,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535149,"byte_end":535168,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PnmEncoder` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":535169,"byte_end":535217,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536590,"byte_end":536593,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmEncoder<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PNMEncoder from the `writer`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536288,"byte_end":536332,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536337,"byte_end":536340,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536345,"byte_end":536435,"line_start":95,"line_end":95,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536440,"byte_end":536532,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536537,"byte_end":536578,"line_start":97,"line_end":97,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537143,"byte_end":537155,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PnmEncoder<W>>::with_subtype","value":"pub fn with_subtype(Self, PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536722,"byte_end":536762,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536767,"byte_end":536770,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536775,"byte_end":536869,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536874,"byte_end":536968,"line_start":108,"line_end":108,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536973,"byte_end":537023,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537028,"byte_end":537031,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537036,"byte_end":537131,"line_start":111,"line_end":111,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537861,"byte_end":537872,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PnmEncoder<W>>::with_header","value":"pub fn with_header(Self, PnmHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537322,"byte_end":537361,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537366,"byte_end":537369,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537374,"byte_end":537469,"line_start":121,"line_end":121,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537474,"byte_end":537563,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537568,"byte_end":537652,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537657,"byte_end":537660,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537665,"byte_end":537740,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537745,"byte_end":537748,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":537753,"byte_end":537849,"line_start":127,"line_end":127,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538443,"byte_end":538462,"line_start":142,"line_end":142,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PnmEncoder<W>>::with_dynamic_header","value":"pub fn with_dynamic_header(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538035,"byte_end":538084,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538089,"byte_end":538092,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538097,"byte_end":538190,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538195,"byte_end":538287,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538292,"byte_end":538330,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538335,"byte_end":538338,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538343,"byte_end":538431,"line_start":141,"line_end":141,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538838,"byte_end":538844,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"encode","qualname":"<PnmEncoder<W>>::encode","value":"pub fn encode<'s, S>(&mut Self, S, u32, u32, ColorType) -> ImageResult<()>\nwhere S: Into<FlatSamples>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538599,"byte_end":538657,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538662,"byte_end":538665,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538670,"byte_end":538756,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":538761,"byte_end":538826,"line_start":152,"line_end":152,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5168},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557891,"byte_end":557897,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::codecs::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":5167},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557832,"byte_end":557886,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557981,"byte_end":557986,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::codecs::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":5167},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557904,"byte_end":557976,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557811,"byte_end":557825,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::codecs::pnm::header::SampleEncoding","value":"pub enum SampleEncoding {\n\n    /// Samples are unsigned binary integers in big endian\n    Binary,\n\n    /// Samples are encoded as decimal ascii strings separated by whitespace\n    Ascii,\n}","parent":null,"children":[{"krate":0,"index":5168},{"krate":0,"index":5170}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557704,"byte_end":557756,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558301,"byte_end":558307,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::codecs::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":5183},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558269,"byte_end":558296,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558362,"byte_end":558369,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::codecs::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":5183},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558330,"byte_end":558357,"line_start":25,"line_end":25,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558424,"byte_end":558430,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::codecs::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":5183},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558392,"byte_end":558419,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5193},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558477,"byte_end":558489,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::codecs::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":5183},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558453,"byte_end":558472,"line_start":31,"line_end":31,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558252,"byte_end":558262,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::codecs::pnm::header::PNMSubtype","value":"pub enum PNMSubtype {\n\n    /// Magic numbers P1 and P4\n    Bitmap(SampleEncoding),\n\n    /// Magic numbers P2 and P5\n    Graymap(SampleEncoding),\n\n    /// Magic numbers P3 and P6\n    Pixmap(SampleEncoding),\n\n    /// Magic number P7\n    ArbitraryMap,\n}","parent":null,"children":[{"krate":0,"index":5184},{"krate":0,"index":5187},{"krate":0,"index":5190},{"krate":0,"index":5193}],"decl_id":null,"docs":" Denotes the category of the magic number","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":557991,"byte_end":558035,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558036,"byte_end":558039,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: The name of this enum will be changed to [`PnmSubtype`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558040,"byte_end":558112,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558113,"byte_end":558116,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ TODO: rename to [`PnmSubtype`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558117,"byte_end":558152,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558153,"byte_end":558156,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`PnmSubtype`]: type.PnmSubtype.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558157,"byte_end":558197,"line_start":19,"line_end":19,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558673,"byte_end":558683,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"name":"PnmSubtype","qualname":"::codecs::pnm::header::PnmSubtype","value":"PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" PNM Subtype","sig":null,"attributes":[{"value":"/ PNM Subtype","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558494,"byte_end":558509,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558510,"byte_end":558513,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PNMSubtype`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558514,"byte_end":558545,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558546,"byte_end":558549,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ TODO: remove when [`DXTVariant`] is renamed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558550,"byte_end":558598,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558599,"byte_end":558602,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`PNMSubtype`]: enum.PNMSubtype.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558603,"byte_end":558643,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558644,"byte_end":558663,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559086,"byte_end":559095,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"PnmHeader","qualname":"::codecs::pnm::header::PnmHeader","value":"PnmHeader {  }","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558699,"byte_end":558745,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558746,"byte_end":558749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558750,"byte_end":558848,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558849,"byte_end":558945,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":558946,"byte_end":559043,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559044,"byte_end":559074,"line_start":50,"line_end":50,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559373,"byte_end":559382,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"PNMHeader","qualname":"::codecs::pnm::header::PNMHeader","value":"PnmHeader","parent":null,"children":[],"decl_id":null,"docs":" PNM Header","sig":null,"attributes":[{"value":"/ PNM Header","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559180,"byte_end":559194,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559195,"byte_end":559198,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PnmHeader`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559199,"byte_end":559229,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559230,"byte_end":559233,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559234,"byte_end":559250,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559251,"byte_end":559254,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`PnmHeader`]: struct.PnmHeader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559255,"byte_end":559295,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559296,"byte_end":559315,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PnmHeader` instead\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559316,"byte_end":559363,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5207},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559641,"byte_end":559653,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::codecs::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5210}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559543,"byte_end":559599,"line_start":74,"line_end":74,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559701,"byte_end":559709,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::BitmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559660,"byte_end":559692,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559769,"byte_end":559775,"line_start":81,"line_end":81,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559732,"byte_end":559760,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5210},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559823,"byte_end":559828,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":5207},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559787,"byte_end":559814,"line_start":83,"line_end":83,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559937,"byte_end":559950,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::codecs::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559838,"byte_end":559895,"line_start":87,"line_end":87,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559998,"byte_end":560006,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::GraymapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":559957,"byte_end":559989,"line_start":90,"line_end":90,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560066,"byte_end":560072,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560029,"byte_end":560057,"line_start":93,"line_end":93,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560120,"byte_end":560125,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560084,"byte_end":560111,"line_start":96,"line_end":96,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560187,"byte_end":560195,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::codecs::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560137,"byte_end":560178,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560305,"byte_end":560317,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::codecs::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560205,"byte_end":560263,"line_start":103,"line_end":103,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560365,"byte_end":560373,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::PixmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560324,"byte_end":560356,"line_start":106,"line_end":106,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560433,"byte_end":560439,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560396,"byte_end":560424,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560487,"byte_end":560492,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560451,"byte_end":560478,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560554,"byte_end":560560,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560504,"byte_end":560545,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560668,"byte_end":560683,"line_start":121,"line_end":121,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::codecs::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560570,"byte_end":560632,"line_start":119,"line_end":119,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5237},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560727,"byte_end":560733,"line_start":123,"line_end":123,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560690,"byte_end":560718,"line_start":122,"line_end":122,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560781,"byte_end":560786,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560745,"byte_end":560772,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5239},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560835,"byte_end":560840,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"name":"depth","qualname":"::codecs::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560798,"byte_end":560826,"line_start":128,"line_end":128,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5240},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560902,"byte_end":560908,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560852,"byte_end":560893,"line_start":131,"line_end":131,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560969,"byte_end":560977,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::codecs::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<codecs::pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":560920,"byte_end":560960,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5247},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561180,"byte_end":561193,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561131,"byte_end":561175,"line_start":141,"line_end":141,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5249},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561276,"byte_end":561294,"line_start":145,"line_end":145,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561200,"byte_end":561271,"line_start":144,"line_end":144,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561346,"byte_end":561355,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::codecs::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561301,"byte_end":561341,"line_start":147,"line_end":147,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5253},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561413,"byte_end":561427,"line_start":151,"line_end":151,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561362,"byte_end":561408,"line_start":150,"line_end":150,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5255},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561475,"byte_end":561478,"line_start":154,"line_end":154,"column_start":5,"column_end":8},"name":"RGB","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561434,"byte_end":561470,"line_start":153,"line_end":153,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5257},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561532,"byte_end":561540,"line_start":157,"line_end":157,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561485,"byte_end":561527,"line_start":156,"line_end":156,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561597,"byte_end":561603,"line_start":160,"line_end":160,"column_start":5,"column_end":11},"name":"Custom","qualname":"::codecs::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561547,"byte_end":561592,"line_start":159,"line_end":159,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561107,"byte_end":561124,"line_start":140,"line_end":140,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::codecs::pnm::header::ArbitraryTuplType","value":"pub enum ArbitraryTuplType {\n\n    /// Pixels are either black (0) or white (1)\n    BlackAndWhite,\n\n    /// Pixels are either black (0) or white (1) and a second alpha channel\n    BlackAndWhiteAlpha,\n\n    /// Pixels represent the amount of white\n    Grayscale,\n\n    /// Grayscale with an additional alpha channel\n    GrayscaleAlpha,\n\n    /// Three channels: Red, Green, Blue\n    RGB,\n\n    /// Four channels: Red, Green, Blue, Alpha\n    RGBAlpha,\n\n    /// An image format which is not standardized\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5253},{"krate":0,"index":5255},{"krate":0,"index":5257},{"krate":0,"index":5259}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561009,"byte_end":561073,"line_start":138,"line_end":138,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562253,"byte_end":562267,"line_start":179,"line_end":179,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"pub fn magic_constant(Self) -> &'static [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562167,"byte_end":562241,"line_start":178,"line_end":178,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562846,"byte_end":562861,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"pub fn sample_encoding(Self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562774,"byte_end":562834,"line_start":191,"line_end":191,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563224,"byte_end":563231,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmHeader>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563146,"byte_end":563212,"line_start":203,"line_end":203,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563746,"byte_end":563751,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"width","qualname":"<PnmHeader>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563688,"byte_end":563734,"line_start":213,"line_end":213,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":564169,"byte_end":564175,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"height","qualname":"<PnmHeader>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":564110,"byte_end":564157,"line_start":223,"line_end":223,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":564633,"byte_end":564647,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PnmHeader>::maximal_sample","value":"pub fn maximal_sample(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":564542,"byte_end":564621,"line_start":233,"line_end":233,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565065,"byte_end":565074,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PnmHeader>::as_bitmap","value":"pub fn as_bitmap(&Self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565005,"byte_end":565053,"line_start":243,"line_end":243,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565305,"byte_end":565315,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PnmHeader>::as_graymap","value":"pub fn as_graymap(&Self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565244,"byte_end":565293,"line_start":251,"line_end":251,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565549,"byte_end":565558,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PnmHeader>::as_pixmap","value":"pub fn as_pixmap(&Self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565489,"byte_end":565537,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565791,"byte_end":565803,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PnmHeader>::as_arbitrary","value":"pub fn as_arbitrary(&Self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565728,"byte_end":565779,"line_start":267,"line_end":267,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":566043,"byte_end":566048,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"write","qualname":"<PnmHeader>::write","value":"pub fn write(&Self, &mut io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":565985,"byte_end":566031,"line_start":275,"line_end":275,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::codecs::tga","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2526},{"krate":0,"index":2557}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8133,"byte_end":8156,"line_start":238,"line_end":238,"column_start":5,"column_end":28}},{"value":"/ Decoding of TGA Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569214,"byte_end":569240,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569241,"byte_end":569244,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569245,"byte_end":569264,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/ <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\mod.rs","byte_start":569265,"byte_end":569317,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":570841,"byte_end":570851,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::codecs::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":570790,"byte_end":570829,"line_start":46,"line_end":46,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":571277,"byte_end":571280,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":571208,"byte_end":571265,"line_start":67,"line_end":67,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":583763,"byte_end":583772,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::codecs::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585111,"byte_end":585121,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TgaEncoder","qualname":"::codecs::tga::encoder::TgaEncoder","value":"TgaEncoder {  }","parent":null,"children":[{"krate":0,"index":2547}],"decl_id":null,"docs":" TGA encoder.\n","sig":null,"attributes":[{"value":"/ TGA encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585083,"byte_end":585099,"line_start":34,"line_end":34,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585258,"byte_end":585261,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaEncoder<W>>::new","value":"pub fn new(W) -> TgaEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585187,"byte_end":585246,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585591,"byte_end":585597,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"encode","qualname":"<TgaEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```buf``` that has dimensions ```width```\n and ```height``` and ```ColorType``` ```color_type```.","sig":null,"attributes":[{"value":"/ Encodes the image ```buf``` that has dimensions ```width```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585331,"byte_end":585394,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ and ```height``` and ```ColorType``` ```color_type```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585399,"byte_end":585457,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585462,"byte_end":585465,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The dimensions of the image must be between 0 and 65535 (inclusive) or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585470,"byte_end":585544,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ an error will be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585549,"byte_end":585579,"line_start":49,"line_end":49,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::codecs::tiff","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":7614},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2677}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8178,"byte_end":8202,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":596895,"byte_end":596935,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":596936,"byte_end":596939,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":596940,"byte_end":597017,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ lossless and lossy compression.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597018,"byte_end":597053,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597054,"byte_end":597057,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597058,"byte_end":597077,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597078,"byte_end":597169,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597671,"byte_end":597682,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::codecs::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597631,"byte_end":597659,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597904,"byte_end":597907,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"pub fn new(R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TiffDecoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597863,"byte_end":597892,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602330,"byte_end":602340,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::codecs::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602273,"byte_end":602318,"line_start":146,"line_end":146,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":604908,"byte_end":604919,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::codecs::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2670}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":604869,"byte_end":604896,"line_start":220,"line_end":220,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605645,"byte_end":605648,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"pub fn new(W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605579,"byte_end":605633,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605880,"byte_end":605886,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605712,"byte_end":605803,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605808,"byte_end":605811,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ 16-bit types assume the buffer is native endian.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605816,"byte_end":605868,"line_start":247,"line_end":247,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::codecs::webp","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2753},{"krate":0,"index":2759}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8225,"byte_end":8249,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ Decoding of WebP Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\mod.rs","byte_start":607475,"byte_end":607502,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609391,"byte_end":609402,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::codecs::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[{"value":"/ WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609254,"byte_end":609348,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ images will be grayscale).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609349,"byte_end":609379,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609614,"byte_end":609617,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebPDecoder from the Reader ```r```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609496,"byte_end":609549,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609554,"byte_end":609602,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612294,"byte_end":612304,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::codecs::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612237,"byte_end":612282,"line_start":148,"line_end":148,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::codecs::webp::vp8","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":7698},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":5329},{"krate":0,"index":5354},{"krate":0,"index":5353},{"krate":0,"index":5351},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5356},{"krate":0,"index":5378},{"krate":0,"index":5377},{"krate":0,"index":5375},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5380},{"krate":0,"index":5420},{"krate":0,"index":5419},{"krate":0,"index":5417},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":5422},{"krate":0,"index":5424},{"krate":0,"index":2840},{"krate":0,"index":5426},{"krate":0,"index":5449},{"krate":0,"index":5446},{"krate":0,"index":5445},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2853},{"krate":0,"index":5451},{"krate":0,"index":5464},{"krate":0,"index":5460},{"krate":0,"index":5459},{"krate":0,"index":5466},{"krate":0,"index":5481},{"krate":0,"index":5479},{"krate":0,"index":5477},{"krate":0,"index":5483},{"krate":0,"index":5496},{"krate":0,"index":5495},{"krate":0,"index":5493},{"krate":0,"index":2861},{"krate":0,"index":2884},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"/ An implementation of the VP8 Video Codec","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":615899,"byte_end":615943,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":615944,"byte_end":615947,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a partial implementation of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":615948,"byte_end":616004,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ VP8 video format as defined in RFC-6386.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616005,"byte_end":616049,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616050,"byte_end":616053,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616054,"byte_end":616104,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/ VP8 is the underpinning of the WebP image format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616105,"byte_end":616157,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616158,"byte_end":616161,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616162,"byte_end":616181,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616182,"byte_end":616275,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616276,"byte_end":616398,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"/ of the VP8 format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616399,"byte_end":616420,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":616421,"byte_end":616424,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646624,"byte_end":646629,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"Frame","qualname":"::codecs::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646527,"byte_end":646579,"line_start":837,"line_end":837,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5467},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646676,"byte_end":646681,"line_start":841,"line_end":841,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646636,"byte_end":646667,"line_start":840,"line_end":840,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5468},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646734,"byte_end":646740,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646693,"byte_end":646725,"line_start":843,"line_end":843,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646792,"byte_end":646796,"line_start":847,"line_end":847,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::codecs::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646752,"byte_end":646783,"line_start":846,"line_end":846,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5470},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646867,"byte_end":646875,"line_start":850,"line_end":850,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::codecs::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646812,"byte_end":646858,"line_start":849,"line_end":849,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646971,"byte_end":646982,"line_start":855,"line_end":855,"column_start":9,"column_end":20},"name":"for_display","qualname":"::codecs::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":646906,"byte_end":646962,"line_start":854,"line_end":854,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5473},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647113,"byte_end":647123,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::codecs::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":5466},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647014,"byte_end":647071,"line_start":858,"line_end":858,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647076,"byte_end":647104,"line_start":859,"line_end":859,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647499,"byte_end":647509,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::codecs::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647441,"byte_end":647456,"line_start":885,"line_end":885,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647457,"byte_end":647460,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":647461,"byte_end":647487,"line_start":887,"line_end":887,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":648173,"byte_end":648176,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"pub fn new(R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":648069,"byte_end":648094,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":648099,"byte_end":648161,"line_start":922,"line_end":922,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":668310,"byte_end":668322,"line_start":1543,"line_end":1543,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"pub fn decode_frame(&mut Self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":668239,"byte_end":668298,"line_start":1542,"line_end":1542,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8509,"byte_end":8512,"line_start":254,"line_end":254,"column_start":9,"column_end":12},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"decl_id":null,"docs":" Decoding and Encoding of BMP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8435,"byte_end":8458,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::bmp instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8459,"byte_end":8500,"line_start":253,"line_end":253,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8519,"byte_end":8558,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8730,"byte_end":8733,"line_start":261,"line_end":261,"column_start":9,"column_end":12},"name":"dds","qualname":"::dds","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2955}],"decl_id":null,"docs":" Decoding of DDS images\n","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8656,"byte_end":8679,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::dds instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8680,"byte_end":8721,"line_start":260,"line_end":260,"column_start":1,"column_end":42}},{"value":"/ Decoding of DDS images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8740,"byte_end":8766,"line_start":262,"line_end":262,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8884,"byte_end":8887,"line_start":267,"line_end":267,"column_start":9,"column_end":12},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" Decoding of DXT (S3TC) compression\n","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8813,"byte_end":8836,"line_start":265,"line_end":265,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs:: instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8837,"byte_end":8875,"line_start":266,"line_end":266,"column_start":1,"column_end":39}},{"value":"/ Decoding of DXT (S3TC) compression","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8894,"byte_end":8932,"line_start":268,"line_end":268,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9175,"byte_end":9183,"line_start":276,"line_end":276,"column_start":9,"column_end":17},"name":"farbfeld","qualname":"::farbfeld","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969}],"decl_id":null,"docs":" Decoding of farbfeld images\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9091,"byte_end":9119,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"deprecated = \"Use codecs::farbfeld instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9120,"byte_end":9166,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/ Decoding of farbfeld images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9190,"byte_end":9221,"line_start":277,"line_end":277,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9387,"byte_end":9390,"line_start":282,"line_end":282,"column_start":9,"column_end":12},"name":"gif","qualname":"::gif","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975}],"decl_id":null,"docs":" Decoding of GIF Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9313,"byte_end":9336,"line_start":280,"line_end":280,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::gif instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9337,"byte_end":9378,"line_start":281,"line_end":281,"column_start":1,"column_end":42}},{"value":"/ Decoding of GIF Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9397,"byte_end":9423,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9603,"byte_end":9606,"line_start":289,"line_end":289,"column_start":9,"column_end":12},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993}],"decl_id":null,"docs":" Decoding of Radiance HDR Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9529,"byte_end":9552,"line_start":287,"line_end":287,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::hdr instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9553,"byte_end":9594,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"/ Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9613,"byte_end":9648,"line_start":290,"line_end":290,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10029,"byte_end":10032,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"name":"ico","qualname":"::ico","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998}],"decl_id":null,"docs":" Decoding and Encoding of ICO files\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9955,"byte_end":9978,"line_start":298,"line_end":298,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::ico instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":9979,"byte_end":10020,"line_start":299,"line_end":299,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10039,"byte_end":10077,"line_start":301,"line_end":301,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10251,"byte_end":10255,"line_start":307,"line_end":307,"column_start":9,"column_end":13},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10175,"byte_end":10199,"line_start":305,"line_end":305,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::jpeg instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10200,"byte_end":10242,"line_start":306,"line_end":306,"column_start":1,"column_end":43}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10262,"byte_end":10302,"line_start":308,"line_end":308,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10525,"byte_end":10528,"line_start":316,"line_end":316,"column_start":9,"column_end":12},"name":"png","qualname":"::png","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10451,"byte_end":10474,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::png instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10475,"byte_end":10516,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10535,"byte_end":10574,"line_start":317,"line_end":317,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10833,"byte_end":10836,"line_start":326,"line_end":326,"column_start":9,"column_end":12},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030}],"decl_id":null,"docs":" Decoding and Encoding of netpbm image formats (pbm, pgm, ppm and pam)\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10759,"byte_end":10782,"line_start":324,"line_end":324,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::pnm instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10783,"byte_end":10824,"line_start":325,"line_end":325,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of netpbm image formats (pbm, pgm, ppm and pam)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":10843,"byte_end":10916,"line_start":327,"line_end":327,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11252,"byte_end":11255,"line_start":336,"line_end":336,"column_start":9,"column_end":12},"name":"tga","qualname":"::tga","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034}],"decl_id":null,"docs":" Decoding and Encoding of TGA Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11178,"byte_end":11201,"line_start":334,"line_end":334,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::tga instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11202,"byte_end":11243,"line_start":335,"line_end":335,"column_start":1,"column_end":42}},{"value":"/ Decoding and Encoding of TGA Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11262,"byte_end":11301,"line_start":337,"line_end":337,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11463,"byte_end":11467,"line_start":343,"line_end":343,"column_start":9,"column_end":13},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11387,"byte_end":11411,"line_start":341,"line_end":341,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::tiff instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11412,"byte_end":11454,"line_start":342,"line_end":342,"column_start":1,"column_end":43}},{"value":"/ Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11474,"byte_end":11514,"line_start":344,"line_end":344,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11691,"byte_end":11695,"line_start":350,"line_end":350,"column_start":9,"column_end":13},"name":"webp","qualname":"::webp","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11615,"byte_end":11639,"line_start":348,"line_end":348,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::webp instead\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11640,"byte_end":11682,"line_start":349,"line_end":349,"column_start":1,"column_end":43}},{"value":"/ Decoding of WebP Images","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":11702,"byte_end":11729,"line_start":351,"line_end":351,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693315,"byte_end":693321,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":3052}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693230,"byte_end":693303,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693501,"byte_end":693504,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693421,"byte_end":693489,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693896,"byte_end":693910,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693615,"byte_end":693709,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693714,"byte_end":693726,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693731,"byte_end":693793,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693798,"byte_end":693801,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693806,"byte_end":693884,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694199,"byte_end":694204,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694142,"byte_end":694170,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694486,"byte_end":694491,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5506}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694363,"byte_end":694417,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694593,"byte_end":694596,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694537,"byte_end":694581,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694824,"byte_end":694834,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694787,"byte_end":694812,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695046,"byte_end":695051,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695011,"byte_end":695034,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695140,"byte_end":695146,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695100,"byte_end":695128,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695242,"byte_end":695253,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695202,"byte_end":695230,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695342,"byte_end":695346,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695306,"byte_end":695330,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695428,"byte_end":695431,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695392,"byte_end":695416,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695696,"byte_end":695715,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695491,"byte_end":695539,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695544,"byte_end":695547,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695552,"byte_end":695566,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695571,"byte_end":695574,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695579,"byte_end":695586,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695591,"byte_end":695612,"line_start":108,"line_end":108,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695617,"byte_end":695672,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695677,"byte_end":695684,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696358,"byte_end":696382,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695835,"byte_end":695917,"line_start":115,"line_end":115,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695922,"byte_end":695925,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695930,"byte_end":696024,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696029,"byte_end":696107,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696112,"byte_end":696115,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696120,"byte_end":696134,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696139,"byte_end":696142,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696147,"byte_end":696154,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696159,"byte_end":696187,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696192,"byte_end":696213,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696218,"byte_end":696221,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696226,"byte_end":696271,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696276,"byte_end":696334,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":696339,"byte_end":696346,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":697558,"byte_end":697572,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":697332,"byte_end":697395,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":697400,"byte_end":697403,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":697408,"byte_end":697503,"line_start":156,"line_end":156,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":697508,"byte_end":697546,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":704852,"byte_end":704858,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3125}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":704812,"byte_end":704840,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706019,"byte_end":706028,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":3150}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705971,"byte_end":706007,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707284,"byte_end":707288,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":3172}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707078,"byte_end":707111,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707112,"byte_end":707115,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707116,"byte_end":707202,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707203,"byte_end":707206,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707207,"byte_end":707272,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709838,"byte_end":709845,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":3199}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709612,"byte_end":709653,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709654,"byte_end":709657,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709658,"byte_end":709748,"line_start":220,"line_end":220,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709749,"byte_end":709752,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709753,"byte_end":709826,"line_start":222,"line_end":222,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712161,"byte_end":712176,"line_start":303,"line_end":303,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712112,"byte_end":712149,"line_start":302,"line_end":302,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713483,"byte_end":713496,"line_start":365,"line_end":365,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713436,"byte_end":713471,"line_start":364,"line_end":364,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714871,"byte_end":714889,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714822,"byte_end":714859,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716033,"byte_end":716049,"line_start":484,"line_end":484,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715986,"byte_end":716021,"line_start":483,"line_end":483,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719599,"byte_end":719610,"line_start":609,"line_end":609,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5531}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717221,"byte_end":717245,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717246,"byte_end":717249,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717250,"byte_end":717344,"line_start":542,"line_end":542,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717345,"byte_end":717434,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717435,"byte_end":717530,"line_start":544,"line_end":544,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717531,"byte_end":717626,"line_start":545,"line_end":545,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717627,"byte_end":717665,"line_start":546,"line_end":546,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717666,"byte_end":717669,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717670,"byte_end":717769,"line_start":548,"line_end":548,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717770,"byte_end":717805,"line_start":549,"line_end":549,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717806,"byte_end":717809,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717810,"byte_end":717855,"line_start":551,"line_end":551,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717856,"byte_end":717909,"line_start":552,"line_end":552,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717910,"byte_end":717946,"line_start":553,"line_end":553,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717947,"byte_end":717985,"line_start":554,"line_end":554,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717986,"byte_end":717989,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":717990,"byte_end":718066,"line_start":556,"line_end":556,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718067,"byte_end":718070,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718071,"byte_end":718158,"line_start":558,"line_end":558,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718159,"byte_end":718257,"line_start":559,"line_end":559,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718258,"byte_end":718333,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718334,"byte_end":718337,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718338,"byte_end":718382,"line_start":562,"line_end":562,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718383,"byte_end":718431,"line_start":563,"line_end":563,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718432,"byte_end":718488,"line_start":564,"line_end":564,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718489,"byte_end":718492,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718493,"byte_end":718508,"line_start":566,"line_end":566,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718509,"byte_end":718512,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718513,"byte_end":718564,"line_start":568,"line_end":568,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718565,"byte_end":718568,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718569,"byte_end":718576,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718577,"byte_end":718608,"line_start":571,"line_end":571,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718609,"byte_end":718612,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718613,"byte_end":718653,"line_start":573,"line_end":573,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718654,"byte_end":718657,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718658,"byte_end":718680,"line_start":575,"line_end":575,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718681,"byte_end":718705,"line_start":576,"line_end":576,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718706,"byte_end":718756,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718757,"byte_end":718807,"line_start":578,"line_end":578,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718808,"byte_end":718817,"line_start":579,"line_end":579,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718818,"byte_end":718823,"line_start":580,"line_end":580,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718824,"byte_end":718831,"line_start":581,"line_end":581,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718832,"byte_end":718835,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718836,"byte_end":718895,"line_start":583,"line_end":583,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718896,"byte_end":718899,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718900,"byte_end":718913,"line_start":585,"line_end":585,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718914,"byte_end":718981,"line_start":586,"line_end":586,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718982,"byte_end":718985,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":718986,"byte_end":719048,"line_start":588,"line_end":588,"column_start":1,"column_end":63}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719049,"byte_end":719106,"line_start":589,"line_end":589,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719107,"byte_end":719136,"line_start":590,"line_end":590,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719137,"byte_end":719170,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719171,"byte_end":719187,"line_start":592,"line_end":592,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719188,"byte_end":719227,"line_start":593,"line_end":593,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719228,"byte_end":719237,"line_start":594,"line_end":594,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719238,"byte_end":719245,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719246,"byte_end":719249,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719250,"byte_end":719308,"line_start":597,"line_end":597,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719309,"byte_end":719316,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719317,"byte_end":719320,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719321,"byte_end":719361,"line_start":600,"line_end":600,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719362,"byte_end":719365,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719366,"byte_end":719379,"line_start":602,"line_end":602,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719380,"byte_end":719416,"line_start":603,"line_end":603,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719417,"byte_end":719420,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719421,"byte_end":719482,"line_start":605,"line_end":605,"column_start":1,"column_end":62}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719483,"byte_end":719541,"line_start":606,"line_end":606,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719542,"byte_end":719549,"line_start":607,"line_end":607,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720368,"byte_end":720376,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720083,"byte_end":720130,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720135,"byte_end":720171,"line_start":627,"line_end":627,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720176,"byte_end":720179,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720184,"byte_end":720274,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720279,"byte_end":720356,"line_start":630,"line_end":630,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720782,"byte_end":720790,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720733,"byte_end":720770,"line_start":644,"line_end":644,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720890,"byte_end":720896,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720841,"byte_end":720878,"line_start":649,"line_end":649,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721001,"byte_end":721011,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":720950,"byte_end":720989,"line_start":654,"line_end":654,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721120,"byte_end":721125,"line_start":660,"line_end":660,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721080,"byte_end":721108,"line_start":659,"line_end":659,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721213,"byte_end":721219,"line_start":665,"line_end":665,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721172,"byte_end":721201,"line_start":664,"line_end":664,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721604,"byte_end":721610,"line_start":677,"line_end":677,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721471,"byte_end":721525,"line_start":675,"line_end":675,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721530,"byte_end":721592,"line_start":676,"line_end":676,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722110,"byte_end":722114,"line_start":688,"line_end":688,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721763,"byte_end":721815,"line_start":683,"line_end":683,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721820,"byte_end":721823,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721828,"byte_end":721919,"line_start":685,"line_end":685,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":721924,"byte_end":722017,"line_start":686,"line_end":686,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722022,"byte_end":722098,"line_start":687,"line_end":687,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722429,"byte_end":722445,"line_start":696,"line_end":696,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722208,"byte_end":722252,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722257,"byte_end":722310,"line_start":693,"line_end":693,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722315,"byte_end":722350,"line_start":694,"line_end":694,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722355,"byte_end":722417,"line_start":695,"line_end":695,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722777,"byte_end":722791,"line_start":708,"line_end":708,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722626,"byte_end":722668,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722673,"byte_end":722725,"line_start":706,"line_end":706,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722730,"byte_end":722765,"line_start":707,"line_end":707,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":723112,"byte_end":723121,"line_start":721,"line_end":721,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":722946,"byte_end":723000,"line_start":716,"line_end":716,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":723005,"byte_end":723008,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":723013,"byte_end":723025,"line_start":718,"line_end":718,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":723030,"byte_end":723033,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":723038,"byte_end":723100,"line_start":720,"line_end":720,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":724847,"byte_end":724860,"line_start":762,"line_end":762,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":724767,"byte_end":724835,"line_start":761,"line_end":761,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725474,"byte_end":725491,"line_start":773,"line_end":773,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725063,"byte_end":725137,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725142,"byte_end":725145,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725150,"byte_end":725238,"line_start":769,"line_end":769,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725243,"byte_end":725336,"line_start":770,"line_end":770,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725341,"byte_end":725435,"line_start":771,"line_end":771,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725440,"byte_end":725462,"line_start":772,"line_end":772,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725974,"byte_end":725989,"line_start":788,"line_end":788,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725832,"byte_end":725875,"line_start":785,"line_end":785,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725880,"byte_end":725883,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":725888,"byte_end":725962,"line_start":787,"line_end":787,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726422,"byte_end":726441,"line_start":802,"line_end":802,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726272,"byte_end":726323,"line_start":799,"line_end":799,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726328,"byte_end":726331,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726336,"byte_end":726410,"line_start":801,"line_end":801,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727188,"byte_end":727198,"line_start":827,"line_end":827,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727114,"byte_end":727176,"line_start":826,"line_end":826,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727724,"byte_end":727732,"line_start":838,"line_end":838,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727369,"byte_end":727429,"line_start":833,"line_end":833,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727434,"byte_end":727437,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727442,"byte_end":727533,"line_start":835,"line_end":835,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727538,"byte_end":727631,"line_start":836,"line_end":836,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727636,"byte_end":727712,"line_start":837,"line_end":837,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728002,"byte_end":728022,"line_start":845,"line_end":845,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727840,"byte_end":727884,"line_start":842,"line_end":842,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727889,"byte_end":727942,"line_start":843,"line_end":843,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":727947,"byte_end":727990,"line_start":844,"line_end":844,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728396,"byte_end":728414,"line_start":858,"line_end":858,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728237,"byte_end":728279,"line_start":855,"line_end":855,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728284,"byte_end":728336,"line_start":856,"line_end":856,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728341,"byte_end":728384,"line_start":857,"line_end":857,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728777,"byte_end":728790,"line_start":872,"line_end":872,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728603,"byte_end":728665,"line_start":867,"line_end":867,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728670,"byte_end":728673,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728678,"byte_end":728690,"line_start":869,"line_end":869,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728695,"byte_end":728698,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":728703,"byte_end":728765,"line_start":871,"line_end":871,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729239,"byte_end":729248,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729090,"byte_end":729127,"line_start":879,"line_end":879,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729132,"byte_end":729135,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729140,"byte_end":729152,"line_start":881,"line_end":881,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729157,"byte_end":729160,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729165,"byte_end":729227,"line_start":883,"line_end":883,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729693,"byte_end":729697,"line_start":899,"line_end":899,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729502,"byte_end":729555,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729560,"byte_end":729563,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729568,"byte_end":729624,"line_start":897,"line_end":897,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729629,"byte_end":729681,"line_start":898,"line_end":898,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730372,"byte_end":730388,"line_start":925,"line_end":925,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730165,"byte_end":730220,"line_start":920,"line_end":920,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730225,"byte_end":730250,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730255,"byte_end":730258,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730263,"byte_end":730335,"line_start":923,"line_end":923,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730340,"byte_end":730360,"line_start":924,"line_end":924,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736943,"byte_end":736946,"line_start":1138,"line_end":1138,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736753,"byte_end":736814,"line_start":1133,"line_end":1133,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736819,"byte_end":736822,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736827,"byte_end":736839,"line_start":1135,"line_end":1135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736844,"byte_end":736847,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736852,"byte_end":736931,"line_start":1137,"line_end":1137,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737484,"byte_end":737494,"line_start":1154,"line_end":1154,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737304,"byte_end":737355,"line_start":1149,"line_end":1149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737360,"byte_end":737363,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737368,"byte_end":737380,"line_start":1151,"line_end":1151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737385,"byte_end":737388,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737393,"byte_end":737472,"line_start":1153,"line_end":1153,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738009,"byte_end":738016,"line_start":1169,"line_end":1169,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737715,"byte_end":737797,"line_start":1162,"line_end":1162,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737802,"byte_end":737805,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737810,"byte_end":737880,"line_start":1164,"line_end":1164,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737885,"byte_end":737888,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737893,"byte_end":737905,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737910,"byte_end":737913,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":737918,"byte_end":737997,"line_start":1168,"line_end":1168,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738427,"byte_end":738435,"line_start":1182,"line_end":1182,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738307,"byte_end":738361,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738366,"byte_end":738415,"line_start":1181,"line_end":1181,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738722,"byte_end":738730,"line_start":1192,"line_end":1192,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738622,"byte_end":738683,"line_start":1190,"line_end":1190,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738688,"byte_end":738710,"line_start":1191,"line_end":1191,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738858,"byte_end":738871,"line_start":1198,"line_end":1198,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":3404}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738792,"byte_end":738847,"line_start":1197,"line_end":1197,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739058,"byte_end":739065,"line_start":1203,"line_end":1203,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738881,"byte_end":738922,"line_start":1199,"line_end":1199,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738927,"byte_end":738930,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":738935,"byte_end":739021,"line_start":1201,"line_end":1201,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739026,"byte_end":739050,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739333,"byte_end":739347,"line_start":1211,"line_end":1211,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739143,"byte_end":739203,"line_start":1208,"line_end":1208,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739208,"byte_end":739276,"line_start":1209,"line_end":1209,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739281,"byte_end":739321,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741482,"byte_end":741490,"line_start":1276,"line_end":1276,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741443,"byte_end":741472,"line_start":1275,"line_end":1275,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741579,"byte_end":741588,"line_start":1278,"line_end":1278,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741524,"byte_end":741569,"line_start":1277,"line_end":1277,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741668,"byte_end":741677,"line_start":1280,"line_end":1280,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741623,"byte_end":741658,"line_start":1279,"line_end":1279,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741773,"byte_end":741787,"line_start":1282,"line_end":1282,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":741712,"byte_end":741763,"line_start":1281,"line_end":1281,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5557},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750400,"byte_end":750402,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750367,"byte_end":750395,"line_start":10,"line_end":10,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5559},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750463,"byte_end":750466,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750408,"byte_end":750458,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5561},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750521,"byte_end":750525,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750472,"byte_end":750516,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5563},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750580,"byte_end":750585,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750531,"byte_end":750575,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5565},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750626,"byte_end":750629,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750592,"byte_end":750621,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5567},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750691,"byte_end":750695,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750635,"byte_end":750686,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750729,"byte_end":750734,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750701,"byte_end":750724,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5571},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750769,"byte_end":750775,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750740,"byte_end":750764,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5573},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750831,"byte_end":750835,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750782,"byte_end":750826,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5575},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750890,"byte_end":750895,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750841,"byte_end":750885,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750921,"byte_end":750936,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750351,"byte_end":750360,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel is 16-bit RGB\n    Rgb16,\n\n    /// Pixel is 16-bit RGBA\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5559},{"krate":0,"index":5561},{"krate":0,"index":5563},{"krate":0,"index":5565},{"krate":0,"index":5567},{"krate":0,"index":5569},{"krate":0,"index":5571},{"krate":0,"index":5573},{"krate":0,"index":5575},{"krate":0,"index":5577}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750230,"byte_end":750290,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":751084,"byte_end":751099,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750997,"byte_end":751072,"line_start":38,"line_end":38,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":751562,"byte_end":751571,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":751509,"byte_end":751550,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":751910,"byte_end":751919,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":751831,"byte_end":751898,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752313,"byte_end":752327,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752179,"byte_end":752275,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752280,"byte_end":752301,"line_start":72,"line_end":72,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752490,"byte_end":752503,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752414,"byte_end":752478,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753165,"byte_end":753167,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753132,"byte_end":753160,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753228,"byte_end":753231,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753173,"byte_end":753223,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753286,"byte_end":753290,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753237,"byte_end":753281,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5602},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753345,"byte_end":753350,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753296,"byte_end":753340,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753389,"byte_end":753391,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753356,"byte_end":753384,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753452,"byte_end":753455,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753397,"byte_end":753447,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5608},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753510,"byte_end":753514,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753461,"byte_end":753505,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5610},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753569,"byte_end":753574,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753520,"byte_end":753564,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5612},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753613,"byte_end":753615,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753580,"byte_end":753608,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5614},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753676,"byte_end":753679,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753621,"byte_end":753671,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753734,"byte_end":753738,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753685,"byte_end":753729,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753793,"byte_end":753798,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753744,"byte_end":753788,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5620},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753837,"byte_end":753839,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753804,"byte_end":753832,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753900,"byte_end":753903,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753845,"byte_end":753895,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753958,"byte_end":753962,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753909,"byte_end":753953,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754017,"byte_end":754022,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753968,"byte_end":754012,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5628},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754062,"byte_end":754065,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754028,"byte_end":754057,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5630},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754127,"byte_end":754131,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754071,"byte_end":754122,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5632},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754187,"byte_end":754192,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754137,"byte_end":754182,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754248,"byte_end":754254,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754198,"byte_end":754243,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5636},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754309,"byte_end":754313,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754260,"byte_end":754304,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754368,"byte_end":754373,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754319,"byte_end":754363,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5640},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754602,"byte_end":754609,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754380,"byte_end":754474,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754479,"byte_end":754571,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754576,"byte_end":754597,"line_start":141,"line_end":141,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5643},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754639,"byte_end":754654,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5595},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":753108,"byte_end":753125,"line_start":93,"line_end":93,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n\n    /// Pixel is 1-bit luminance\n    L1,\n\n    /// Pixel is 1-bit luminance with an alpha channel\n    La1,\n\n    /// Pixel contains 1-bit R, G and B channels\n    Rgb1,\n\n    /// Pixel is 1-bit RGB with an alpha channel\n    Rgba1,\n\n    /// Pixel is 2-bit luminance\n    L2,\n\n    /// Pixel is 2-bit luminance with an alpha channel\n    La2,\n\n    /// Pixel contains 2-bit R, G and B channels\n    Rgb2,\n\n    /// Pixel is 2-bit RGB with an alpha channel\n    Rgba2,\n\n    /// Pixel is 4-bit luminance\n    L4,\n\n    /// Pixel is 4-bit luminance with an alpha channel\n    La4,\n\n    /// Pixel contains 4-bit R, G and B channels\n    Rgb4,\n\n    /// Pixel is 4-bit RGB with an alpha channel\n    Rgba4,\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel contains 16-bit R, G and B channels\n    Rgb16,\n\n    /// Pixel is 16-bit RGB with an alpha channel\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    /// Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n    /// which are associated with an external palette. In that case, the pixel value is an index\n    /// into the palette.\n    Unknown(u8),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5596},{"krate":0,"index":5598},{"krate":0,"index":5600},{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5632},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5640},{"krate":0,"index":5643}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752601,"byte_end":752664,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752665,"byte_end":752668,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752669,"byte_end":752766,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752767,"byte_end":752864,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752865,"byte_end":752894,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752895,"byte_end":752898,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752899,"byte_end":752991,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":752992,"byte_end":753047,"line_start":91,"line_end":91,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754937,"byte_end":754950,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754723,"byte_end":754778,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754783,"byte_end":754786,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754791,"byte_end":754885,"line_start":151,"line_end":151,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754890,"byte_end":754925,"line_start":152,"line_end":152,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761318,"byte_end":761321,"line_start":373,"line_end":373,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761398,"byte_end":761401,"line_start":374,"line_end":374,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761477,"byte_end":761481,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6048},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761558,"byte_end":761562,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761658,"byte_end":761662,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6106},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761757,"byte_end":761762,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757064,"byte_end":757074,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":757075,"byte_end":757097,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761929,"byte_end":761938,"line_start":382,"line_end":382,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":3451}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761857,"byte_end":761918,"line_start":381,"line_end":381,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":762028,"byte_end":762038,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":761952,"byte_end":762020,"line_start":383,"line_end":383,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6187},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795752,"byte_end":795762,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795705,"byte_end":795747,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6190},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795838,"byte_end":795849,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795780,"byte_end":795833,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6193},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795918,"byte_end":795927,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795872,"byte_end":795913,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796001,"byte_end":796011,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795944,"byte_end":795996,"line_start":53,"line_end":53,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6199},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796075,"byte_end":796084,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796029,"byte_end":796070,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6202},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796158,"byte_end":796168,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr with alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796101,"byte_end":796153,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6205},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796234,"byte_end":796245,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796186,"byte_end":796229,"line_start":62,"line_end":62,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796324,"byte_end":796336,"line_start":66,"line_end":66,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796265,"byte_end":796319,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6211},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796408,"byte_end":796418,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796361,"byte_end":796403,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6214},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796495,"byte_end":796506,"line_start":72,"line_end":72,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":6186},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":796437,"byte_end":796490,"line_start":71,"line_end":71,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":6186},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795686,"byte_end":795698,"line_start":43,"line_end":43,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n\n    /// Each pixel in this image is 8-bit Luma\n    ImageLuma8(GrayImage),\n\n    /// Each pixel in this image is 8-bit Luma with alpha\n    ImageLumaA8(GrayAlphaImage),\n\n    /// Each pixel in this image is 8-bit Rgb\n    ImageRgb8(RgbImage),\n\n    /// Each pixel in this image is 8-bit Rgb with alpha\n    ImageRgba8(RgbaImage),\n\n    /// Each pixel in this image is 8-bit Bgr\n    ImageBgr8(BgrImage),\n\n    /// Each pixel in this image is 8-bit Bgr with alpha\n    ImageBgra8(BgraImage),\n\n    /// Each pixel in this image is 16-bit Luma\n    ImageLuma16(Gray16Image),\n\n    /// Each pixel in this image is 16-bit Luma with alpha\n    ImageLumaA16(GrayAlpha16Image),\n\n    /// Each pixel in this image is 16-bit Rgb\n    ImageRgb16(Rgb16Image),\n\n    /// Each pixel in this image is 16-bit Rgb with alpha\n    ImageRgba16(Rgba16Image),\n}","parent":null,"children":[{"krate":0,"index":6187},{"krate":0,"index":6190},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6208},{"krate":0,"index":6211},{"krate":0,"index":6214}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":795640,"byte_end":795659,"line_start":41,"line_end":41,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800721,"byte_end":800730,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800647,"byte_end":800709,"line_start":138,"line_end":138,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800933,"byte_end":800944,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800833,"byte_end":800887,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800892,"byte_end":800921,"line_start":144,"line_end":144,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801121,"byte_end":801129,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801048,"byte_end":801109,"line_start":149,"line_end":149,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801305,"byte_end":801314,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801231,"byte_end":801293,"line_start":154,"line_end":154,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801491,"byte_end":801500,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"pub fn new_bgra8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGRA pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801417,"byte_end":801479,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801676,"byte_end":801684,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"pub fn new_bgr8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGR pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801603,"byte_end":801664,"line_start":164,"line_end":164,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801860,"byte_end":801870,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801786,"byte_end":801848,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802074,"byte_end":802086,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":801974,"byte_end":802028,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802033,"byte_end":802062,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802264,"byte_end":802273,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802191,"byte_end":802252,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802450,"byte_end":802460,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802376,"byte_end":802438,"line_start":185,"line_end":185,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802626,"byte_end":802638,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\n                    impl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802564,"byte_end":802614,"line_start":190,"line_end":190,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802860,"byte_end":802866,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802755,"byte_end":802804,"line_start":197,"line_end":197,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_rgb8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802809,"byte_end":802848,"line_start":198,"line_end":198,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803034,"byte_end":803041,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"pub fn to_rgb8(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":802973,"byte_end":803022,"line_start":205,"line_end":205,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803209,"byte_end":803217,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"pub fn to_rgb16(&Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803148,"byte_end":803197,"line_start":212,"line_end":212,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803433,"byte_end":803440,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803326,"byte_end":803376,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_rgba8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803381,"byte_end":803421,"line_start":220,"line_end":220,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803610,"byte_end":803618,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"pub fn to_rgba8(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803548,"byte_end":803598,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803788,"byte_end":803797,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"pub fn to_rgba16(&Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803726,"byte_end":803776,"line_start":234,"line_end":234,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804012,"byte_end":804018,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"pub fn to_bgr(&Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803907,"byte_end":803956,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_bgr8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":803961,"byte_end":804000,"line_start":242,"line_end":242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804186,"byte_end":804193,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"to_bgr8","qualname":"<DynamicImage>::to_bgr8","value":"pub fn to_bgr8(&Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804125,"byte_end":804174,"line_start":249,"line_end":249,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804407,"byte_end":804414,"line_start":258,"line_end":258,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"pub fn to_bgra(&Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804300,"byte_end":804350,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_bgra8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804355,"byte_end":804395,"line_start":257,"line_end":257,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804584,"byte_end":804592,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"to_bgra8","qualname":"<DynamicImage>::to_bgra8","value":"pub fn to_bgra8(&Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804522,"byte_end":804572,"line_start":264,"line_end":264,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804806,"byte_end":804813,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804700,"byte_end":804749,"line_start":271,"line_end":271,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_luma8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804754,"byte_end":804794,"line_start":272,"line_end":272,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804982,"byte_end":804990,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"pub fn to_luma8(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":804921,"byte_end":804970,"line_start":279,"line_end":279,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805159,"byte_end":805168,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"pub fn to_luma16(&Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805098,"byte_end":805147,"line_start":286,"line_end":286,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805391,"byte_end":805404,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805278,"byte_end":805328,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_luma_alpha8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805333,"byte_end":805379,"line_start":294,"line_end":294,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805579,"byte_end":805593,"line_start":302,"line_end":302,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"pub fn to_luma_alpha8(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805517,"byte_end":805567,"line_start":301,"line_end":301,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805768,"byte_end":805783,"line_start":309,"line_end":309,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"pub fn to_luma_alpha16(&Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805706,"byte_end":805756,"line_start":308,"line_end":308,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806123,"byte_end":806131,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"pub fn into_rgb(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805898,"byte_end":805944,"line_start":315,"line_end":315,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805949,"byte_end":805952,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":805957,"byte_end":806027,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806032,"byte_end":806065,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_rgb8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806070,"byte_end":806111,"line_start":319,"line_end":319,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806448,"byte_end":806457,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"pub fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806269,"byte_end":806315,"line_start":327,"line_end":327,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806320,"byte_end":806323,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806328,"byte_end":806398,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806403,"byte_end":806436,"line_start":330,"line_end":330,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806774,"byte_end":806784,"line_start":342,"line_end":342,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"pub fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806595,"byte_end":806641,"line_start":338,"line_end":338,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806646,"byte_end":806649,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806654,"byte_end":806724,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806729,"byte_end":806762,"line_start":341,"line_end":341,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807153,"byte_end":807162,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"pub fn into_rgba(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806926,"byte_end":806973,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806978,"byte_end":806981,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":806986,"byte_end":807056,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807061,"byte_end":807094,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_rgba8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807099,"byte_end":807141,"line_start":353,"line_end":353,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807483,"byte_end":807493,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"pub fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807303,"byte_end":807350,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807355,"byte_end":807358,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807363,"byte_end":807433,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807438,"byte_end":807471,"line_start":364,"line_end":364,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807814,"byte_end":807825,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"pub fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807634,"byte_end":807681,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807686,"byte_end":807689,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807694,"byte_end":807764,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807769,"byte_end":807802,"line_start":375,"line_end":375,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808196,"byte_end":808204,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"pub fn into_bgr(Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":807970,"byte_end":808016,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808021,"byte_end":808024,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808029,"byte_end":808099,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808104,"byte_end":808137,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_bgra8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808142,"byte_end":808184,"line_start":387,"line_end":387,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808521,"byte_end":808530,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"into_bgr8","qualname":"<DynamicImage>::into_bgr8","value":"pub fn into_bgr8(Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808342,"byte_end":808388,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808393,"byte_end":808396,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808401,"byte_end":808471,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808476,"byte_end":808509,"line_start":398,"line_end":398,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808996,"byte_end":809005,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"pub fn into_bgra(Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808769,"byte_end":808816,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808821,"byte_end":808824,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808829,"byte_end":808899,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808904,"byte_end":808937,"line_start":411,"line_end":411,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_bgra8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":808942,"byte_end":808984,"line_start":412,"line_end":412,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809326,"byte_end":809336,"line_start":424,"line_end":424,"column_start":12,"column_end":22},"name":"into_bgra8","qualname":"<DynamicImage>::into_bgra8","value":"pub fn into_bgra8(Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809146,"byte_end":809193,"line_start":420,"line_end":420,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809198,"byte_end":809201,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809206,"byte_end":809276,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809281,"byte_end":809314,"line_start":423,"line_end":423,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809807,"byte_end":809816,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"pub fn into_luma(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809580,"byte_end":809627,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809632,"byte_end":809635,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809640,"byte_end":809710,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809715,"byte_end":809748,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_luma8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809753,"byte_end":809795,"line_start":437,"line_end":437,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810137,"byte_end":810147,"line_start":449,"line_end":449,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"pub fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":809957,"byte_end":810004,"line_start":445,"line_end":445,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810009,"byte_end":810012,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810017,"byte_end":810087,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810092,"byte_end":810125,"line_start":448,"line_end":448,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810468,"byte_end":810479,"line_start":460,"line_end":460,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"pub fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810288,"byte_end":810335,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810340,"byte_end":810343,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810348,"byte_end":810418,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810423,"byte_end":810456,"line_start":459,"line_end":459,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810858,"byte_end":810873,"line_start":472,"line_end":472,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"pub fn into_luma_alpha(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810624,"byte_end":810672,"line_start":467,"line_end":467,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810677,"byte_end":810680,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810685,"byte_end":810755,"line_start":469,"line_end":469,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810760,"byte_end":810793,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_luma_alpha8`\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":810798,"byte_end":810846,"line_start":471,"line_end":471,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811207,"byte_end":811223,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"pub fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811026,"byte_end":811074,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811079,"byte_end":811082,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811087,"byte_end":811157,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811162,"byte_end":811195,"line_start":482,"line_end":482,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811557,"byte_end":811574,"line_start":494,"line_end":494,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"pub fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811376,"byte_end":811424,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811429,"byte_end":811432,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811437,"byte_end":811507,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811512,"byte_end":811545,"line_start":493,"line_end":493,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811961,"byte_end":811965,"line_start":505,"line_end":505,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811731,"byte_end":811802,"line_start":501,"line_end":501,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811807,"byte_end":811810,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811815,"byte_end":811866,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":811871,"byte_end":811949,"line_start":504,"line_end":504,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812222,"byte_end":812230,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812139,"byte_end":812210,"line_start":509,"line_end":509,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812455,"byte_end":812462,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812400,"byte_end":812443,"line_start":514,"line_end":514,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812677,"byte_end":812688,"line_start":523,"line_end":523,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812614,"byte_end":812665,"line_start":522,"line_end":522,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812907,"byte_end":812914,"line_start":531,"line_end":531,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"pub fn as_bgr8(&Self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGR image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":812852,"byte_end":812895,"line_start":530,"line_end":530,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813129,"byte_end":813140,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"pub fn as_mut_bgr8(&mut Self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit BGR image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813066,"byte_end":813117,"line_start":538,"line_end":538,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813360,"byte_end":813368,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813304,"byte_end":813348,"line_start":546,"line_end":546,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813586,"byte_end":813598,"line_start":555,"line_end":555,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813522,"byte_end":813574,"line_start":554,"line_end":554,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813820,"byte_end":813828,"line_start":563,"line_end":563,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"pub fn as_bgra8(&Self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGRA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813764,"byte_end":813808,"line_start":562,"line_end":562,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814046,"byte_end":814058,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"pub fn as_mut_bgra8(&mut Self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":813982,"byte_end":814034,"line_start":570,"line_end":570,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814285,"byte_end":814293,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814224,"byte_end":814273,"line_start":578,"line_end":578,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814516,"byte_end":814528,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814447,"byte_end":814504,"line_start":586,"line_end":586,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814777,"byte_end":814791,"line_start":595,"line_end":595,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814694,"byte_end":814765,"line_start":594,"line_end":594,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815042,"byte_end":815060,"line_start":603,"line_end":603,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":814951,"byte_end":815030,"line_start":602,"line_end":602,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815288,"byte_end":815296,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815232,"byte_end":815276,"line_start":610,"line_end":610,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815515,"byte_end":815527,"line_start":619,"line_end":619,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815451,"byte_end":815503,"line_start":618,"line_end":618,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815751,"byte_end":815760,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815694,"byte_end":815739,"line_start":626,"line_end":626,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815982,"byte_end":815995,"line_start":635,"line_end":635,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":815917,"byte_end":815970,"line_start":634,"line_end":634,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816226,"byte_end":816235,"line_start":643,"line_end":643,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816164,"byte_end":816214,"line_start":642,"line_end":642,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816462,"byte_end":816475,"line_start":651,"line_end":651,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816392,"byte_end":816450,"line_start":650,"line_end":650,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816728,"byte_end":816743,"line_start":659,"line_end":659,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816644,"byte_end":816716,"line_start":658,"line_end":658,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816998,"byte_end":817017,"line_start":667,"line_end":667,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":816906,"byte_end":816986,"line_start":666,"line_end":666,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":817276,"byte_end":817294,"line_start":675,"line_end":675,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":817192,"byte_end":817264,"line_start":674,"line_end":674,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":817928,"byte_end":817947,"line_start":688,"line_end":688,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":817843,"byte_end":817916,"line_start":687,"line_end":687,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818427,"byte_end":818435,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818354,"byte_end":818415,"line_start":698,"line_end":698,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818670,"byte_end":818680,"line_start":706,"line_end":706,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818494,"byte_end":818563,"line_start":703,"line_end":703,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818568,"byte_end":818637,"line_start":704,"line_end":704,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818642,"byte_end":818658,"line_start":705,"line_end":705,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818812,"byte_end":818820,"line_start":711,"line_end":711,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818742,"byte_end":818800,"line_start":710,"line_end":710,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818928,"byte_end":818933,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":818881,"byte_end":818916,"line_start":715,"line_end":715,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":819737,"byte_end":819746,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":819680,"byte_end":819725,"line_start":731,"line_end":731,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":820852,"byte_end":820858,"line_start":749,"line_end":749,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":820766,"byte_end":820802,"line_start":747,"line_end":747,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":820807,"byte_end":820840,"line_start":748,"line_end":748,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821222,"byte_end":821228,"line_start":757,"line_end":757,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":820945,"byte_end":821004,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821009,"byte_end":821072,"line_start":754,"line_end":754,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821077,"byte_end":821139,"line_start":755,"line_end":755,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821144,"byte_end":821210,"line_start":756,"line_end":756,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821692,"byte_end":821704,"line_start":767,"line_end":767,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821490,"byte_end":821549,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821554,"byte_end":821610,"line_start":765,"line_end":765,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821615,"byte_end":821680,"line_start":766,"line_end":766,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822395,"byte_end":822404,"line_start":784,"line_end":784,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821920,"byte_end":821976,"line_start":776,"line_end":776,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":821981,"byte_end":822044,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822049,"byte_end":822111,"line_start":778,"line_end":778,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822116,"byte_end":822182,"line_start":779,"line_end":779,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822187,"byte_end":822190,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822195,"byte_end":822258,"line_start":781,"line_end":781,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822263,"byte_end":822313,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822318,"byte_end":822383,"line_start":783,"line_end":783,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823012,"byte_end":823027,"line_start":796,"line_end":796,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822630,"byte_end":822675,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822680,"byte_end":822736,"line_start":791,"line_end":791,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822741,"byte_end":822807,"line_start":792,"line_end":792,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822812,"byte_end":822875,"line_start":793,"line_end":793,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822880,"byte_end":822930,"line_start":794,"line_end":794,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":822935,"byte_end":823000,"line_start":795,"line_end":795,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823547,"byte_end":823561,"line_start":806,"line_end":806,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823169,"byte_end":823228,"line_start":800,"line_end":800,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823233,"byte_end":823296,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823301,"byte_end":823363,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823368,"byte_end":823430,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823435,"byte_end":823499,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":823504,"byte_end":823535,"line_start":805,"line_end":805,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824381,"byte_end":824385,"line_start":829,"line_end":829,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824269,"byte_end":824312,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824317,"byte_end":824369,"line_start":828,"line_end":828,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824763,"byte_end":824772,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824497,"byte_end":824542,"line_start":833,"line_end":833,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824547,"byte_end":824598,"line_start":834,"line_end":834,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824603,"byte_end":824659,"line_start":835,"line_end":835,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824664,"byte_end":824667,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824672,"byte_end":824751,"line_start":837,"line_end":837,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824981,"byte_end":824990,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":824916,"byte_end":824969,"line_start":842,"line_end":842,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825400,"byte_end":825415,"line_start":854,"line_end":854,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825197,"byte_end":825235,"line_start":851,"line_end":851,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825240,"byte_end":825299,"line_start":852,"line_end":852,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825304,"byte_end":825388,"line_start":853,"line_end":853,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825715,"byte_end":825723,"line_start":861,"line_end":861,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825523,"byte_end":825561,"line_start":858,"line_end":858,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825566,"byte_end":825622,"line_start":859,"line_end":859,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825627,"byte_end":825703,"line_start":860,"line_end":860,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826071,"byte_end":826080,"line_start":869,"line_end":869,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825839,"byte_end":825873,"line_start":865,"line_end":865,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825878,"byte_end":825929,"line_start":866,"line_end":866,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":825934,"byte_end":826003,"line_start":867,"line_end":867,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826008,"byte_end":826059,"line_start":868,"line_end":868,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826239,"byte_end":826244,"line_start":874,"line_end":874,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826197,"byte_end":826227,"line_start":873,"line_end":873,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826390,"byte_end":826395,"line_start":879,"line_end":879,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826346,"byte_end":826378,"line_start":878,"line_end":878,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826554,"byte_end":826562,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826499,"byte_end":826542,"line_start":883,"line_end":883,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826715,"byte_end":826724,"line_start":889,"line_end":889,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826659,"byte_end":826703,"line_start":888,"line_end":888,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826878,"byte_end":826887,"line_start":894,"line_end":894,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826822,"byte_end":826866,"line_start":893,"line_end":893,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":827042,"byte_end":827050,"line_start":899,"line_end":899,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":826985,"byte_end":827030,"line_start":898,"line_end":898,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831146,"byte_end":831150,"line_start":1008,"line_end":1008,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831012,"byte_end":831065,"line_start":1005,"line_end":1005,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831070,"byte_end":831073,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831078,"byte_end":831134,"line_start":1007,"line_end":1007,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831522,"byte_end":831538,"line_start":1022,"line_end":1022,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831315,"byte_end":831370,"line_start":1017,"line_end":1017,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831375,"byte_end":831400,"line_start":1018,"line_end":1018,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831405,"byte_end":831408,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831413,"byte_end":831485,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831490,"byte_end":831510,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3834},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839629,"byte_end":839633,"line_start":1231,"line_end":1231,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839327,"byte_end":839376,"line_start":1224,"line_end":1224,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839377,"byte_end":839445,"line_start":1225,"line_end":1225,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839446,"byte_end":839449,"line_start":1226,"line_end":1226,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839450,"byte_end":839546,"line_start":1227,"line_end":1227,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839547,"byte_end":839575,"line_start":1228,"line_end":1228,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839576,"byte_end":839579,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839580,"byte_end":839621,"line_start":1230,"line_end":1230,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840188,"byte_end":840204,"line_start":1246,"line_end":1246,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839823,"byte_end":839890,"line_start":1239,"line_end":1239,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839891,"byte_end":839971,"line_start":1240,"line_end":1240,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839972,"byte_end":839975,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":839976,"byte_end":840072,"line_start":1242,"line_end":1242,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840073,"byte_end":840134,"line_start":1243,"line_end":1243,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840135,"byte_end":840138,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840139,"byte_end":840180,"line_start":1245,"line_end":1245,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840779,"byte_end":840790,"line_start":1261,"line_end":1261,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840404,"byte_end":840466,"line_start":1254,"line_end":1254,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840467,"byte_end":840470,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840471,"byte_end":840557,"line_start":1256,"line_end":1256,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840558,"byte_end":840619,"line_start":1257,"line_end":1257,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840621,"byte_end":840712,"line_start":1259,"line_end":1259,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp and tiff files are supported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":840713,"byte_end":840771,"line_start":1260,"line_end":1260,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841444,"byte_end":841467,"line_start":1283,"line_end":1283,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\n                                  ImageFormat) -> ImageResult<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841096,"byte_end":841157,"line_start":1275,"line_end":1275,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841158,"byte_end":841186,"line_start":1276,"line_end":1276,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841187,"byte_end":841190,"line_start":1277,"line_end":1277,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841191,"byte_end":841253,"line_start":1278,"line_end":1278,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841254,"byte_end":841286,"line_start":1279,"line_end":1279,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841287,"byte_end":841347,"line_start":1280,"line_end":1280,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841348,"byte_end":841406,"line_start":1281,"line_end":1281,"column_start":1,"column_end":59}},{"value":"/ tiff files are supported.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841407,"byte_end":841436,"line_start":1282,"line_end":1282,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842030,"byte_end":842046,"line_start":1306,"line_end":1306,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841786,"byte_end":841826,"line_start":1298,"line_end":1298,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841827,"byte_end":841830,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841831,"byte_end":841882,"line_start":1300,"line_end":1300,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841883,"byte_end":841925,"line_start":1301,"line_end":1301,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841926,"byte_end":841929,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841930,"byte_end":841976,"line_start":1303,"line_end":1303,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841977,"byte_end":841980,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":841981,"byte_end":842022,"line_start":1305,"line_end":1305,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842528,"byte_end":842556,"line_start":1321,"line_end":1321,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842201,"byte_end":842241,"line_start":1311,"line_end":1311,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842242,"byte_end":842245,"line_start":1312,"line_end":1312,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842246,"byte_end":842343,"line_start":1313,"line_end":1313,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842344,"byte_end":842378,"line_start":1314,"line_end":1314,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842379,"byte_end":842382,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842383,"byte_end":842429,"line_start":1316,"line_end":1316,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842430,"byte_end":842433,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842434,"byte_end":842460,"line_start":1318,"line_end":1318,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842461,"byte_end":842502,"line_start":1319,"line_end":1319,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":842503,"byte_end":842520,"line_start":1320,"line_end":1320,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844384,"byte_end":844387,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844353,"byte_end":844379,"line_start":25,"line_end":25,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6222},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844426,"byte_end":844430,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844394,"byte_end":844421,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6224},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844468,"byte_end":844471,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844437,"byte_end":844463,"line_start":31,"line_end":31,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6226},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844510,"byte_end":844514,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844478,"byte_end":844505,"line_start":34,"line_end":34,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844560,"byte_end":844563,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844521,"byte_end":844555,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6230},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844602,"byte_end":844606,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844570,"byte_end":844597,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6232},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844644,"byte_end":844647,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844613,"byte_end":844639,"line_start":43,"line_end":43,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6234},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844685,"byte_end":844688,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844654,"byte_end":844680,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6236},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844726,"byte_end":844729,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844695,"byte_end":844721,"line_start":49,"line_end":49,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6238},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844767,"byte_end":844770,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844736,"byte_end":844762,"line_start":52,"line_end":52,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844817,"byte_end":844820,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844777,"byte_end":844812,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6242},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844863,"byte_end":844871,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844827,"byte_end":844858,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6244},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844911,"byte_end":844915,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844878,"byte_end":844906,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6246},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844941,"byte_end":844956,"line_start":65,"line_end":65,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844335,"byte_end":844346,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n\n    /// An Image in PNG Format\n    Png,\n\n    /// An Image in JPEG Format\n    Jpeg,\n\n    /// An Image in GIF Format\n    Gif,\n\n    /// An Image in WEBP Format\n    WebP,\n\n    /// An Image in general PNM Format\n    Pnm,\n\n    /// An Image in TIFF Format\n    Tiff,\n\n    /// An Image in TGA Format\n    Tga,\n\n    /// An Image in DDS Format\n    Dds,\n\n    /// An Image in BMP Format\n    Bmp,\n\n    /// An Image in ICO Format\n    Ico,\n\n    /// An Image in Radiance HDR Format\n    Hdr,\n\n    /// An Image in farbfeld Format\n    Farbfeld,\n\n    /// An Image in AVIF format.\n    Avif,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6222},{"krate":0,"index":6224},{"krate":0,"index":6226},{"krate":0,"index":6228},{"krate":0,"index":6230},{"krate":0,"index":6232},{"krate":0,"index":6234},{"krate":0,"index":6236},{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6242},{"krate":0,"index":6244},{"krate":0,"index":6246}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844172,"byte_end":844218,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":844219,"byte_end":844274,"line_start":22,"line_end":22,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845318,"byte_end":845332,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"pub fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845019,"byte_end":845084,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845089,"byte_end":845092,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845097,"byte_end":845110,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845115,"byte_end":845118,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845123,"byte_end":845130,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845135,"byte_end":845162,"line_start":74,"line_end":74,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845167,"byte_end":845170,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845175,"byte_end":845227,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845232,"byte_end":845280,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845285,"byte_end":845292,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845297,"byte_end":845306,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846626,"byte_end":846635,"line_start":118,"line_end":118,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846265,"byte_end":846332,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846337,"byte_end":846340,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846345,"byte_end":846358,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846363,"byte_end":846366,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846371,"byte_end":846378,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846383,"byte_end":846410,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846415,"byte_end":846418,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846423,"byte_end":846485,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846490,"byte_end":846531,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846536,"byte_end":846539,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846544,"byte_end":846588,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846593,"byte_end":846600,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":846605,"byte_end":846614,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847911,"byte_end":847925,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847321,"byte_end":847380,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847385,"byte_end":847388,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847393,"byte_end":847480,"line_start":138,"line_end":138,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847485,"byte_end":847579,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847584,"byte_end":847679,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847684,"byte_end":847695,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847700,"byte_end":847703,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847708,"byte_end":847802,"line_start":143,"line_end":143,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":847807,"byte_end":847899,"line_start":144,"line_end":144,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6265},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848975,"byte_end":848978,"line_start":171,"line_end":171,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848916,"byte_end":848939,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848944,"byte_end":848970,"line_start":170,"line_end":170,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849069,"byte_end":849073,"line_start":175,"line_end":175,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848985,"byte_end":849009,"line_start":173,"line_end":173,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849014,"byte_end":849064,"line_start":174,"line_end":174,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849155,"byte_end":849158,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849084,"byte_end":849107,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849112,"byte_end":849150,"line_start":178,"line_end":178,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6273},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849236,"byte_end":849239,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849177,"byte_end":849200,"line_start":181,"line_end":181,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849205,"byte_end":849231,"line_start":182,"line_end":182,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6275},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849305,"byte_end":849308,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849246,"byte_end":849269,"line_start":185,"line_end":185,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849274,"byte_end":849300,"line_start":186,"line_end":186,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849374,"byte_end":849377,"line_start":191,"line_end":191,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849315,"byte_end":849338,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849343,"byte_end":849369,"line_start":190,"line_end":190,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6279},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849453,"byte_end":849461,"line_start":195,"line_end":195,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849384,"byte_end":849412,"line_start":193,"line_end":193,"column_start":5,"column_end":33}},{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849417,"byte_end":849448,"line_start":194,"line_end":194,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6281},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849527,"byte_end":849530,"line_start":199,"line_end":199,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageOutputFormat::Tga","value":"ImageOutputFormat::Tga","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849468,"byte_end":849491,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849496,"byte_end":849522,"line_start":198,"line_end":198,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6283},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849854,"byte_end":849865,"line_start":208,"line_end":208,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849609,"byte_end":849681,"line_start":205,"line_end":205,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6286},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849899,"byte_end":849914,"line_start":211,"line_end":211,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6264},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848892,"byte_end":848909,"line_start":168,"line_end":168,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat {\n\n    #[cfg(feature = \"png\")]\n    /// An Image in PNG Format\n    Png,\n\n    #[cfg(feature = \"jpeg\")]\n    /// An Image in JPEG Format with specified quality\n    Jpeg(u8),\n\n    #[cfg(feature = \"pnm\")]\n    /// An Image in one of the PNM Formats\n    Pnm(PNMSubtype),\n\n    #[cfg(feature = \"gif\")]\n    /// An Image in GIF Format\n    Gif,\n\n    #[cfg(feature = \"ico\")]\n    /// An Image in ICO Format\n    Ico,\n\n    #[cfg(feature = \"bmp\")]\n    /// An Image in BMP Format\n    Bmp,\n\n    #[cfg(feature = \"farbfeld\")]\n    /// An Image in farbfeld Format\n    Farbfeld,\n\n    #[cfg(feature = \"tga\")]\n    /// An Image in TGA Format\n    Tga,\n\n    /// A value for signalling an error: An unsupported format was requested\n    Unsupported(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":6265},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6273},{"krate":0,"index":6275},{"krate":0,"index":6277},{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6283},{"krate":0,"index":6286}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":848784,"byte_end":848843,"line_start":166,"line_end":166,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859225,"byte_end":859233,"line_start":432,"line_end":432,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":6301},{"krate":0,"index":6302}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":858821,"byte_end":858871,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":858872,"byte_end":858875,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":858876,"byte_end":858973,"line_start":428,"line_end":428,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":858974,"byte_end":859068,"line_start":429,"line_end":429,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859069,"byte_end":859168,"line_start":430,"line_end":430,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859341,"byte_end":859348,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859293,"byte_end":859329,"line_start":438,"line_end":438,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859521,"byte_end":859526,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859396,"byte_end":859441,"line_start":443,"line_end":443,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859446,"byte_end":859449,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859454,"byte_end":859509,"line_start":445,"line_end":445,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859636,"byte_end":859645,"line_start":451,"line_end":451,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859572,"byte_end":859624,"line_start":450,"line_end":450,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859774,"byte_end":859786,"line_start":457,"line_end":457,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3919}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859722,"byte_end":859763,"line_start":456,"line_end":456,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859863,"byte_end":859869,"line_start":459,"line_end":459,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859804,"byte_end":859853,"line_start":458,"line_end":458,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859959,"byte_end":859969,"line_start":462,"line_end":462,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859887,"byte_end":859951,"line_start":461,"line_end":461,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860074,"byte_end":860084,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859997,"byte_end":860066,"line_start":464,"line_end":464,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860178,"byte_end":860197,"line_start":468,"line_end":468,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860111,"byte_end":860170,"line_start":467,"line_end":467,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860538,"byte_end":860549,"line_start":475,"line_end":475,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860272,"byte_end":860356,"line_start":472,"line_end":472,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860361,"byte_end":860457,"line_start":473,"line_end":473,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860462,"byte_end":860530,"line_start":474,"line_end":474,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860936,"byte_end":860947,"line_start":483,"line_end":483,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860591,"byte_end":860650,"line_start":477,"line_end":477,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860655,"byte_end":860658,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860663,"byte_end":860736,"line_start":479,"line_end":479,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860741,"byte_end":860817,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860822,"byte_end":860914,"line_start":481,"line_end":481,"column_start":5,"column_end":97}},{"value":"/ into.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":860919,"byte_end":860928,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861284,"byte_end":861298,"line_start":490,"line_end":490,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861126,"byte_end":861222,"line_start":488,"line_end":488,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861227,"byte_end":861276,"line_start":489,"line_end":489,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862187,"byte_end":862197,"line_start":514,"line_end":514,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861353,"byte_end":861392,"line_start":494,"line_end":494,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861397,"byte_end":861400,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861405,"byte_end":861493,"line_start":496,"line_end":496,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861498,"byte_end":861591,"line_start":497,"line_end":497,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861596,"byte_end":861694,"line_start":498,"line_end":498,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861699,"byte_end":861769,"line_start":499,"line_end":499,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861774,"byte_end":861777,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861782,"byte_end":861794,"line_start":501,"line_end":501,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861799,"byte_end":861802,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861807,"byte_end":861867,"line_start":503,"line_end":503,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861872,"byte_end":861875,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861880,"byte_end":861894,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861899,"byte_end":861902,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861907,"byte_end":861922,"line_start":507,"line_end":507,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861927,"byte_end":861966,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":861971,"byte_end":862035,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862040,"byte_end":862105,"line_start":510,"line_end":510,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862110,"byte_end":862153,"line_start":511,"line_end":511,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862158,"byte_end":862169,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862174,"byte_end":862179,"line_start":513,"line_end":513,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862425,"byte_end":862449,"line_start":520,"line_end":520,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862303,"byte_end":862399,"line_start":518,"line_end":518,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":862404,"byte_end":862417,"line_start":519,"line_end":519,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863472,"byte_end":863487,"line_start":554,"line_end":554,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":3923},{"krate":0,"index":3925}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863399,"byte_end":863461,"line_start":553,"line_end":553,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863642,"byte_end":863651,"line_start":556,"line_end":556,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863524,"byte_end":863634,"line_start":555,"line_end":555,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864593,"byte_end":864616,"line_start":579,"line_end":579,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n                               ()>(&mut Self, u32, u32, u32, u32, &mut [u8],\n                                   F) -> ImageResult<()>","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863877,"byte_end":863956,"line_start":567,"line_end":567,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863961,"byte_end":863964,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863969,"byte_end":864030,"line_start":569,"line_end":569,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864035,"byte_end":864109,"line_start":570,"line_end":570,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864114,"byte_end":864173,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864178,"byte_end":864181,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864186,"byte_end":864278,"line_start":573,"line_end":573,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864283,"byte_end":864342,"line_start":574,"line_end":574,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864347,"byte_end":864407,"line_start":575,"line_end":575,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864412,"byte_end":864415,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864420,"byte_end":864484,"line_start":577,"line_end":577,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864489,"byte_end":864585,"line_start":578,"line_end":578,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864847,"byte_end":864863,"line_start":591,"line_end":591,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3929}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864810,"byte_end":864836,"line_start":590,"line_end":590,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864935,"byte_end":864946,"line_start":593,"line_end":593,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864874,"byte_end":864927,"line_start":592,"line_end":592,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865018,"byte_end":865030,"line_start":597,"line_end":597,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3931}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":864971,"byte_end":865007,"line_start":596,"line_end":596,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865579,"byte_end":865590,"line_start":608,"line_end":608,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3930},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865037,"byte_end":865089,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865094,"byte_end":865097,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865102,"byte_end":865173,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865178,"byte_end":865254,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865259,"byte_end":865334,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865339,"byte_end":865413,"line_start":603,"line_end":603,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865418,"byte_end":865466,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865471,"byte_end":865474,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865479,"byte_end":865548,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865553,"byte_end":865571,"line_start":607,"line_end":607,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865784,"byte_end":865790,"line_start":619,"line_end":619,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6322}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865727,"byte_end":865755,"line_start":617,"line_end":617,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866531,"byte_end":866547,"line_start":656,"line_end":656,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866490,"byte_end":866520,"line_start":655,"line_end":655,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866586,"byte_end":866591,"line_start":658,"line_end":658,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866554,"byte_end":866576,"line_start":657,"line_end":657,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866825,"byte_end":866839,"line_start":663,"line_end":663,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866605,"byte_end":866676,"line_start":660,"line_end":660,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866681,"byte_end":866752,"line_start":661,"line_end":661,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866757,"byte_end":866815,"line_start":662,"line_end":662,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866932,"byte_end":866942,"line_start":666,"line_end":666,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866885,"byte_end":866924,"line_start":665,"line_end":665,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867006,"byte_end":867011,"line_start":669,"line_end":669,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866970,"byte_end":866998,"line_start":668,"line_end":668,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867126,"byte_end":867132,"line_start":675,"line_end":675,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867089,"byte_end":867118,"line_start":674,"line_end":674,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867259,"byte_end":867265,"line_start":681,"line_end":681,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867210,"byte_end":867251,"line_start":680,"line_end":680,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867382,"byte_end":867391,"line_start":684,"line_end":684,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867303,"byte_end":867374,"line_start":683,"line_end":683,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3948},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867714,"byte_end":867723,"line_start":696,"line_end":696,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867539,"byte_end":867578,"line_start":689,"line_end":689,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867583,"byte_end":867586,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867591,"byte_end":867603,"line_start":691,"line_end":691,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867608,"byte_end":867611,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867616,"byte_end":867656,"line_start":693,"line_end":693,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867661,"byte_end":867664,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867669,"byte_end":867706,"line_start":695,"line_end":695,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868044,"byte_end":868060,"line_start":706,"line_end":706,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867768,"byte_end":867807,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867812,"byte_end":867815,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867820,"byte_end":867895,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867900,"byte_end":867912,"line_start":701,"line_end":701,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867917,"byte_end":867920,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867925,"byte_end":867980,"line_start":703,"line_end":703,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867985,"byte_end":867988,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":867993,"byte_end":868029,"line_start":705,"line_end":705,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868292,"byte_end":868298,"line_start":713,"line_end":713,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868141,"byte_end":868195,"line_start":710,"line_end":710,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868200,"byte_end":868253,"line_start":711,"line_end":711,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868258,"byte_end":868284,"line_start":712,"line_end":712,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868568,"byte_end":868573,"line_start":726,"line_end":726,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"pub fn inner(&Self) -> &Self::InnerImageView","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868512,"byte_end":868560,"line_start":725,"line_end":725,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868770,"byte_end":868774,"line_start":730,"line_end":730,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[{"value":"/ Returns an subimage that is an immutable view into this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868612,"byte_end":868678,"line_start":728,"line_end":728,"column_start":5,"column_end":71}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868683,"byte_end":868762,"line_start":729,"line_end":729,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868973,"byte_end":868985,"line_start":736,"line_end":736,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3964}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868926,"byte_end":868962,"line_start":735,"line_end":735,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869230,"byte_end":869240,"line_start":740,"line_end":740,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869010,"byte_end":869081,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869086,"byte_end":869157,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869162,"byte_end":869220,"line_start":739,"line_end":739,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869430,"byte_end":869443,"line_start":747,"line_end":747,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869282,"byte_end":869344,"line_start":742,"line_end":742,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869349,"byte_end":869352,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869357,"byte_end":869369,"line_start":744,"line_end":744,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869374,"byte_end":869377,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869382,"byte_end":869422,"line_start":746,"line_end":746,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869617,"byte_end":869626,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869497,"byte_end":869531,"line_start":749,"line_end":749,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869536,"byte_end":869539,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869544,"byte_end":869556,"line_start":751,"line_end":751,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869561,"byte_end":869564,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869569,"byte_end":869609,"line_start":753,"line_end":753,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869980,"byte_end":869996,"line_start":764,"line_end":764,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869680,"byte_end":869715,"line_start":756,"line_end":756,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869720,"byte_end":869723,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869728,"byte_end":869803,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869808,"byte_end":869820,"line_start":759,"line_end":759,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869825,"byte_end":869828,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869833,"byte_end":869888,"line_start":761,"line_end":761,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869893,"byte_end":869896,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":869901,"byte_end":869965,"line_start":763,"line_end":763,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870263,"byte_end":870274,"line_start":771,"line_end":771,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870094,"byte_end":870164,"line_start":768,"line_end":768,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870169,"byte_end":870172,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870177,"byte_end":870255,"line_start":770,"line_end":770,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871036,"byte_end":871045,"line_start":788,"line_end":788,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870328,"byte_end":870392,"line_start":773,"line_end":773,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870397,"byte_end":870400,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870405,"byte_end":870466,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870471,"byte_end":870504,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870509,"byte_end":870512,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870517,"byte_end":870602,"line_start":778,"line_end":778,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870607,"byte_end":870610,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870615,"byte_end":870707,"line_start":780,"line_end":780,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870712,"byte_end":870778,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870783,"byte_end":870786,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870791,"byte_end":870804,"line_start":783,"line_end":783,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870809,"byte_end":870890,"line_start":784,"line_end":784,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870895,"byte_end":870898,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870903,"byte_end":870974,"line_start":786,"line_end":786,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":870979,"byte_end":871028,"line_start":787,"line_end":787,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":872092,"byte_end":872103,"line_start":816,"line_end":816,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871744,"byte_end":871831,"line_start":809,"line_end":809,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871836,"byte_end":871839,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871844,"byte_end":871941,"line_start":811,"line_end":811,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871946,"byte_end":871949,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871954,"byte_end":871967,"line_start":813,"line_end":813,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":871972,"byte_end":872041,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":872046,"byte_end":872084,"line_start":815,"line_end":815,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":873761,"byte_end":873770,"line_start":852,"line_end":852,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":873697,"byte_end":873753,"line_start":851,"line_end":851,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":873965,"byte_end":873974,"line_start":856,"line_end":856,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32)\n-> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":873813,"byte_end":873875,"line_start":854,"line_end":854,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":873880,"byte_end":873957,"line_start":855,"line_end":855,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874465,"byte_end":874473,"line_start":873,"line_end":873,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874181,"byte_end":874210,"line_start":867,"line_end":867,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874211,"byte_end":874214,"line_start":868,"line_end":868,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874215,"byte_end":874265,"line_start":869,"line_end":869,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874266,"byte_end":874327,"line_start":870,"line_end":870,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874328,"byte_end":874391,"line_start":871,"line_end":871,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874392,"byte_end":874453,"line_start":872,"line_end":872,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874861,"byte_end":874864,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874821,"byte_end":874849,"line_start":888,"line_end":888,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875153,"byte_end":875166,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875097,"byte_end":875141,"line_start":899,"line_end":899,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875400,"byte_end":875408,"line_start":908,"line_end":908,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImage + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875345,"byte_end":875388,"line_start":907,"line_end":907,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888788,"byte_end":888803,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":4014}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888675,"byte_end":888753,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888754,"byte_end":888777,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888874,"byte_end":888882,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":4013},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888834,"byte_end":888866,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889170,"byte_end":889179,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889124,"byte_end":889159,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889701,"byte_end":889712,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889558,"byte_end":889619,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889620,"byte_end":889690,"line_start":46,"line_end":46,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889751,"byte_end":889757,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889800,"byte_end":889810,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890282,"byte_end":890286,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890211,"byte_end":890271,"line_start":70,"line_end":70,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890317,"byte_end":890322,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4043},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890343,"byte_end":890347,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891073,"byte_end":891078,"line_start":105,"line_end":105,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":4077},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4091}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890948,"byte_end":890972,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890973,"byte_end":890976,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890977,"byte_end":891062,"line_start":104,"line_end":104,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891142,"byte_end":891150,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891099,"byte_end":891132,"line_start":106,"line_end":106,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891225,"byte_end":891238,"line_start":110,"line_end":110,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891168,"byte_end":891214,"line_start":109,"line_end":109,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891381,"byte_end":891394,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891248,"byte_end":891302,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891307,"byte_end":891373,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891490,"byte_end":891498,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891444,"byte_end":891482,"line_start":117,"line_end":117,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891586,"byte_end":891598,"line_start":121,"line_end":121,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891533,"byte_end":891578,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891764,"byte_end":891775,"line_start":125,"line_end":125,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891641,"byte_end":891705,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891710,"byte_end":891753,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891992,"byte_end":892003,"line_start":129,"line_end":129,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891795,"byte_end":891867,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891872,"byte_end":891915,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891920,"byte_end":891984,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892107,"byte_end":892117,"line_start":134,"line_end":134,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ ColorType for this pixel format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892061,"byte_end":892096,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892257,"byte_end":892267,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892134,"byte_end":892181,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892186,"byte_end":892249,"line_start":136,"line_end":136,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892505,"byte_end":892514,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892321,"byte_end":892386,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892391,"byte_end":892466,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892471,"byte_end":892474,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892479,"byte_end":892497,"line_start":144,"line_end":144,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892817,"byte_end":892830,"line_start":158,"line_end":158,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892650,"byte_end":892706,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892711,"byte_end":892778,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892783,"byte_end":892786,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892791,"byte_end":892809,"line_start":157,"line_end":157,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893184,"byte_end":893194,"line_start":169,"line_end":169,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892960,"byte_end":892992,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":892997,"byte_end":893000,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893005,"byte_end":893089,"line_start":167,"line_end":167,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893094,"byte_end":893176,"line_start":168,"line_end":168,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893474,"byte_end":893488,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893236,"byte_end":893282,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893287,"byte_end":893290,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893295,"byte_end":893379,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893384,"byte_end":893466,"line_start":174,"line_end":174,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893575,"byte_end":893581,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893538,"byte_end":893567,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893677,"byte_end":893684,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893618,"byte_end":893669,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893760,"byte_end":893767,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893722,"byte_end":893752,"line_start":183,"line_end":183,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893865,"byte_end":893878,"line_start":187,"line_end":187,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893805,"byte_end":893857,"line_start":186,"line_end":186,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893954,"byte_end":893960,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"pub fn to_bgr(&Self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893917,"byte_end":893946,"line_start":189,"line_end":189,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894056,"byte_end":894063,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"pub fn to_bgra(&Self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR with an alpha channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":893997,"byte_end":894048,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894170,"byte_end":894173,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894101,"byte_end":894162,"line_start":195,"line_end":195,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894334,"byte_end":894339,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894265,"byte_end":894326,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894564,"byte_end":894578,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894427,"byte_end":894499,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894504,"byte_end":894556,"line_start":206,"line_end":206,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894884,"byte_end":894900,"line_start":214,"line_end":214,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894731,"byte_end":894803,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":894808,"byte_end":894876,"line_start":213,"line_end":213,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895129,"byte_end":895146,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895049,"byte_end":895121,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895438,"byte_end":895457,"line_start":231,"line_end":231,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895334,"byte_end":895406,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895411,"byte_end":895430,"line_start":230,"line_end":230,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895700,"byte_end":895704,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895598,"byte_end":895662,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895667,"byte_end":895692,"line_start":239,"line_end":239,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895944,"byte_end":895950,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895826,"byte_end":895890,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":895895,"byte_end":895936,"line_start":245,"line_end":245,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":896097,"byte_end":896103,"line_start":251,"line_end":251,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":896068,"byte_end":896089,"line_start":250,"line_end":250,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":896214,"byte_end":896219,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":896121,"byte_end":896206,"line_start":253,"line_end":253,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":4093},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":896328,"byte_end":896343,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":900353,"byte_end":900372,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":6328}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[{"value":"/ A marker struct for __NonExhaustive enums.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899630,"byte_end":899676,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899677,"byte_end":899680,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is an empty type that can not be constructed. When an enum contains a tuple variant that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899681,"byte_end":899778,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ includes this type the optimizer can statically determined tha the branch is never taken while","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899779,"byte_end":899877,"line_start":100,"line_end":100,"column_start":1,"column_end":99}},{"value":"/ at the same time the matching of the branch is required.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899878,"byte_end":899938,"line_start":101,"line_end":101,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899939,"byte_end":899942,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The effect is thus very similar to the actual `#[non_exhaustive]` attribute with no runtime","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":899943,"byte_end":900038,"line_start":103,"line_end":103,"column_start":1,"column_end":96}},{"value":"/ costs. Also note that we use a dirty trick to not only hide this type from the doc but make it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":900039,"byte_end":900137,"line_start":104,"line_end":104,"column_start":1,"column_end":99}},{"value":"/ inaccessible. The visibility in this module is pub but the module itself is not and the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":900138,"byte_end":900229,"line_start":105,"line_end":105,"column_start":1,"column_end":92}},{"value":"/ top-level crate never exports the type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\utils\\mod.rs","byte_start":900230,"byte_end":900273,"line_start":106,"line_end":106,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19890,"byte_end":19906,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20604,"byte_end":20617,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21393,"byte_end":21406,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22183,"byte_end":22197,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22576,"byte_end":22586,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22943,"byte_end":22953,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23069,"byte_end":23084,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23213,"byte_end":23228,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23478,"byte_end":23494,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23797,"byte_end":23807,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":24268,"byte_end":24278,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":24731,"byte_end":24747,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":26369,"byte_end":26385,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":26413,"byte_end":26427,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":27462,"byte_end":27476,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":27681,"byte_end":27694,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28155,"byte_end":28168,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28373,"byte_end":28386,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28833,"byte_end":28846,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29051,"byte_end":29061,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29444,"byte_end":29454,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29482,"byte_end":29497,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34338,"byte_end":34346,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34916,"byte_end":34924,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":35073,"byte_end":35081,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70411,"byte_end":70418,"line_start":232,"line_end":232,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":71197,"byte_end":71205,"line_start":268,"line_end":268,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":71744,"byte_end":71752,"line_start":292,"line_end":292,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":86966,"byte_end":86978,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105865,"byte_end":105871,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107253,"byte_end":107259,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108045,"byte_end":108051,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126280,"byte_end":126292,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138887,"byte_end":138890,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139148,"byte_end":139159,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156314,"byte_end":156325,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162177,"byte_end":162181,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167766,"byte_end":167773,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":172149,"byte_end":172160,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":172769,"byte_end":172780,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":173384,"byte_end":173388,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":174635,"byte_end":174642,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":175909,"byte_end":175916,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":176811,"byte_end":176821,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":176973,"byte_end":176996,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":177204,"byte_end":177227,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":177801,"byte_end":177806,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":178741,"byte_end":178746,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":178771,"byte_end":178781,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":187675,"byte_end":187686,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":189609,"byte_end":189621,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":191692,"byte_end":191702,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":191858,"byte_end":191870,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":192217,"byte_end":192234,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":200891,"byte_end":200899,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":202285,"byte_end":202294,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":203559,"byte_end":203574,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":205430,"byte_end":205440,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237344,"byte_end":237353,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237773,"byte_end":237783,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":238458,"byte_end":238468,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240227,"byte_end":240237,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":247352,"byte_end":247362,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":252546,"byte_end":252558,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253198,"byte_end":253208,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253364,"byte_end":253376,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253845,"byte_end":253856,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":254580,"byte_end":254586,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256262,"byte_end":256272,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":257764,"byte_end":257774,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259954,"byte_end":259964,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260921,"byte_end":260931,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":262957,"byte_end":262967,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":263864,"byte_end":263874,"line_start":168,"line_end":168,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265072,"byte_end":265081,"line_start":210,"line_end":210,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265571,"byte_end":265581,"line_start":233,"line_end":233,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":289356,"byte_end":289370,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":290537,"byte_end":290551,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":291330,"byte_end":291344,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":293950,"byte_end":293965,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":294213,"byte_end":294228,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":294639,"byte_end":294654,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295462,"byte_end":295477,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":296465,"byte_end":296480,"line_start":252,"line_end":252,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301597,"byte_end":301607,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":302083,"byte_end":302092,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":302505,"byte_end":302515,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":305469,"byte_end":305485,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":306097,"byte_end":306113,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":310829,"byte_end":310839,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311332,"byte_end":311342,"line_start":309,"line_end":309,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":315496,"byte_end":315506,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":318072,"byte_end":318084,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":319734,"byte_end":319744,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":319900,"byte_end":319912,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":320414,"byte_end":320422,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321246,"byte_end":321256,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":322627,"byte_end":322636,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":323052,"byte_end":323062,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":323570,"byte_end":323580,"line_start":211,"line_end":211,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324898,"byte_end":324908,"line_start":265,"line_end":265,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327214,"byte_end":327224,"line_start":330,"line_end":330,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1432},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332904,"byte_end":332914,"line_start":483,"line_end":483,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334152,"byte_end":334175,"line_start":522,"line_end":522,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334468,"byte_end":334491,"line_start":535,"line_end":535,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":336299,"byte_end":336322,"line_start":586,"line_end":586,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":343004,"byte_end":343015,"line_start":773,"line_end":773,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353146,"byte_end":353156,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":355718,"byte_end":355729,"line_start":100,"line_end":100,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":355855,"byte_end":355866,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":356567,"byte_end":356587,"line_start":135,"line_end":135,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":356846,"byte_end":356866,"line_start":145,"line_end":145,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":370587,"byte_end":370599,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":371730,"byte_end":371740,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":371896,"byte_end":371908,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372149,"byte_end":372168,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372408,"byte_end":372427,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":373066,"byte_end":373076,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":375365,"byte_end":375373,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":376686,"byte_end":376695,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":377115,"byte_end":377125,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382926,"byte_end":382936,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383930,"byte_end":383940,"line_start":66,"line_end":66,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386733,"byte_end":386744,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388422,"byte_end":388432,"line_start":67,"line_end":67,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388845,"byte_end":388856,"line_start":81,"line_end":81,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":390602,"byte_end":390611,"line_start":141,"line_end":141,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":390869,"byte_end":390879,"line_start":152,"line_end":152,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":417102,"byte_end":417111,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420575,"byte_end":420587,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420925,"byte_end":420937,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421764,"byte_end":421775,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1850},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":433071,"byte_end":433082,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455614,"byte_end":455623,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":456381,"byte_end":456390,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457755,"byte_end":457765,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":462379,"byte_end":462389,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":464450,"byte_end":464461,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":470012,"byte_end":470023,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":470161,"byte_end":470174,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472783,"byte_end":472793,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":476628,"byte_end":476638,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":477873,"byte_end":477883,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":478900,"byte_end":478915,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":479001,"byte_end":479011,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":486963,"byte_end":486972,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":488233,"byte_end":488242,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":488868,"byte_end":488877,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":492727,"byte_end":492739,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":495568,"byte_end":495578,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":495734,"byte_end":495746,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":496222,"byte_end":496235,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":496827,"byte_end":496842,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":497994,"byte_end":498004,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508698,"byte_end":508707,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508836,"byte_end":508845,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":509258,"byte_end":509268,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":510975,"byte_end":510985,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":513412,"byte_end":513414,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":514079,"byte_end":514082,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":515354,"byte_end":515360,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":516982,"byte_end":516987,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":517837,"byte_end":517849,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":517974,"byte_end":517987,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":518303,"byte_end":518315,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":518625,"byte_end":518640,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536268,"byte_end":536278,"line_start":92,"line_end":92,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":544055,"byte_end":544065,"line_start":295,"line_end":295,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":544298,"byte_end":544316,"line_start":307,"line_end":307,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":545186,"byte_end":545201,"line_start":335,"line_end":335,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":545762,"byte_end":545779,"line_start":356,"line_end":356,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":549799,"byte_end":549817,"line_start":450,"line_end":450,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":552382,"byte_end":552395,"line_start":517,"line_end":517,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":552706,"byte_end":552718,"line_start":530,"line_end":530,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":554135,"byte_end":554146,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":555857,"byte_end":555868,"line_start":629,"line_end":629,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":555987,"byte_end":555998,"line_start":635,"line_end":635,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":556099,"byte_end":556112,"line_start":641,"line_end":641,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561621,"byte_end":561638,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562150,"byte_end":562160,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563130,"byte_end":563139,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":567813,"byte_end":567827,"line_start":324,"line_end":324,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568426,"byte_end":568435,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568628,"byte_end":568637,"line_start":352,"line_end":352,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568831,"byte_end":568840,"line_start":361,"line_end":361,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":569035,"byte_end":569044,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":570063,"byte_end":570071,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":571188,"byte_end":571198,"line_start":66,"line_end":66,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":582158,"byte_end":582168,"line_start":368,"line_end":368,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":583867,"byte_end":583876,"line_start":424,"line_end":424,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":584521,"byte_end":584533,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":584900,"byte_end":584910,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585066,"byte_end":585078,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585167,"byte_end":585177,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":586626,"byte_end":586636,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\header.rs","byte_start":592008,"byte_end":592017,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\header.rs","byte_start":594063,"byte_end":594069,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597817,"byte_end":597828,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":600630,"byte_end":600640,"line_start":108,"line_end":108,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602395,"byte_end":602405,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602825,"byte_end":602836,"line_start":162,"line_end":162,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605558,"byte_end":605569,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":607244,"byte_end":607255,"line_start":273,"line_end":273,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":608319,"byte_end":608331,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":608468,"byte_end":608483,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609070,"byte_end":609080,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609237,"byte_end":609249,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609475,"byte_end":609486,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612359,"byte_end":612369,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612782,"byte_end":612793,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":642375,"byte_end":642387,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643406,"byte_end":643416,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643573,"byte_end":643585,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643706,"byte_end":643716,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":648049,"byte_end":648059,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":669374,"byte_end":669382,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":669999,"byte_end":670007,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670072,"byte_end":670082,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670371,"byte_end":670381,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670448,"byte_end":670457,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670994,"byte_end":671003,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693404,"byte_end":693410,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694000,"byte_end":694006,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694525,"byte_end":694530,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695479,"byte_end":695484,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":701520,"byte_end":701528,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":704989,"byte_end":704995,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705239,"byte_end":705245,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705394,"byte_end":705400,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705609,"byte_end":705615,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705741,"byte_end":705747,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706162,"byte_end":706171,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706427,"byte_end":706436,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706585,"byte_end":706594,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706842,"byte_end":706851,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707417,"byte_end":707421,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708320,"byte_end":708324,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708734,"byte_end":708738,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708887,"byte_end":708891,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709258,"byte_end":709262,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709386,"byte_end":709390,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709977,"byte_end":709984,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":710905,"byte_end":710912,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711335,"byte_end":711342,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711491,"byte_end":711498,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711880,"byte_end":711887,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712343,"byte_end":712358,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712761,"byte_end":712776,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712902,"byte_end":712917,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3239}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713093,"byte_end":713108,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713647,"byte_end":713660,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714198,"byte_end":714211,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714335,"byte_end":714348,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714518,"byte_end":714531,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715059,"byte_end":715077,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715488,"byte_end":715506,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715637,"byte_end":715655,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716203,"byte_end":716219,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716766,"byte_end":716782,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716911,"byte_end":716927,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719949,"byte_end":719960,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726749,"byte_end":726760,"line_start":814,"line_end":814,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729358,"byte_end":729369,"line_start":889,"line_end":889,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730021,"byte_end":730032,"line_start":914,"line_end":914,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730775,"byte_end":730786,"line_start":941,"line_end":941,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731050,"byte_end":731061,"line_start":954,"line_end":954,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731327,"byte_end":731338,"line_start":965,"line_end":965,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731609,"byte_end":731620,"line_start":978,"line_end":978,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731881,"byte_end":731892,"line_start":989,"line_end":989,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":732251,"byte_end":732262,"line_start":1004,"line_end":1004,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":733086,"byte_end":733097,"line_start":1037,"line_end":1037,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736682,"byte_end":736693,"line_start":1129,"line_end":1129,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739127,"byte_end":739136,"line_start":1207,"line_end":1207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":740534,"byte_end":740545,"line_start":1245,"line_end":1245,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750981,"byte_end":750990,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754699,"byte_end":754716,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":756004,"byte_end":756021,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":762121,"byte_end":762122,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":762560,"byte_end":762561,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3461}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":763817,"byte_end":763821,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764050,"byte_end":764054,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764282,"byte_end":764286,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764511,"byte_end":764515,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764742,"byte_end":764746,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764894,"byte_end":764898,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765142,"byte_end":765146,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765390,"byte_end":765394,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765580,"byte_end":765584,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765770,"byte_end":765774,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765962,"byte_end":765966,"line_start":524,"line_end":524,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766179,"byte_end":766183,"line_start":532,"line_end":532,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766405,"byte_end":766409,"line_start":540,"line_end":540,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766633,"byte_end":766637,"line_start":548,"line_end":548,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766859,"byte_end":766863,"line_start":556,"line_end":556,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767138,"byte_end":767143,"line_start":567,"line_end":567,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767405,"byte_end":767410,"line_start":576,"line_end":576,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767671,"byte_end":767676,"line_start":585,"line_end":585,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767941,"byte_end":767946,"line_start":594,"line_end":594,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768212,"byte_end":768217,"line_start":603,"line_end":603,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768430,"byte_end":768435,"line_start":611,"line_end":611,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768735,"byte_end":768740,"line_start":621,"line_end":621,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769035,"byte_end":769040,"line_start":631,"line_end":631,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769292,"byte_end":769297,"line_start":640,"line_end":640,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769561,"byte_end":769566,"line_start":649,"line_end":649,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769839,"byte_end":769844,"line_start":658,"line_end":658,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770108,"byte_end":770113,"line_start":667,"line_end":667,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770435,"byte_end":770439,"line_start":679,"line_end":679,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770740,"byte_end":770744,"line_start":690,"line_end":690,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771046,"byte_end":771050,"line_start":701,"line_end":701,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771351,"byte_end":771355,"line_start":712,"line_end":712,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771656,"byte_end":771660,"line_start":723,"line_end":723,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771937,"byte_end":771941,"line_start":734,"line_end":734,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":772303,"byte_end":772307,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":772657,"byte_end":772661,"line_start":756,"line_end":756,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773016,"byte_end":773020,"line_start":769,"line_end":769,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3556}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773352,"byte_end":773356,"line_start":780,"line_end":780,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773675,"byte_end":773679,"line_start":792,"line_end":792,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774011,"byte_end":774015,"line_start":803,"line_end":803,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774406,"byte_end":774410,"line_start":816,"line_end":816,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774711,"byte_end":774715,"line_start":827,"line_end":827,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775017,"byte_end":775021,"line_start":838,"line_end":838,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3571}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775322,"byte_end":775326,"line_start":849,"line_end":849,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3574}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775627,"byte_end":775631,"line_start":860,"line_end":860,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775955,"byte_end":775958,"line_start":874,"line_end":874,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776227,"byte_end":776230,"line_start":884,"line_end":884,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3583}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776498,"byte_end":776501,"line_start":894,"line_end":894,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776766,"byte_end":776769,"line_start":904,"line_end":904,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777033,"byte_end":777036,"line_start":914,"line_end":914,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777274,"byte_end":777277,"line_start":924,"line_end":924,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777502,"byte_end":777505,"line_start":932,"line_end":932,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777730,"byte_end":777733,"line_start":940,"line_end":940,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778016,"byte_end":778019,"line_start":951,"line_end":951,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778316,"byte_end":778319,"line_start":961,"line_end":961,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3602}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778598,"byte_end":778601,"line_start":972,"line_end":972,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778893,"byte_end":778896,"line_start":982,"line_end":982,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779242,"byte_end":779245,"line_start":995,"line_end":995,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779513,"byte_end":779516,"line_start":1005,"line_end":1005,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779781,"byte_end":779784,"line_start":1016,"line_end":1016,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3615}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":780054,"byte_end":780057,"line_start":1026,"line_end":1026,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":780321,"byte_end":780324,"line_start":1036,"line_end":1036,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":781990,"byte_end":781995,"line_start":1090,"line_end":1090,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":783000,"byte_end":783004,"line_start":1123,"line_end":1123,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":783114,"byte_end":783118,"line_start":1129,"line_end":1129,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":785326,"byte_end":785330,"line_start":1187,"line_end":1187,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787536,"byte_end":787539,"line_start":1243,"line_end":1243,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787648,"byte_end":787651,"line_start":1249,"line_end":1249,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787870,"byte_end":787875,"line_start":1262,"line_end":1262,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788048,"byte_end":788052,"line_start":1271,"line_end":1271,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788240,"byte_end":788244,"line_start":1282,"line_end":1282,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788457,"byte_end":788461,"line_start":1293,"line_end":1293,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788674,"byte_end":788677,"line_start":1304,"line_end":1304,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788939,"byte_end":788942,"line_start":1318,"line_end":1318,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800628,"byte_end":800640,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3811}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831789,"byte_end":831801,"line_start":1033,"line_end":1033,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":832334,"byte_end":832346,"line_start":1055,"line_end":1055,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845001,"byte_end":845012,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3879}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849981,"byte_end":849998,"line_start":214,"line_end":214,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":851393,"byte_end":851408,"line_start":253,"line_end":253,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859278,"byte_end":859286,"line_start":437,"line_end":437,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865934,"byte_end":865940,"line_start":627,"line_end":627,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866408,"byte_end":866414,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874803,"byte_end":874811,"line_start":887,"line_end":887,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875948,"byte_end":875956,"line_start":928,"line_end":928,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":876777,"byte_end":876785,"line_start":960,"line_end":960,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5037,"byte_end":5042,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5435,"byte_end":5439,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","byte_start":30431,"byte_end":30433,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\mod.rs","byte_start":30443,"byte_end":30448,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":143}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5480,"byte_end":5488,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\mod.rs","byte_start":39892,"byte_end":39900,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":240}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5514,"byte_end":5516,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":428}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":5562,"byte_end":5566,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":522}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7707,"byte_end":7710,"line_start":219,"line_end":219,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":702}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7752,"byte_end":7755,"line_start":221,"line_end":221,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":957}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7797,"byte_end":7800,"line_start":223,"line_end":223,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1010}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7847,"byte_end":7855,"line_start":225,"line_end":225,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1132}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7897,"byte_end":7900,"line_start":227,"line_end":227,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1225}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7942,"byte_end":7945,"line_start":229,"line_end":229,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1329}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":7987,"byte_end":7990,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1557}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8033,"byte_end":8037,"line_start":233,"line_end":233,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1684}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8079,"byte_end":8082,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1912}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8124,"byte_end":8127,"line_start":237,"line_end":237,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2047}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8169,"byte_end":8172,"line_start":239,"line_end":239,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2443}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8215,"byte_end":8219,"line_start":241,"line_end":241,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2608}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src/lib.rs","byte_start":8262,"byte_end":8266,"line_start":243,"line_end":243,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2680}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\mod.rs","byte_start":607578,"byte_end":607581,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2759}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":19890,"byte_end":19906,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":20604,"byte_end":20617,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":21393,"byte_end":21406,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22183,"byte_end":22197,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22576,"byte_end":22586,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":22943,"byte_end":22953,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23069,"byte_end":23084,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4227},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23213,"byte_end":23228,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4227},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23478,"byte_end":23494,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4133},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":23797,"byte_end":23807,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":24268,"byte_end":24278,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4112},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":24731,"byte_end":24747,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4133},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":26369,"byte_end":26385,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4133},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":26413,"byte_end":26427,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":27462,"byte_end":27476,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4167},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":27681,"byte_end":27694,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4162},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28155,"byte_end":28168,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4162},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28373,"byte_end":28386,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4196},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":28833,"byte_end":28846,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4196},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29051,"byte_end":29061,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4201},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29444,"byte_end":29454,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4201},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\error.rs","byte_start":29482,"byte_end":29497,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4227},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34338,"byte_end":34346,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":34916,"byte_end":34924,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\math\\nq.rs","byte_start":35073,"byte_end":35081,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":34,"index":20},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":70411,"byte_end":70418,"line_start":232,"line_end":232,"column_start":19,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4273},"to":{"krate":0,"index":279}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":71197,"byte_end":71205,"line_start":268,"line_end":268,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":130},"to":{"krate":0,"index":279}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\colorops.rs","byte_start":71744,"byte_end":71752,"line_start":292,"line_end":292,"column_start":32,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":34,"index":20},"to":{"krate":0,"index":279}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\imageops\\sample.rs","byte_start":86966,"byte_end":86978,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":105865,"byte_end":105871,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":107253,"byte_end":107259,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\io\\reader.rs","byte_start":108045,"byte_end":108051,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":126280,"byte_end":126292,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":138887,"byte_end":138890,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":139148,"byte_end":139159,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":156314,"byte_end":156325,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":162177,"byte_end":162181,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":167766,"byte_end":167773,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":172149,"byte_end":172160,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4297},"to":{"krate":2,"index":2312}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":172769,"byte_end":172780,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4297},"to":{"krate":2,"index":2316}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":173384,"byte_end":173388,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4358},"to":{"krate":0,"index":3940}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":174635,"byte_end":174642,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4371},"to":{"krate":0,"index":3940}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":175909,"byte_end":175916,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4371},"to":{"krate":0,"index":3953}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":176811,"byte_end":176821,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":176973,"byte_end":176996,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4433},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":177204,"byte_end":177227,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4433},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":177801,"byte_end":177806,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":178741,"byte_end":178746,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4384},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\flat.rs","byte_start":178771,"byte_end":178781,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4408},"to":{"krate":2,"index":1797}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":187675,"byte_end":187686,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":773},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":189609,"byte_end":189621,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4491},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":191692,"byte_end":191702,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":191858,"byte_end":191870,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4491},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":192217,"byte_end":192234,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4568},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":200891,"byte_end":200899,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":202285,"byte_end":202294,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":203559,"byte_end":203574,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":205430,"byte_end":205440,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237344,"byte_end":237353,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":891},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":237773,"byte_end":237783,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":813},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\decoder.rs","byte_start":238458,"byte_end":238468,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":813},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":240227,"byte_end":240237,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\bmp\\encoder.rs","byte_start":247352,"byte_end":247362,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":252546,"byte_end":252558,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4621},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253198,"byte_end":253208,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253364,"byte_end":253376,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4621},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":253845,"byte_end":253856,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":254580,"byte_end":254586,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":256262,"byte_end":256272,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dds.rs","byte_start":257764,"byte_end":257774,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":994},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":259954,"byte_end":259964,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":260921,"byte_end":260931,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":262957,"byte_end":262967,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":263864,"byte_end":263874,"line_start":168,"line_end":168,"column_start":55,"column_end":65},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265072,"byte_end":265081,"line_start":210,"line_end":210,"column_start":24,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1063},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\dxt.rs","byte_start":265571,"byte_end":265581,"line_start":233,"line_end":233,"column_start":16,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":289356,"byte_end":289370,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":290537,"byte_end":290551,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":291330,"byte_end":291344,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":3145}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":293950,"byte_end":293965,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":294213,"byte_end":294228,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":294639,"byte_end":294654,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":295462,"byte_end":295477,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\farbfeld.rs","byte_start":296465,"byte_end":296480,"line_start":252,"line_end":252,"column_start":33,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":301597,"byte_end":301607,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":302083,"byte_end":302092,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":302505,"byte_end":302515,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1260},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":305469,"byte_end":305485,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":306097,"byte_end":306113,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1285},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":310829,"byte_end":310839,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1260},"to":{"krate":0,"index":3927}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":311332,"byte_end":311342,"line_start":309,"line_end":309,"column_start":16,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\gif.rs","byte_start":315496,"byte_end":315506,"line_start":421,"line_end":421,"column_start":6,"column_end":16},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":318072,"byte_end":318084,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4697},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":319734,"byte_end":319744,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":319900,"byte_end":319912,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4697},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":320414,"byte_end":320422,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4741},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":321246,"byte_end":321256,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":322627,"byte_end":322636,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":323052,"byte_end":323062,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4770},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":323570,"byte_end":323580,"line_start":211,"line_end":211,"column_start":58,"column_end":68},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4770},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":324898,"byte_end":324908,"line_start":265,"line_end":265,"column_start":6,"column_end":16},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":327214,"byte_end":327224,"line_start":330,"line_end":330,"column_start":18,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":332904,"byte_end":332914,"line_start":483,"line_end":483,"column_start":35,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4777},"to":{"krate":2,"index":5194}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334152,"byte_end":334175,"line_start":522,"line_end":522,"column_start":18,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":334468,"byte_end":334491,"line_start":535,"line_end":535,"column_start":31,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":336299,"byte_end":336322,"line_start":586,"line_end":586,"column_start":40,"column_end":63},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\decoder.rs","byte_start":343004,"byte_end":343015,"line_start":773,"line_end":773,"column_start":6,"column_end":17},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":353146,"byte_end":353156,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":355718,"byte_end":355729,"line_start":100,"line_end":100,"column_start":10,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":355855,"byte_end":355866,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1527},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":356567,"byte_end":356587,"line_start":135,"line_end":135,"column_start":10,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\hdr\\encoder.rs","byte_start":356846,"byte_end":356866,"line_start":145,"line_end":145,"column_start":23,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1539},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":370587,"byte_end":370599,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4836},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":371730,"byte_end":371740,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":371896,"byte_end":371908,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4836},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372149,"byte_end":372168,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4884},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":372408,"byte_end":372427,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4884},"to":{"krate":2,"index":1949}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":373066,"byte_end":373076,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":375365,"byte_end":375373,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":376686,"byte_end":376695,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1635},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\decoder.rs","byte_start":377115,"byte_end":377125,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1603},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":382926,"byte_end":382936,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\ico\\encoder.rs","byte_start":383930,"byte_end":383940,"line_start":66,"line_end":66,"column_start":33,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1666},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":386733,"byte_end":386744,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388422,"byte_end":388432,"line_start":67,"line_end":67,"column_start":18,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1717},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":388845,"byte_end":388856,"line_start":81,"line_end":81,"column_start":45,"column_end":56},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1709},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":390602,"byte_end":390611,"line_start":141,"line_end":141,"column_start":6,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\decoder.rs","byte_start":390869,"byte_end":390879,"line_start":152,"line_end":152,"column_start":6,"column_end":16},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":417102,"byte_end":417111,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420575,"byte_end":420587,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":420925,"byte_end":420937,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4956},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":421764,"byte_end":421775,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\jpeg\\encoder.rs","byte_start":433071,"byte_end":433082,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1822},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":455614,"byte_end":455623,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":456381,"byte_end":456390,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1954},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":457755,"byte_end":457765,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":462379,"byte_end":462389,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1968},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":464450,"byte_end":464461,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":470012,"byte_end":470023,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1992},"to":{"krate":0,"index":3927}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":470161,"byte_end":470174,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2010},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":472783,"byte_end":472793,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":476628,"byte_end":476638,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":477873,"byte_end":477883,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":478900,"byte_end":478915,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4971},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\png.rs","byte_start":479001,"byte_end":479011,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":486963,"byte_end":486972,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":488233,"byte_end":488242,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2068},"to":{"krate":1,"index":3127}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\autobreak.rs","byte_start":488868,"byte_end":488877,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":492727,"byte_end":492739,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5023},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":495568,"byte_end":495578,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":495734,"byte_end":495746,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5023},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":496222,"byte_end":496235,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5080},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":496827,"byte_end":496842,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5107},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":497994,"byte_end":498004,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":501169,"byte_end":501176,"line_start":317,"line_end":317,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3151},"to":{"krate":0,"index":2170}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508698,"byte_end":508707,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":2445},"to":{"krate":0,"index":2170}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":508836,"byte_end":508845,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2192},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":509258,"byte_end":509268,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2157},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":510975,"byte_end":510985,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":513412,"byte_end":513414,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2147},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":514079,"byte_end":514082,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2149},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":515354,"byte_end":515360,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2151},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":516982,"byte_end":516987,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2153},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":517837,"byte_end":517849,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5207},"to":{"krate":0,"index":2155}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":517974,"byte_end":517987,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5216},"to":{"krate":0,"index":2155}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":518303,"byte_end":518315,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5226},"to":{"krate":0,"index":2155}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\decoder.rs","byte_start":518625,"byte_end":518640,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5236},"to":{"krate":0,"index":2155}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":536268,"byte_end":536278,"line_start":92,"line_end":92,"column_start":16,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":544055,"byte_end":544065,"line_start":295,"line_end":295,"column_start":33,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2293},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":544298,"byte_end":544316,"line_start":307,"line_end":307,"column_start":10,"column_end":28},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":545186,"byte_end":545201,"line_start":335,"line_end":335,"column_start":10,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":545762,"byte_end":545779,"line_start":356,"line_end":356,"column_start":10,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":549799,"byte_end":549817,"line_start":450,"line_end":450,"column_start":10,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":552382,"byte_end":552395,"line_start":517,"line_end":517,"column_start":10,"column_end":23},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":552706,"byte_end":552718,"line_start":530,"line_end":530,"column_start":10,"column_end":22},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":554135,"byte_end":554146,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":555857,"byte_end":555868,"line_start":629,"line_end":629,"column_start":29,"column_end":40},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5154},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":555987,"byte_end":555998,"line_start":635,"line_end":635,"column_start":30,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5154},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\encoder.rs","byte_start":556099,"byte_end":556112,"line_start":641,"line_end":641,"column_start":10,"column_end":23},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":561621,"byte_end":561638,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":562150,"byte_end":562160,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":563130,"byte_end":563139,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":567813,"byte_end":567827,"line_start":324,"line_end":324,"column_start":43,"column_end":57},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2428},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568426,"byte_end":568435,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568628,"byte_end":568637,"line_start":352,"line_end":352,"column_start":30,"column_end":39},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":568831,"byte_end":568840,"line_start":361,"line_end":361,"column_start":29,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\pnm\\header.rs","byte_start":569035,"byte_end":569044,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":570063,"byte_end":570071,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":571188,"byte_end":571198,"line_start":66,"line_end":66,"column_start":22,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":582158,"byte_end":582168,"line_start":368,"line_end":368,"column_start":52,"column_end":62},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2479},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\decoder.rs","byte_start":583867,"byte_end":583876,"line_start":424,"line_end":424,"column_start":31,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2518},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":584521,"byte_end":584533,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5266},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":584900,"byte_end":584910,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585066,"byte_end":585078,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5266},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":585167,"byte_end":585177,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\encoder.rs","byte_start":586626,"byte_end":586636,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2545},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\header.rs","byte_start":592008,"byte_end":592017,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tga\\header.rs","byte_start":594063,"byte_end":594069,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":597817,"byte_end":597828,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":600630,"byte_end":600640,"line_start":108,"line_end":108,"column_start":6,"column_end":16},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602395,"byte_end":602405,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2651},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":602825,"byte_end":602836,"line_start":162,"line_end":162,"column_start":52,"column_end":63},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2638},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":605558,"byte_end":605569,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\tiff.rs","byte_start":607244,"byte_end":607255,"line_start":273,"line_end":273,"column_start":40,"column_end":51},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2668},"to":{"krate":0,"index":3930}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":608319,"byte_end":608331,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5313},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":608468,"byte_end":608483,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609070,"byte_end":609080,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609237,"byte_end":609249,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5313},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":609475,"byte_end":609486,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612359,"byte_end":612369,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2736},"to":{"krate":1,"index":3068}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\decoder.rs","byte_start":612782,"byte_end":612793,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2720},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":642375,"byte_end":642387,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5426},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643406,"byte_end":643416,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4112},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643573,"byte_end":643585,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5426},"to":{"krate":1,"index":1720}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":643706,"byte_end":643716,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":648049,"byte_end":648059,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":669374,"byte_end":669382,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":669999,"byte_end":670007,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5329},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670072,"byte_end":670082,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670371,"byte_end":670381,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5356},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670448,"byte_end":670457,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\codecs\\webp\\vp8.rs","byte_start":670994,"byte_end":671003,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5380},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":693404,"byte_end":693410,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694000,"byte_end":694006,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":694525,"byte_end":694530,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":695479,"byte_end":695484,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\animation.rs","byte_start":701520,"byte_end":701528,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":2,"index":34254},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":704989,"byte_end":704995,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705239,"byte_end":705245,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705394,"byte_end":705400,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705609,"byte_end":705615,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":705741,"byte_end":705747,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706162,"byte_end":706171,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706427,"byte_end":706436,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706585,"byte_end":706594,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":706842,"byte_end":706851,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":707417,"byte_end":707421,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708320,"byte_end":708324,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708734,"byte_end":708738,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":708887,"byte_end":708891,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709258,"byte_end":709262,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709386,"byte_end":709390,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":709977,"byte_end":709984,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":710905,"byte_end":710912,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711335,"byte_end":711342,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711491,"byte_end":711498,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":711880,"byte_end":711887,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712343,"byte_end":712358,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3220},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712761,"byte_end":712776,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3220},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":712902,"byte_end":712917,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3220},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713093,"byte_end":713108,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3220},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":713647,"byte_end":713660,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714198,"byte_end":714211,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714335,"byte_end":714348,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":714518,"byte_end":714531,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715059,"byte_end":715077,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715488,"byte_end":715506,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":715637,"byte_end":715655,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716203,"byte_end":716219,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3285},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716766,"byte_end":716782,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3285},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":716911,"byte_end":716927,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3285},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":719949,"byte_end":719960,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":726749,"byte_end":726760,"line_start":814,"line_end":814,"column_start":20,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":729358,"byte_end":729369,"line_start":889,"line_end":889,"column_start":20,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730021,"byte_end":730032,"line_start":914,"line_end":914,"column_start":20,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":730775,"byte_end":730786,"line_start":941,"line_end":941,"column_start":30,"column_end":41},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":2231}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731050,"byte_end":731061,"line_start":954,"line_end":954,"column_start":33,"column_end":44},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":2244}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731327,"byte_end":731338,"line_start":965,"line_end":965,"column_start":42,"column_end":53},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":2312}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731609,"byte_end":731620,"line_start":978,"line_end":978,"column_start":45,"column_end":56},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":2316}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":731881,"byte_end":731892,"line_start":989,"line_end":989,"column_start":30,"column_end":41},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":732251,"byte_end":732262,"line_start":1004,"line_end":1004,"column_start":41,"column_end":52},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5525},"to":{"krate":0,"index":3940}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":733086,"byte_end":733097,"line_start":1037,"line_end":1037,"column_start":37,"column_end":48},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5525},"to":{"krate":0,"index":3953}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":736682,"byte_end":736693,"line_start":1129,"line_end":1129,"column_start":26,"column_end":37},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":739127,"byte_end":739136,"line_start":1207,"line_end":1207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\buffer.rs","byte_start":740534,"byte_end":740545,"line_start":1245,"line_end":1245,"column_start":67,"column_end":78},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5525},"to":{"krate":0,"index":3402}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":750981,"byte_end":750990,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":754699,"byte_end":754716,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":756004,"byte_end":756021,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":762121,"byte_end":762122,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":762560,"byte_end":762561,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3460},"to":{"krate":0,"index":3455}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":763817,"byte_end":763821,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764050,"byte_end":764054,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764282,"byte_end":764286,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764511,"byte_end":764515,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764742,"byte_end":764746,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":764894,"byte_end":764898,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765142,"byte_end":765146,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765390,"byte_end":765394,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765580,"byte_end":765584,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765770,"byte_end":765774,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":765962,"byte_end":765966,"line_start":524,"line_end":524,"column_start":31,"column_end":35},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766179,"byte_end":766183,"line_start":532,"line_end":532,"column_start":29,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766405,"byte_end":766409,"line_start":540,"line_end":540,"column_start":30,"column_end":34},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766633,"byte_end":766637,"line_start":548,"line_end":548,"column_start":29,"column_end":33},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":766859,"byte_end":766863,"line_start":556,"line_end":556,"column_start":30,"column_end":34},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767138,"byte_end":767143,"line_start":567,"line_end":567,"column_start":53,"column_end":58},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767405,"byte_end":767410,"line_start":576,"line_end":576,"column_start":53,"column_end":58},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767671,"byte_end":767676,"line_start":585,"line_end":585,"column_start":52,"column_end":57},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":767941,"byte_end":767946,"line_start":594,"line_end":594,"column_start":52,"column_end":57},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768212,"byte_end":768217,"line_start":603,"line_end":603,"column_start":53,"column_end":58},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768430,"byte_end":768435,"line_start":611,"line_end":611,"column_start":32,"column_end":37},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":768735,"byte_end":768740,"line_start":621,"line_end":621,"column_start":31,"column_end":36},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769035,"byte_end":769040,"line_start":631,"line_end":631,"column_start":30,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769292,"byte_end":769297,"line_start":640,"line_end":640,"column_start":29,"column_end":34},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769561,"byte_end":769566,"line_start":649,"line_end":649,"column_start":30,"column_end":35},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":769839,"byte_end":769844,"line_start":658,"line_end":658,"column_start":29,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770108,"byte_end":770113,"line_start":667,"line_end":667,"column_start":30,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770435,"byte_end":770439,"line_start":679,"line_end":679,"column_start":52,"column_end":56},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":770740,"byte_end":770744,"line_start":690,"line_end":690,"column_start":52,"column_end":56},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771046,"byte_end":771050,"line_start":701,"line_end":701,"column_start":53,"column_end":57},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771351,"byte_end":771355,"line_start":712,"line_end":712,"column_start":54,"column_end":58},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771656,"byte_end":771660,"line_start":723,"line_end":723,"column_start":53,"column_end":57},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":771937,"byte_end":771941,"line_start":734,"line_end":734,"column_start":31,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":772303,"byte_end":772307,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":772657,"byte_end":772661,"line_start":756,"line_end":756,"column_start":31,"column_end":35},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773016,"byte_end":773020,"line_start":769,"line_end":769,"column_start":29,"column_end":33},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773352,"byte_end":773356,"line_start":780,"line_end":780,"column_start":30,"column_end":34},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":773675,"byte_end":773679,"line_start":792,"line_end":792,"column_start":29,"column_end":33},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774011,"byte_end":774015,"line_start":803,"line_end":803,"column_start":30,"column_end":34},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774406,"byte_end":774410,"line_start":816,"line_end":816,"column_start":52,"column_end":56},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":774711,"byte_end":774715,"line_start":827,"line_end":827,"column_start":52,"column_end":56},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775017,"byte_end":775021,"line_start":838,"line_end":838,"column_start":53,"column_end":57},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775322,"byte_end":775326,"line_start":849,"line_end":849,"column_start":54,"column_end":58},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775627,"byte_end":775631,"line_start":860,"line_end":860,"column_start":53,"column_end":57},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":775955,"byte_end":775958,"line_start":874,"line_end":874,"column_start":53,"column_end":56},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776227,"byte_end":776230,"line_start":884,"line_end":884,"column_start":53,"column_end":56},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776498,"byte_end":776501,"line_start":894,"line_end":894,"column_start":52,"column_end":55},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":776766,"byte_end":776769,"line_start":904,"line_end":904,"column_start":54,"column_end":57},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777033,"byte_end":777036,"line_start":914,"line_end":914,"column_start":53,"column_end":56},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777274,"byte_end":777277,"line_start":924,"line_end":924,"column_start":30,"column_end":33},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777502,"byte_end":777505,"line_start":932,"line_end":932,"column_start":29,"column_end":32},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":777730,"byte_end":777733,"line_start":940,"line_end":940,"column_start":31,"column_end":34},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778016,"byte_end":778019,"line_start":951,"line_end":951,"column_start":30,"column_end":33},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778316,"byte_end":778319,"line_start":961,"line_end":961,"column_start":30,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778598,"byte_end":778601,"line_start":972,"line_end":972,"column_start":29,"column_end":32},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":778893,"byte_end":778896,"line_start":982,"line_end":982,"column_start":30,"column_end":33},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779242,"byte_end":779245,"line_start":995,"line_end":995,"column_start":53,"column_end":56},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779513,"byte_end":779516,"line_start":1005,"line_end":1005,"column_start":52,"column_end":55},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":779781,"byte_end":779784,"line_start":1016,"line_end":1016,"column_start":53,"column_end":56},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":780054,"byte_end":780057,"line_start":1026,"line_end":1026,"column_start":54,"column_end":57},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":780321,"byte_end":780324,"line_start":1036,"line_end":1036,"column_start":53,"column_end":56},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3449}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":781990,"byte_end":781995,"line_start":1090,"line_end":1090,"column_start":30,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":783000,"byte_end":783004,"line_start":1123,"line_end":1123,"column_start":30,"column_end":34},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":783114,"byte_end":783118,"line_start":1129,"line_end":1129,"column_start":30,"column_end":34},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":785326,"byte_end":785330,"line_start":1187,"line_end":1187,"column_start":30,"column_end":34},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787536,"byte_end":787539,"line_start":1243,"line_end":1243,"column_start":30,"column_end":33},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787648,"byte_end":787651,"line_start":1249,"line_end":1249,"column_start":30,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3623}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":787870,"byte_end":787875,"line_start":1262,"line_end":1262,"column_start":31,"column_end":36},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6106},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788048,"byte_end":788052,"line_start":1271,"line_end":1271,"column_start":31,"column_end":35},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6019},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788240,"byte_end":788244,"line_start":1282,"line_end":1282,"column_start":31,"column_end":35},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6048},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788457,"byte_end":788461,"line_start":1293,"line_end":1293,"column_start":31,"column_end":35},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6077},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788674,"byte_end":788677,"line_start":1304,"line_end":1304,"column_start":31,"column_end":34},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5961},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\color.rs","byte_start":788939,"byte_end":788942,"line_start":1318,"line_end":1318,"column_start":31,"column_end":34},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3643}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":800628,"byte_end":800640,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":831789,"byte_end":831801,"line_start":1033,"line_end":1033,"column_start":27,"column_end":39},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6186},"to":{"krate":0,"index":3940}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\dynimage.rs","byte_start":832334,"byte_end":832346,"line_start":1055,"line_end":1055,"column_start":23,"column_end":35},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6186},"to":{"krate":0,"index":3953}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":845001,"byte_end":845012,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":849981,"byte_end":849998,"line_start":214,"line_end":214,"column_start":28,"column_end":45},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6264},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":851393,"byte_end":851408,"line_start":253,"line_end":253,"column_start":6,"column_end":21},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859278,"byte_end":859286,"line_start":437,"line_end":437,"column_start":6,"column_end":14},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":859792,"byte_end":859797,"line_start":457,"line_end":457,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":3908}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863493,"byte_end":863505,"line_start":554,"line_end":554,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3908},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":863512,"byte_end":863517,"line_start":554,"line_end":554,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":3921}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":865934,"byte_end":865940,"line_start":627,"line_end":627,"column_start":44,"column_end":50},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6315},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":866408,"byte_end":866414,"line_start":649,"line_end":649,"column_start":27,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6315},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":868987,"byte_end":869003,"line_start":736,"line_end":736,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3940},"to":{"krate":0,"index":3953}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":874803,"byte_end":874811,"line_start":887,"line_end":887,"column_start":9,"column_end":17},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":875948,"byte_end":875956,"line_start":928,"line_end":928,"column_start":30,"column_end":38},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3965},"to":{"krate":0,"index":3940}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\image.rs","byte_start":876777,"byte_end":876785,"line_start":960,"line_end":960,"column_start":26,"column_end":34},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3965},"to":{"krate":0,"index":3953}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":888812,"byte_end":888827,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":4093},"to":{"krate":0,"index":4013}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889181,"byte_end":889185,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2044},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889188,"byte_end":889195,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":32,"index":175},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889198,"byte_end":889201,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":32,"index":615},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889204,"byte_end":889214,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1797},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889223,"byte_end":889228,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1732},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889231,"byte_end":889238,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":32,"index":92},"to":{"krate":0,"index":4019}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889714,"byte_end":889719,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":4032}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889722,"byte_end":889729,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":32,"index":92},"to":{"krate":0,"index":4032}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":889732,"byte_end":889739,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":32,"index":175},"to":{"krate":0,"index":4032}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890288,"byte_end":890295,"line_start":71,"line_end":71,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":32,"index":92},"to":{"krate":0,"index":4041}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":890298,"byte_end":890305,"line_start":71,"line_end":71,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":32,"index":175},"to":{"krate":0,"index":4041}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891080,"byte_end":891084,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2044},"to":{"krate":0,"index":4050}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.12\\./src\\traits.rs","byte_start":891087,"byte_end":891092,"line_start":105,"line_end":105,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1732},"to":{"krate":0,"index":4050}}]}