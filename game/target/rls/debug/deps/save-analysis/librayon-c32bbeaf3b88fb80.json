{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0","program":"C:\\Users\\Pranav\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rayon","C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c32bbeaf3b88fb80","-C","extra-filename=-c32bbeaf3b88fb80","--out-dir","f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps","--extern","crossbeam_deque=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libcrossbeam_deque-26424d06cb8f6539.rmeta","--extern","either=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\libeither-3974beef4cf9f32f.rmeta","--extern","rayon_core=f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\librayon_core-f465b3471b74d93e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Pranav\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\SnakeGame-Rust\\game\\target\\rls\\debug\\deps\\librayon-c32bbeaf3b88fb80.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[6305397294700486413,6506117378376550066]},"crate_root":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src","external_crates":[{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":13,"id":{"name":"crossbeam_deque","disambiguator":[9914346616905041741,9819465494094770541]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":14,"id":{"name":"crossbeam_epoch","disambiguator":[6892001264834159939,7775472202257045174]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[3765223586286468020,8905192521727625958]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":16,"id":{"name":"arrayvec","disambiguator":[11563243034863110384,7675451055610069323]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":17,"id":{"name":"nodrop","disambiguator":[17793049393425882433,13999540853910940507]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[15252322891328332338,9207682984445073907]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[6809859229561447421,5375163887299390715]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":20,"id":{"name":"memoffset","disambiguator":[7973753861615305952,8223003288457406633]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":21,"id":{"name":"scopeguard","disambiguator":[11591700275758915249,6308026967918677093]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":22,"id":{"name":"either","disambiguator":[10808373694776573288,2776891651193848079]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":23,"id":{"name":"rayon_core","disambiguator":[9610788921778255022,276856719546116541]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":24,"id":{"name":"crossbeam_queue","disambiguator":[380034344040138267,12012241131002374507]}},{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","num":25,"id":{"name":"num_cpus","disambiguator":[17874482490264258763,15200219874528289616]}}],"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":158},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25941,"byte_end":25947,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5166},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26668,"byte_end":26678,"line_start":95,"line_end":95,"column_start":28,"column_end":38},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26680,"byte_end":26694,"line_start":95,"line_end":95,"column_start":40,"column_end":54},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26761,"byte_end":26766,"line_start":100,"line_end":100,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26802,"byte_end":26808,"line_start":102,"line_end":102,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26863,"byte_end":26872,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26908,"byte_end":26914,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":26958,"byte_end":26967,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27007,"byte_end":27014,"line_start":111,"line_end":111,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27052,"byte_end":27059,"line_start":113,"line_end":113,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27143,"byte_end":27147,"line_start":118,"line_end":118,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27149,"byte_end":27157,"line_start":118,"line_end":118,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27199,"byte_end":27206,"line_start":120,"line_end":120,"column_start":26,"column_end":33},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27208,"byte_end":27219,"line_start":120,"line_end":120,"column_start":35,"column_end":46},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27301,"byte_end":27305,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27346,"byte_end":27351,"line_start":127,"line_end":127,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5323},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27353,"byte_end":27358,"line_start":127,"line_end":127,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27391,"byte_end":27395,"line_start":129,"line_end":129,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27425,"byte_end":27428,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27469,"byte_end":27476,"line_start":133,"line_end":133,"column_start":26,"column_end":33},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27478,"byte_end":27485,"line_start":133,"line_end":133,"column_start":35,"column_end":42},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27516,"byte_end":27519,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5388},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27555,"byte_end":27560,"line_start":137,"line_end":137,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5400},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27604,"byte_end":27614,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27676,"byte_end":27694,"line_start":141,"line_end":141,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27740,"byte_end":27751,"line_start":143,"line_end":143,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27787,"byte_end":27793,"line_start":145,"line_end":145,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27834,"byte_end":27837,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27868,"byte_end":27874,"line_start":151,"line_end":151,"column_start":21,"column_end":27},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27876,"byte_end":27882,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27941,"byte_end":27947,"line_start":155,"line_end":155,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27985,"byte_end":27992,"line_start":157,"line_end":157,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28036,"byte_end":28045,"line_start":159,"line_end":159,"column_start":27,"column_end":36},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28089,"byte_end":28098,"line_start":161,"line_end":161,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28158,"byte_end":28164,"line_start":165,"line_end":165,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28166,"byte_end":28172,"line_start":165,"line_end":165,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28198,"byte_end":28205,"line_start":166,"line_end":166,"column_start":24,"column_end":31},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28207,"byte_end":28214,"line_start":166,"line_end":166,"column_start":33,"column_end":40},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28251,"byte_end":28256,"line_start":169,"line_end":169,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28258,"byte_end":28263,"line_start":169,"line_end":169,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28297,"byte_end":28301,"line_start":171,"line_end":171,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28303,"byte_end":28307,"line_start":171,"line_end":171,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362515,"byte_end":362535,"line_start":5,"line_end":5,"column_start":15,"column_end":35},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362551,"byte_end":362574,"line_start":6,"line_end":6,"column_start":15,"column_end":38},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362590,"byte_end":362610,"line_start":7,"line_end":7,"column_start":15,"column_end":35},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362626,"byte_end":362649,"line_start":8,"line_end":8,"column_start":15,"column_end":38},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362665,"byte_end":362691,"line_start":9,"line_end":9,"column_start":15,"column_end":41},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362707,"byte_end":362721,"line_start":10,"line_end":10,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362737,"byte_end":362751,"line_start":11,"line_end":11,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362767,"byte_end":362783,"line_start":12,"line_end":12,"column_start":15,"column_end":31},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362800,"byte_end":362813,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362830,"byte_end":362846,"line_start":14,"line_end":14,"column_start":16,"column_end":32},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362861,"byte_end":362875,"line_start":15,"line_end":15,"column_start":14,"column_end":28},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":3861}},{"kind":"Use","ref_id":{"krate":23,"index":825},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4159,"byte_end":4168,"line_start":120,"line_end":120,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":221},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4190,"byte_end":4203,"line_start":121,"line_end":121,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":501},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4225,"byte_end":4235,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":813},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4257,"byte_end":4277,"line_start":123,"line_end":123,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":590},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4299,"byte_end":4316,"line_start":124,"line_end":124,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":589},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4339,"byte_end":4358,"line_start":125,"line_end":125,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":540},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4360,"byte_end":4380,"line_start":125,"line_end":125,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":101},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4404,"byte_end":4408,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":108},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4410,"byte_end":4422,"line_start":126,"line_end":126,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":383},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4446,"byte_end":4451,"line_start":127,"line_end":127,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":369},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4453,"byte_end":4458,"line_start":127,"line_end":127,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":390},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4482,"byte_end":4492,"line_start":128,"line_end":128,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":372},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4494,"byte_end":4503,"line_start":128,"line_end":128,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":470},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4527,"byte_end":4532,"line_start":129,"line_end":129,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":477},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4534,"byte_end":4544,"line_start":129,"line_end":129,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":14},{"krate":0,"index":51},{"krate":0,"index":142},{"krate":0,"index":3805},{"krate":0,"index":3861},{"krate":0,"index":3873},{"krate":0,"index":3896},{"krate":0,"index":3911},{"krate":0,"index":3947},{"krate":0,"index":4392},{"krate":0,"index":4623},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4711},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":143,"byte_end":212,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":213,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":244,"byte_end":247,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":248,"byte_end":329,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":330,"byte_end":402,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":403,"byte_end":464,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":465,"byte_end":468,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":469,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":496,"byte_end":532,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":533,"byte_end":536,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":537,"byte_end":620,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":621,"byte_end":656,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":657,"byte_end":747,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":748,"byte_end":776,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":777,"byte_end":858,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":859,"byte_end":945,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":946,"byte_end":977,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":978,"byte_end":1055,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1056,"byte_end":1117,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1118,"byte_end":1209,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1210,"byte_end":1296,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1297,"byte_end":1320,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1321,"byte_end":1324,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1325,"byte_end":1359,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1360,"byte_end":1386,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1387,"byte_end":1415,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1416,"byte_end":1483,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1484,"byte_end":1554,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1555,"byte_end":1611,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1612,"byte_end":1615,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1616,"byte_end":1655,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1656,"byte_end":1659,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml` and put","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1660,"byte_end":1728,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ `extern crate rayon` in your main file (`lib.rs`, `main.rs`).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1729,"byte_end":1794,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1795,"byte_end":1798,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1799,"byte_end":1867,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1868,"byte_end":1936,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":1937,"byte_end":2005,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2006,"byte_end":2074,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2075,"byte_end":2126,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2127,"byte_end":2130,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2131,"byte_end":2203,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2204,"byte_end":2277,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2278,"byte_end":2329,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2330,"byte_end":2333,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2334,"byte_end":2376,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2377,"byte_end":2433,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2434,"byte_end":2500,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2501,"byte_end":2563,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2564,"byte_end":2622,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2623,"byte_end":2684,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2685,"byte_end":2688,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2689,"byte_end":2707,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2708,"byte_end":2711,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2712,"byte_end":2782,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2783,"byte_end":2848,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2849,"byte_end":2914,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2915,"byte_end":2984,"line_start":64,"line_end":64,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":2985,"byte_end":3044,"line_start":65,"line_end":65,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3045,"byte_end":3113,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3114,"byte_end":3180,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3181,"byte_end":3240,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3241,"byte_end":3256,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3257,"byte_end":3260,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3261,"byte_end":3344,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3345,"byte_end":3433,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3434,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3478,"byte_end":3481,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3482,"byte_end":3504,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3505,"byte_end":3508,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3509,"byte_end":3538,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3539,"byte_end":3542,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3543,"byte_end":3606,"line_start":79,"line_end":79,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":7062,"byte_end":7075,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":6890,"byte_end":6955,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":6956,"byte_end":7010,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\private.rs","byte_start":7011,"byte_end":7050,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":67},{"krate":0,"index":77},{"krate":0,"index":86},{"krate":0,"index":99},{"krate":0,"index":111},{"krate":0,"index":120}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11611,"byte_end":11683,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11684,"byte_end":11687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11688,"byte_end":11766,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11767,"byte_end":11805,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11806,"byte_end":11809,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":11810,"byte_end":11883,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":4742},{"krate":0,"index":4748},{"krate":0,"index":4745},{"krate":0,"index":58},{"krate":0,"index":4758},{"krate":0,"index":4751},{"krate":0,"index":4764},{"krate":0,"index":4768},{"krate":0,"index":63},{"krate":0,"index":4772},{"krate":0,"index":4787},{"krate":0,"index":4779}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12587,"byte_end":12649,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12650,"byte_end":12722,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12723,"byte_end":12782,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4742},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12942,"byte_end":12950,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4744}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":12866,"byte_end":12906,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4764},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13416,"byte_end":13420,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4767}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13321,"byte_end":13387,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":4794},{"krate":0,"index":4798},{"krate":0,"index":4802},{"krate":0,"index":4809},{"krate":0,"index":4816},{"krate":0,"index":4821},{"krate":0,"index":72},{"krate":0,"index":4826},{"krate":0,"index":4834},{"krate":0,"index":4842},{"krate":0,"index":4847},{"krate":0,"index":4852},{"krate":0,"index":4860}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":13861,"byte_end":13929,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":13930,"byte_end":14003,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14004,"byte_end":14063,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14234,"byte_end":14242,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4797}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14145,"byte_end":14184,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14577,"byte_end":14581,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4820}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14483,"byte_end":14548,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4842},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":15128,"byte_end":15135,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4846}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":15037,"byte_end":15099,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":4868},{"krate":0,"index":4871},{"krate":0,"index":4874},{"krate":0,"index":4880},{"krate":0,"index":4886},{"krate":0,"index":4890},{"krate":0,"index":82},{"krate":0,"index":4894},{"krate":0,"index":4901}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15446,"byte_end":15514,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15515,"byte_end":15585,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15586,"byte_end":15645,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15816,"byte_end":15824,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4870}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":15727,"byte_end":15766,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16113,"byte_end":16117,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4889}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16019,"byte_end":16084,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":6211},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":4908},{"krate":0,"index":4912},{"krate":0,"index":4916},{"krate":0,"index":4924},{"krate":0,"index":4931},{"krate":0,"index":4936},{"krate":0,"index":94},{"krate":0,"index":4941},{"krate":0,"index":4950},{"krate":0,"index":4958},{"krate":0,"index":4963},{"krate":0,"index":4968},{"krate":0,"index":4977}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16551,"byte_end":16617,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16618,"byte_end":16690,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16691,"byte_end":16750,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4908},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16954,"byte_end":16962,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4911}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":16867,"byte_end":16904,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17331,"byte_end":17335,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4935}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17239,"byte_end":17302,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17922,"byte_end":17929,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4962}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17833,"byte_end":17893,"line_start":53,"line_end":53,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":6225},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4998},{"krate":0,"index":5004},{"krate":0,"index":5008},{"krate":0,"index":107},{"krate":0,"index":5012},{"krate":0,"index":5020}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18276,"byte_end":18342,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18343,"byte_end":18412,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18413,"byte_end":18472,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18676,"byte_end":18684,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4987}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18589,"byte_end":18626,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19007,"byte_end":19011,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5007}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":18915,"byte_end":18978,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":5027},{"krate":0,"index":5033},{"krate":0,"index":5030},{"krate":0,"index":5036},{"krate":0,"index":5042},{"krate":0,"index":5048},{"krate":0,"index":5052},{"krate":0,"index":116},{"krate":0,"index":5056},{"krate":0,"index":5063},{"krate":0,"index":5070},{"krate":0,"index":5074},{"krate":0,"index":5078},{"krate":0,"index":5085}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19481,"byte_end":19550,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19551,"byte_end":19623,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19624,"byte_end":19683,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19843,"byte_end":19851,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5029}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":19767,"byte_end":19807,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20125,"byte_end":20129,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5051}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20030,"byte_end":20096,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5070},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20579,"byte_end":20586,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5073}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20487,"byte_end":20550,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":5092},{"krate":0,"index":5098},{"krate":0,"index":5095},{"krate":0,"index":5101},{"krate":0,"index":5114},{"krate":0,"index":5107},{"krate":0,"index":5120},{"krate":0,"index":5124},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":5136},{"krate":0,"index":5128},{"krate":0,"index":5143},{"krate":0,"index":5147},{"krate":0,"index":136},{"krate":0,"index":5159},{"krate":0,"index":5151}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":20817,"byte_end":20893,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":20894,"byte_end":20964,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":20965,"byte_end":21024,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5092},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21200,"byte_end":21208,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5094}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21117,"byte_end":21164,"line_start":13,"line_end":13,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21495,"byte_end":21499,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5123}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21393,"byte_end":21466,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":22187,"byte_end":22194,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5146}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":22088,"byte_end":22158,"line_start":60,"line_end":60,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":300},{"krate":0,"index":357},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":571},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":956},{"krate":0,"index":995},{"krate":0,"index":1081},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1356},{"krate":0,"index":1387},{"krate":0,"index":1455},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2444},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2658},{"krate":0,"index":2707},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3186},{"krate":0,"index":3252},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3524},{"krate":0,"index":3529},{"krate":0,"index":3535},{"krate":0,"index":3540},{"krate":0,"index":3546},{"krate":0,"index":3713},{"krate":0,"index":3718},{"krate":0,"index":3775},{"krate":0,"index":3779},{"krate":0,"index":3783}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22669,"byte_end":22743,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22744,"byte_end":22747,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22748,"byte_end":22826,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22827,"byte_end":22870,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22871,"byte_end":22874,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22875,"byte_end":22945,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":22946,"byte_end":23014,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23015,"byte_end":23084,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23085,"byte_end":23152,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23153,"byte_end":23216,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23217,"byte_end":23247,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23248,"byte_end":23251,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23252,"byte_end":23263,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23264,"byte_end":23290,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23291,"byte_end":23336,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23337,"byte_end":23361,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23362,"byte_end":23390,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23391,"byte_end":23410,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23411,"byte_end":23416,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23417,"byte_end":23424,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23425,"byte_end":23428,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23429,"byte_end":23495,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23496,"byte_end":23499,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23500,"byte_end":23511,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23512,"byte_end":23538,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23539,"byte_end":23580,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23581,"byte_end":23609,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23610,"byte_end":23646,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23647,"byte_end":23652,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23653,"byte_end":23660,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23661,"byte_end":23664,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23665,"byte_end":23729,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23730,"byte_end":23796,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23797,"byte_end":23866,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23867,"byte_end":23927,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23928,"byte_end":23991,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":23992,"byte_end":24009,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24010,"byte_end":24013,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24014,"byte_end":24081,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24082,"byte_end":24133,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24134,"byte_end":24137,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24138,"byte_end":24206,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24207,"byte_end":24263,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24264,"byte_end":24332,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24333,"byte_end":24403,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24404,"byte_end":24461,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24462,"byte_end":24523,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24524,"byte_end":24588,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24589,"byte_end":24658,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24659,"byte_end":24683,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24684,"byte_end":24687,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24688,"byte_end":24754,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24755,"byte_end":24821,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24822,"byte_end":24867,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24868,"byte_end":24929,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24930,"byte_end":24933,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":24934,"byte_end":25003,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25004,"byte_end":25074,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25075,"byte_end":25086,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25087,"byte_end":25090,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25091,"byte_end":25166,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25167,"byte_end":25245,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25246,"byte_end":25249,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: http://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25250,"byte_end":25327,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25328,"byte_end":25381,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25382,"byte_end":25449,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25450,"byte_end":25476,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25477,"byte_end":25512,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25513,"byte_end":25516,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25517,"byte_end":25596,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25597,"byte_end":25676,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25677,"byte_end":25757,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25758,"byte_end":25835,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":25836,"byte_end":25876,"line_start":74,"line_end":74,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114655,"byte_end":114669,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":175}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113391,"byte_end":113461,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113462,"byte_end":113465,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113466,"byte_end":113565,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113566,"byte_end":113662,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113663,"byte_end":113760,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113761,"byte_end":113852,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113853,"byte_end":113922,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113923,"byte_end":113926,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":113927,"byte_end":114015,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114016,"byte_end":114019,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114020,"byte_end":114034,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114035,"byte_end":114038,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114039,"byte_end":114138,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114139,"byte_end":114185,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114186,"byte_end":114189,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114190,"byte_end":114197,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114198,"byte_end":114234,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114235,"byte_end":114276,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114277,"byte_end":114310,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114311,"byte_end":114314,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114315,"byte_end":114329,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114330,"byte_end":114363,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114364,"byte_end":114367,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114368,"byte_end":114392,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114393,"byte_end":114417,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114418,"byte_end":114444,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114445,"byte_end":114448,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114449,"byte_end":114459,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114460,"byte_end":114466,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114467,"byte_end":114470,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114471,"byte_end":114549,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114550,"byte_end":114577,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114578,"byte_end":114581,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114582,"byte_end":114636,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114637,"byte_end":114644,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114750,"byte_end":114760,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Create a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Create a bridge from this type to a `ParallelIterator`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114683,"byte_end":114742,"line_start":47,"line_end":47,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5166},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115259,"byte_end":115269,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":5168}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114953,"byte_end":115026,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115027,"byte_end":115030,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115031,"byte_end":115119,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115120,"byte_end":115169,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115170,"byte_end":115173,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115174,"byte_end":115223,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120441,"byte_end":120446,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5178},{"krate":0,"index":5179}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120059,"byte_end":120138,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120139,"byte_end":120215,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120216,"byte_end":120219,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120220,"byte_end":120277,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120278,"byte_end":120331,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120332,"byte_end":120405,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137565,"byte_end":137571,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5198},{"krate":0,"index":5199}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137152,"byte_end":137227,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137228,"byte_end":137231,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137232,"byte_end":137316,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137317,"byte_end":137320,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137321,"byte_end":137387,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137388,"byte_end":137455,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137456,"byte_end":137529,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159538,"byte_end":159547,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5208}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159110,"byte_end":159195,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159196,"byte_end":159283,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159284,"byte_end":159287,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159288,"byte_end":159360,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159361,"byte_end":159428,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159429,"byte_end":159502,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162973,"byte_end":162979,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5218},{"krate":0,"index":5219}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162595,"byte_end":162674,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162675,"byte_end":162752,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162753,"byte_end":162756,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162757,"byte_end":162816,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162817,"byte_end":162870,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":162871,"byte_end":162944,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166519,"byte_end":166528,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166117,"byte_end":166207,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166208,"byte_end":166290,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166291,"byte_end":166294,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166295,"byte_end":166362,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166363,"byte_end":166416,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166417,"byte_end":166490,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170226,"byte_end":170233,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5236},{"krate":0,"index":5237}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to an iterator, then flattens these iterators together.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":169834,"byte_end":169921,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":169922,"byte_end":170001,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170002,"byte_end":170005,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170006,"byte_end":170069,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170070,"byte_end":170123,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170124,"byte_end":170197,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174285,"byte_end":174292,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5244}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to an iterator, then flattens these iterators","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":173883,"byte_end":173961,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ together. This struct is created by the [`flatten()`] method on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":173962,"byte_end":174029,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174030,"byte_end":174055,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174056,"byte_end":174059,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174060,"byte_end":174121,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174122,"byte_end":174175,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174176,"byte_end":174249,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175659,"byte_end":175663,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175274,"byte_end":175366,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175367,"byte_end":175442,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175443,"byte_end":175446,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175447,"byte_end":175502,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175503,"byte_end":175556,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175557,"byte_end":175630,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179627,"byte_end":179635,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179223,"byte_end":179319,"line_start":190,"line_end":190,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179320,"byte_end":179400,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179401,"byte_end":179404,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179405,"byte_end":179470,"line_start":193,"line_end":193,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179471,"byte_end":179524,"line_start":194,"line_end":194,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179525,"byte_end":179598,"line_start":195,"line_end":195,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1091},{"krate":0,"index":1100},{"krate":0,"index":1108},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1123},{"krate":0,"index":5275},{"krate":0,"index":5278},{"krate":0,"index":5277},{"krate":0,"index":1128},{"krate":0,"index":5280},{"krate":0,"index":5284},{"krate":0,"index":5283},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1147},{"krate":0,"index":1155},{"krate":0,"index":1158}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189346,"byte_end":189419,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189420,"byte_end":189491,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189492,"byte_end":189583,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189584,"byte_end":189587,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189588,"byte_end":189670,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190120,"byte_end":190136,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189759,"byte_end":189821,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189822,"byte_end":189892,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189893,"byte_end":189938,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189939,"byte_end":189942,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":189943,"byte_end":190043,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190044,"byte_end":190109,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190369,"byte_end":190375,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190146,"byte_end":190207,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190212,"byte_end":190259,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190264,"byte_end":190267,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190272,"byte_end":190359,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190593,"byte_end":190601,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190382,"byte_end":190447,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190452,"byte_end":190515,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190520,"byte_end":190585,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192075,"byte_end":192083,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190684,"byte_end":190751,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190752,"byte_end":190821,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190822,"byte_end":190889,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190890,"byte_end":190957,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":190958,"byte_end":191027,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191028,"byte_end":191096,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191097,"byte_end":191166,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191167,"byte_end":191237,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191238,"byte_end":191306,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191307,"byte_end":191370,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191371,"byte_end":191426,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191427,"byte_end":191430,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191431,"byte_end":191496,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191497,"byte_end":191566,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191567,"byte_end":191608,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191609,"byte_end":191612,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191613,"byte_end":191677,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191678,"byte_end":191745,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191746,"byte_end":191805,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191806,"byte_end":191868,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191869,"byte_end":191917,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191918,"byte_end":191921,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":191922,"byte_end":192004,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192005,"byte_end":192064,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192220,"byte_end":192224,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192104,"byte_end":192168,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192173,"byte_end":192210,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192281,"byte_end":192289,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192231,"byte_end":192271,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192472,"byte_end":192481,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192367,"byte_end":192442,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192447,"byte_end":192464,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193084,"byte_end":193091,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192512,"byte_end":192564,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192569,"byte_end":192632,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192637,"byte_end":192701,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192706,"byte_end":192767,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192772,"byte_end":192834,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192839,"byte_end":192902,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192907,"byte_end":192968,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192973,"byte_end":192984,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192989,"byte_end":192992,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192997,"byte_end":193076,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193656,"byte_end":193663,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193131,"byte_end":193183,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193188,"byte_end":193253,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193258,"byte_end":193312,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193317,"byte_end":193380,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193385,"byte_end":193443,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193448,"byte_end":193508,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193513,"byte_end":193556,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193561,"byte_end":193564,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193569,"byte_end":193648,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193851,"byte_end":193859,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193712,"byte_end":193776,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193781,"byte_end":193843,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194126,"byte_end":194135,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193902,"byte_end":193965,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":193970,"byte_end":194040,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194045,"byte_end":194048,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194053,"byte_end":194118,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195083,"byte_end":195091,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194263,"byte_end":194332,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194333,"byte_end":194398,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194399,"byte_end":194460,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194461,"byte_end":194528,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194529,"byte_end":194597,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194598,"byte_end":194667,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194668,"byte_end":194738,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194739,"byte_end":194798,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194799,"byte_end":194834,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194835,"byte_end":194838,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194839,"byte_end":194921,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":194922,"byte_end":195000,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195001,"byte_end":195034,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195035,"byte_end":195072,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195192,"byte_end":195198,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195118,"byte_end":195182,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195319,"byte_end":195326,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195242,"byte_end":195309,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195432,"byte_end":195438,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195356,"byte_end":195422,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195674,"byte_end":195682,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195451,"byte_end":195515,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195520,"byte_end":195580,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195585,"byte_end":195649,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195654,"byte_end":195666,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195868,"byte_end":195879,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195740,"byte_end":195801,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195806,"byte_end":195860,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196038,"byte_end":196042,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195908,"byte_end":195970,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195975,"byte_end":196030,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196405,"byte_end":196411,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196062,"byte_end":196116,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196117,"byte_end":196184,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196185,"byte_end":196255,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196256,"byte_end":196311,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196312,"byte_end":196315,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196316,"byte_end":196394,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196511,"byte_end":196517,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196431,"byte_end":196501,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196586,"byte_end":196593,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196524,"byte_end":196578,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197022,"byte_end":197034,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196626,"byte_end":196706,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196711,"byte_end":196714,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196719,"byte_end":196784,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196789,"byte_end":196853,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196858,"byte_end":196891,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196896,"byte_end":196899,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196904,"byte_end":196967,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196972,"byte_end":197014,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197342,"byte_end":197350,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197285,"byte_end":197334,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197507,"byte_end":197511,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1108},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197379,"byte_end":197439,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197444,"byte_end":197499,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197941,"byte_end":197948,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":1118}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197531,"byte_end":197600,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197601,"byte_end":197668,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197669,"byte_end":197739,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197740,"byte_end":197807,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197808,"byte_end":197843,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197844,"byte_end":197847,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197848,"byte_end":197930,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198049,"byte_end":198055,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":197963,"byte_end":198026,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198031,"byte_end":198041,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198417,"byte_end":198434,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198105,"byte_end":198174,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198175,"byte_end":198231,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198232,"byte_end":198301,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198302,"byte_end":198369,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198370,"byte_end":198406,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198910,"byte_end":198924,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":1119},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198457,"byte_end":198516,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198521,"byte_end":198587,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198592,"byte_end":198658,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198663,"byte_end":198725,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198730,"byte_end":198790,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198795,"byte_end":198861,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198866,"byte_end":198902,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199046,"byte_end":199056,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":1119},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198946,"byte_end":199012,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199017,"byte_end":199038,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199533,"byte_end":199550,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199085,"byte_end":199152,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199153,"byte_end":199215,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199216,"byte_end":199284,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199285,"byte_end":199355,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199356,"byte_end":199359,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199360,"byte_end":199426,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199427,"byte_end":199495,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199496,"byte_end":199522,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199628,"byte_end":199632,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199571,"byte_end":199618,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199721,"byte_end":199726,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199639,"byte_end":199713,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199909,"byte_end":199918,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199763,"byte_end":199826,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199831,"byte_end":199901,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203727,"byte_end":203733,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203148,"byte_end":203218,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203219,"byte_end":203285,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203286,"byte_end":203355,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203356,"byte_end":203396,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203397,"byte_end":203400,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203401,"byte_end":203463,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203464,"byte_end":203520,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203521,"byte_end":203566,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203567,"byte_end":203570,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203571,"byte_end":203651,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":203652,"byte_end":203719,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204979,"byte_end":205003,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204341,"byte_end":204403,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204404,"byte_end":204469,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204470,"byte_end":204538,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204539,"byte_end":204605,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204606,"byte_end":204617,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204618,"byte_end":204621,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204622,"byte_end":204684,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204685,"byte_end":204741,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204742,"byte_end":204787,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204788,"byte_end":204791,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204792,"byte_end":204822,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204823,"byte_end":204903,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204904,"byte_end":204971,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":206779,"byte_end":206795,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":206610,"byte_end":206700,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":206701,"byte_end":206704,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":206705,"byte_end":206771,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209076,"byte_end":209083,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208676,"byte_end":208771,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208772,"byte_end":208851,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208852,"byte_end":208855,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208856,"byte_end":208919,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208920,"byte_end":208973,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208974,"byte_end":209047,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213047,"byte_end":213058,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212628,"byte_end":212727,"line_start":181,"line_end":181,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212728,"byte_end":212812,"line_start":182,"line_end":182,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212813,"byte_end":212816,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212817,"byte_end":212890,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212891,"byte_end":212944,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212945,"byte_end":213018,"line_start":186,"line_end":186,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218308,"byte_end":218312,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":217915,"byte_end":217980,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":217981,"byte_end":218063,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218064,"byte_end":218067,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218068,"byte_end":218130,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218131,"byte_end":218198,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218199,"byte_end":218272,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230174,"byte_end":230179,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226290,"byte_end":226367,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226368,"byte_end":226423,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226424,"byte_end":226427,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226428,"byte_end":226442,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226443,"byte_end":226446,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226447,"byte_end":226517,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226518,"byte_end":226521,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226522,"byte_end":226529,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226530,"byte_end":226550,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226551,"byte_end":226577,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226578,"byte_end":226602,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226603,"byte_end":226606,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226607,"byte_end":226610,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226611,"byte_end":226657,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226658,"byte_end":226690,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226691,"byte_end":226694,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226695,"byte_end":226743,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226744,"byte_end":226807,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226808,"byte_end":226883,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226884,"byte_end":226959,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":226960,"byte_end":227013,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227014,"byte_end":227017,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227018,"byte_end":227088,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227089,"byte_end":227144,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227145,"byte_end":227195,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227196,"byte_end":227201,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227202,"byte_end":227205,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227206,"byte_end":227286,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227287,"byte_end":227354,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227355,"byte_end":227416,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227417,"byte_end":227494,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227495,"byte_end":227540,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227541,"byte_end":227610,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227611,"byte_end":227618,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227619,"byte_end":227626,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227627,"byte_end":227630,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227631,"byte_end":227703,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227704,"byte_end":227782,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227783,"byte_end":227809,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227810,"byte_end":227813,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227814,"byte_end":227821,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227822,"byte_end":227844,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227845,"byte_end":227873,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227874,"byte_end":227900,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227901,"byte_end":227935,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":227936,"byte_end":228001,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228002,"byte_end":228057,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228058,"byte_end":228115,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228116,"byte_end":228168,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228169,"byte_end":228176,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228177,"byte_end":228182,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228183,"byte_end":228256,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228257,"byte_end":228277,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228278,"byte_end":228316,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228317,"byte_end":228341,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228342,"byte_end":228345,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228346,"byte_end":228382,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228383,"byte_end":228407,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228408,"byte_end":228413,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228414,"byte_end":228417,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228418,"byte_end":228497,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228498,"byte_end":228571,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228572,"byte_end":228606,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228607,"byte_end":228671,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228672,"byte_end":228751,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228752,"byte_end":228796,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228797,"byte_end":228842,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228843,"byte_end":228871,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228872,"byte_end":228940,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":228941,"byte_end":229003,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229004,"byte_end":229036,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229037,"byte_end":229068,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229069,"byte_end":229100,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229101,"byte_end":229115,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229116,"byte_end":229179,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229180,"byte_end":229204,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229205,"byte_end":229221,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229222,"byte_end":229288,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229289,"byte_end":229351,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229352,"byte_end":229384,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229385,"byte_end":229416,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229417,"byte_end":229448,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229449,"byte_end":229463,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229464,"byte_end":229528,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229529,"byte_end":229553,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229554,"byte_end":229563,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229564,"byte_end":229569,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229570,"byte_end":229573,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229574,"byte_end":229635,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229636,"byte_end":229687,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229688,"byte_end":229747,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229748,"byte_end":229825,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229826,"byte_end":229900,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229901,"byte_end":229962,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":229963,"byte_end":230021,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230022,"byte_end":230081,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230082,"byte_end":230146,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230147,"byte_end":230154,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230155,"byte_end":230162,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230163,"byte_end":230166,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5323},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230516,"byte_end":230521,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5326},{"krate":0,"index":5327}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230315,"byte_end":230396,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230397,"byte_end":230452,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230453,"byte_end":230456,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230457,"byte_end":230487,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232199,"byte_end":232203,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5334},{"krate":0,"index":5335}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":231803,"byte_end":231871,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":231872,"byte_end":231954,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":231955,"byte_end":231958,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":231959,"byte_end":232021,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232022,"byte_end":232089,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232090,"byte_end":232163,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234227,"byte_end":234230,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":5346}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":233853,"byte_end":233933,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":233934,"byte_end":233937,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":233938,"byte_end":234012,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234013,"byte_end":234016,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234017,"byte_end":234070,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234071,"byte_end":234124,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234125,"byte_end":234198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240216,"byte_end":240223,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":239823,"byte_end":239907,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":239908,"byte_end":239911,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":239912,"byte_end":239991,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":239992,"byte_end":239995,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":239996,"byte_end":240059,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240060,"byte_end":240113,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240114,"byte_end":240187,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248166,"byte_end":248173,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":247773,"byte_end":247857,"line_start":333,"line_end":333,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":247858,"byte_end":247861,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":247862,"byte_end":247941,"line_start":335,"line_end":335,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":247942,"byte_end":247945,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":247946,"byte_end":248009,"line_start":337,"line_end":337,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248010,"byte_end":248063,"line_start":338,"line_end":338,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248064,"byte_end":248137,"line_start":339,"line_end":339,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254366,"byte_end":254369,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5379}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":253955,"byte_end":254027,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254028,"byte_end":254091,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254092,"byte_end":254123,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254124,"byte_end":254127,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254128,"byte_end":254188,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254189,"byte_end":254256,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254257,"byte_end":254330,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5388},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258355,"byte_end":258360,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":5391}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":257860,"byte_end":257945,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":257946,"byte_end":257972,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":257973,"byte_end":257976,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":257977,"byte_end":258060,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258061,"byte_end":258108,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258109,"byte_end":258112,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258113,"byte_end":258177,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258178,"byte_end":258245,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258246,"byte_end":258319,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5400},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260107,"byte_end":260117,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":5403},{"krate":0,"index":5404}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259647,"byte_end":259717,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259718,"byte_end":259787,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259788,"byte_end":259850,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259851,"byte_end":259854,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259855,"byte_end":259929,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259930,"byte_end":259997,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":259998,"byte_end":260071,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269073,"byte_end":269091,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":5416}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268529,"byte_end":268592,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268593,"byte_end":268661,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268662,"byte_end":268691,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268692,"byte_end":268695,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268696,"byte_end":268765,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268766,"byte_end":268798,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268799,"byte_end":268802,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268803,"byte_end":268895,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268896,"byte_end":268963,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":268964,"byte_end":269037,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271309,"byte_end":271320,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":270877,"byte_end":270953,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":270954,"byte_end":271018,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271019,"byte_end":271071,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271072,"byte_end":271075,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271076,"byte_end":271145,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271146,"byte_end":271199,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271200,"byte_end":271273,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281538,"byte_end":281544,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":5438},{"krate":0,"index":5439}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281127,"byte_end":281186,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281187,"byte_end":281235,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281236,"byte_end":281239,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281240,"byte_end":281317,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281318,"byte_end":281321,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281322,"byte_end":281381,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281382,"byte_end":281435,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281436,"byte_end":281509,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290452,"byte_end":290455,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":5459}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290062,"byte_end":290139,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290140,"byte_end":290209,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290210,"byte_end":290213,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290214,"byte_end":290274,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290275,"byte_end":290342,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290343,"byte_end":290416,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293281,"byte_end":293287,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":5468},{"krate":0,"index":5469}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":292867,"byte_end":292944,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":292945,"byte_end":293030,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293031,"byte_end":293034,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`min_len()`]: trait.IndexedParallelIterator.html#method.min_len","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293035,"byte_end":293103,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293104,"byte_end":293171,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293172,"byte_end":293245,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296365,"byte_end":296371,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":295951,"byte_end":296028,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296029,"byte_end":296114,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296115,"byte_end":296118,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`max_len()`]: trait.IndexedParallelIterator.html#method.max_len","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296119,"byte_end":296187,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296188,"byte_end":296255,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296256,"byte_end":296329,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5486},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299479,"byte_end":299485,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":5488}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299090,"byte_end":299169,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299170,"byte_end":299173,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299174,"byte_end":299251,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299252,"byte_end":299255,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299256,"byte_end":299315,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299316,"byte_end":299369,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299370,"byte_end":299443,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308756,"byte_end":308763,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308343,"byte_end":308418,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308419,"byte_end":308450,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308451,"byte_end":308454,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308455,"byte_end":308533,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308534,"byte_end":308537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308538,"byte_end":308599,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308600,"byte_end":308653,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308654,"byte_end":308727,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314928,"byte_end":314937,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":5506}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314478,"byte_end":314550,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314551,"byte_end":314606,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314607,"byte_end":314610,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314611,"byte_end":314692,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314693,"byte_end":314696,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314697,"byte_end":314764,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314765,"byte_end":314818,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":314819,"byte_end":314892,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5520},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322504,"byte_end":322513,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":5522}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322057,"byte_end":322135,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322136,"byte_end":322182,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322183,"byte_end":322186,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322187,"byte_end":322268,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322269,"byte_end":322272,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322273,"byte_end":322340,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322341,"byte_end":322394,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322395,"byte_end":322468,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5529},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335712,"byte_end":335718,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5531}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335609,"byte_end":335676,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336270,"byte_end":336276,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335757,"byte_end":335821,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335822,"byte_end":335888,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335889,"byte_end":335954,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335955,"byte_end":335997,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":335998,"byte_end":336054,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336055,"byte_end":336058,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336059,"byte_end":336073,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336074,"byte_end":336077,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336078,"byte_end":336085,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336086,"byte_end":336112,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336113,"byte_end":336141,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336142,"byte_end":336202,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336203,"byte_end":336254,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336255,"byte_end":336262,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336673,"byte_end":336677,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Take only `n` repeats of the element, similar to the general","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336399,"byte_end":336463,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336468,"byte_end":336531,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336536,"byte_end":336539,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336544,"byte_end":336613,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336618,"byte_end":336661,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336937,"byte_end":336940,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterate tuples repeating the element with items from another","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336754,"byte_end":336818,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ iterator, similar to the general","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336823,"byte_end":336859,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336864,"byte_end":336925,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338209,"byte_end":338216,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338104,"byte_end":338173,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338581,"byte_end":338588,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338273,"byte_end":338339,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338340,"byte_end":338360,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338361,"byte_end":338364,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338365,"byte_end":338379,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338380,"byte_end":338383,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338384,"byte_end":338391,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338392,"byte_end":338418,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338419,"byte_end":338448,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338449,"byte_end":338513,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338514,"byte_end":338565,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338566,"byte_end":338573,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341425,"byte_end":341429,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341364,"byte_end":341415,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341504,"byte_end":341509,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341442,"byte_end":341494,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353671,"byte_end":353676,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353253,"byte_end":353307,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353308,"byte_end":353311,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353312,"byte_end":353389,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353390,"byte_end":353432,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353433,"byte_end":353436,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353437,"byte_end":353451,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353452,"byte_end":353455,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353456,"byte_end":353463,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353464,"byte_end":353490,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353491,"byte_end":353518,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353519,"byte_end":353522,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353523,"byte_end":353561,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353562,"byte_end":353585,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353586,"byte_end":353615,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353616,"byte_end":353619,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353620,"byte_end":353655,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353656,"byte_end":353663,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353829,"byte_end":353834,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3464}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353752,"byte_end":353817,"line_start":31,"line_end":31,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356002,"byte_end":356006,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355360,"byte_end":355430,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355431,"byte_end":355434,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355435,"byte_end":355513,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355514,"byte_end":355593,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355594,"byte_end":355641,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355642,"byte_end":355645,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355646,"byte_end":355660,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355661,"byte_end":355664,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355665,"byte_end":355672,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355673,"byte_end":355699,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355700,"byte_end":355726,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355727,"byte_end":355730,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355731,"byte_end":355769,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355770,"byte_end":355794,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355795,"byte_end":355824,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355825,"byte_end":355828,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355829,"byte_end":355872,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355873,"byte_end":355930,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355931,"byte_end":355986,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":355987,"byte_end":355994,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5548},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356158,"byte_end":356162,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":5550}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356059,"byte_end":356122,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28783,"byte_end":28803,"line_start":184,"line_end":184,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28335,"byte_end":28414,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28415,"byte_end":28418,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28419,"byte_end":28496,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28497,"byte_end":28573,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28574,"byte_end":28622,"line_start":180,"line_end":180,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28623,"byte_end":28626,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28627,"byte_end":28680,"line_start":182,"line_end":182,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28681,"byte_end":28772,"line_start":183,"line_end":183,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28872,"byte_end":28876,"line_start":186,"line_end":186,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28810,"byte_end":28862,"line_start":185,"line_end":185,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28991,"byte_end":28995,"line_start":189,"line_end":189,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":28920,"byte_end":28981,"line_start":188,"line_end":188,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29646,"byte_end":29659,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29008,"byte_end":29053,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29058,"byte_end":29061,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29066,"byte_end":29080,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29085,"byte_end":29088,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29093,"byte_end":29100,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29105,"byte_end":29131,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29136,"byte_end":29139,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29144,"byte_end":29182,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29187,"byte_end":29215,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29220,"byte_end":29261,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29266,"byte_end":29273,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29278,"byte_end":29281,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29286,"byte_end":29362,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29367,"byte_end":29370,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29375,"byte_end":29382,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29387,"byte_end":29413,"line_start":206,"line_end":206,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29418,"byte_end":29421,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29426,"byte_end":29490,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29495,"byte_end":29555,"line_start":209,"line_end":209,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29560,"byte_end":29567,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29572,"byte_end":29575,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29580,"byte_end":29638,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30248,"byte_end":30271,"line_start":229,"line_end":229,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29684,"byte_end":29744,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29745,"byte_end":29811,"line_start":217,"line_end":217,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29812,"byte_end":29815,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29816,"byte_end":29869,"line_start":219,"line_end":219,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29870,"byte_end":29905,"line_start":220,"line_end":220,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29906,"byte_end":29909,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29910,"byte_end":29953,"line_start":222,"line_end":222,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":29954,"byte_end":30018,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30019,"byte_end":30092,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30093,"byte_end":30117,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30118,"byte_end":30121,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30122,"byte_end":30175,"line_start":227,"line_end":227,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30176,"byte_end":30237,"line_start":228,"line_end":228,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30355,"byte_end":30359,"line_start":231,"line_end":231,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30285,"byte_end":30345,"line_start":230,"line_end":230,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30535,"byte_end":30539,"line_start":235,"line_end":235,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30403,"byte_end":30464,"line_start":233,"line_end":233,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30469,"byte_end":30525,"line_start":234,"line_end":234,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31029,"byte_end":31037,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":3524},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30560,"byte_end":30605,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30610,"byte_end":30613,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30618,"byte_end":30632,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30637,"byte_end":30640,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30645,"byte_end":30652,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30657,"byte_end":30683,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30688,"byte_end":30691,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30696,"byte_end":30735,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30740,"byte_end":30796,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30801,"byte_end":30804,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30809,"byte_end":30871,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30876,"byte_end":30919,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30924,"byte_end":30956,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":30961,"byte_end":31009,"line_start":250,"line_end":250,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31014,"byte_end":31021,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31957,"byte_end":31983,"line_start":280,"line_end":280,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31381,"byte_end":31444,"line_start":267,"line_end":267,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31445,"byte_end":31512,"line_start":268,"line_end":268,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31513,"byte_end":31516,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31517,"byte_end":31574,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31575,"byte_end":31610,"line_start":271,"line_end":271,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31611,"byte_end":31614,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31615,"byte_end":31658,"line_start":273,"line_end":273,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31659,"byte_end":31727,"line_start":274,"line_end":274,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31728,"byte_end":31801,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31802,"byte_end":31826,"line_start":276,"line_end":276,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31827,"byte_end":31830,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31831,"byte_end":31884,"line_start":278,"line_end":278,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31885,"byte_end":31946,"line_start":279,"line_end":279,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32053,"byte_end":32057,"line_start":282,"line_end":282,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31997,"byte_end":32043,"line_start":281,"line_end":281,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32209,"byte_end":32213,"line_start":286,"line_end":286,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32101,"byte_end":32165,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32170,"byte_end":32199,"line_start":285,"line_end":285,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32527,"byte_end":32539,"line_start":299,"line_end":299,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32234,"byte_end":32280,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32285,"byte_end":32288,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32293,"byte_end":32307,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32312,"byte_end":32315,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32320,"byte_end":32327,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32332,"byte_end":32358,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32363,"byte_end":32366,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32371,"byte_end":32403,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32408,"byte_end":32467,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32472,"byte_end":32507,"line_start":297,"line_end":297,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32512,"byte_end":32519,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33516,"byte_end":33532,"line_start":328,"line_end":328,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3554},{"krate":0,"index":3559},{"krate":0,"index":3564},{"krate":0,"index":3570},{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3582},{"krate":0,"index":3586},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3616},{"krate":0,"index":3620},{"krate":0,"index":3623},{"krate":0,"index":3627},{"krate":0,"index":3630},{"krate":0,"index":3635},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3661},{"krate":0,"index":3663},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3677},{"krate":0,"index":3681},{"krate":0,"index":3683},{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":3699},{"krate":0,"index":3703},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3712}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32910,"byte_end":32962,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32963,"byte_end":32966,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32967,"byte_end":33034,"line_start":316,"line_end":316,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33035,"byte_end":33089,"line_start":317,"line_end":317,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33090,"byte_end":33151,"line_start":318,"line_end":318,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33152,"byte_end":33217,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33218,"byte_end":33288,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33289,"byte_end":33313,"line_start":321,"line_end":321,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33314,"byte_end":33317,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33318,"byte_end":33384,"line_start":323,"line_end":323,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33385,"byte_end":33410,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33411,"byte_end":33414,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33415,"byte_end":33437,"line_start":326,"line_end":326,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33438,"byte_end":33505,"line_start":327,"line_end":327,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33798,"byte_end":33802,"line_start":334,"line_end":334,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33553,"byte_end":33611,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33616,"byte_end":33688,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33693,"byte_end":33741,"line_start":331,"line_end":331,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33746,"byte_end":33749,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33754,"byte_end":33788,"line_start":333,"line_end":333,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34058,"byte_end":34066,"line_start":345,"line_end":345,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33815,"byte_end":33884,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33889,"byte_end":33892,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33897,"byte_end":33911,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33916,"byte_end":33919,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33924,"byte_end":33931,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33936,"byte_end":33962,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33967,"byte_end":33970,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33975,"byte_end":34038,"line_start":343,"line_end":343,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34043,"byte_end":34050,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34901,"byte_end":34914,"line_start":375,"line_end":375,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34192,"byte_end":34262,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34267,"byte_end":34297,"line_start":353,"line_end":353,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34302,"byte_end":34305,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34310,"byte_end":34378,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34383,"byte_end":34454,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34459,"byte_end":34476,"line_start":357,"line_end":357,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34481,"byte_end":34484,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34489,"byte_end":34503,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34508,"byte_end":34511,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34516,"byte_end":34523,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34528,"byte_end":34561,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34566,"byte_end":34592,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34597,"byte_end":34600,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34605,"byte_end":34644,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34649,"byte_end":34652,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34657,"byte_end":34733,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34738,"byte_end":34741,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34746,"byte_end":34798,"line_start":369,"line_end":369,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34803,"byte_end":34806,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34811,"byte_end":34826,"line_start":371,"line_end":371,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34831,"byte_end":34834,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34839,"byte_end":34881,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":34886,"byte_end":34893,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35953,"byte_end":35966,"line_start":412,"line_end":412,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35097,"byte_end":35171,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35176,"byte_end":35206,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35211,"byte_end":35214,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35219,"byte_end":35290,"line_start":386,"line_end":386,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35295,"byte_end":35361,"line_start":387,"line_end":387,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35366,"byte_end":35410,"line_start":388,"line_end":388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35415,"byte_end":35418,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35423,"byte_end":35437,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35442,"byte_end":35445,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35450,"byte_end":35457,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35462,"byte_end":35484,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35489,"byte_end":35512,"line_start":394,"line_end":394,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35517,"byte_end":35520,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35525,"byte_end":35543,"line_start":396,"line_end":396,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35548,"byte_end":35574,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35579,"byte_end":35582,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35587,"byte_end":35624,"line_start":399,"line_end":399,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35629,"byte_end":35632,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35637,"byte_end":35663,"line_start":401,"line_end":401,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35668,"byte_end":35691,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35696,"byte_end":35730,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35735,"byte_end":35776,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35781,"byte_end":35791,"line_start":405,"line_end":405,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35796,"byte_end":35799,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35804,"byte_end":35857,"line_start":407,"line_end":407,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35862,"byte_end":35886,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35891,"byte_end":35923,"line_start":409,"line_end":409,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35928,"byte_end":35933,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":35938,"byte_end":35945,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37077,"byte_end":37089,"line_start":440,"line_end":440,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Ok = ()> + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36172,"byte_end":36252,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36257,"byte_end":36260,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36265,"byte_end":36340,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36345,"byte_end":36413,"line_start":423,"line_end":423,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36418,"byte_end":36494,"line_start":424,"line_end":424,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36499,"byte_end":36572,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36577,"byte_end":36653,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36658,"byte_end":36661,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36666,"byte_end":36680,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36685,"byte_end":36688,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36693,"byte_end":36700,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36705,"byte_end":36731,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36736,"byte_end":36767,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36772,"byte_end":36775,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36780,"byte_end":36850,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36855,"byte_end":36910,"line_start":435,"line_end":435,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36915,"byte_end":36943,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":36948,"byte_end":37008,"line_start":437,"line_end":437,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37013,"byte_end":37057,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37062,"byte_end":37069,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38121,"byte_end":38138,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Ok =\n()> + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37286,"byte_end":37355,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37360,"byte_end":37402,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37407,"byte_end":37410,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37415,"byte_end":37484,"line_start":451,"line_end":451,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37489,"byte_end":37533,"line_start":452,"line_end":452,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37538,"byte_end":37541,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37546,"byte_end":37592,"line_start":454,"line_end":454,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37597,"byte_end":37641,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37646,"byte_end":37649,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37654,"byte_end":37668,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37673,"byte_end":37676,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37681,"byte_end":37688,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37693,"byte_end":37726,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37731,"byte_end":37757,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37762,"byte_end":37765,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37770,"byte_end":37809,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37814,"byte_end":37817,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37822,"byte_end":37848,"line_start":465,"line_end":465,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37853,"byte_end":37905,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37910,"byte_end":37953,"line_start":467,"line_end":467,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37958,"byte_end":37961,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":37966,"byte_end":38018,"line_start":469,"line_end":469,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38023,"byte_end":38026,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38031,"byte_end":38046,"line_start":471,"line_end":471,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38051,"byte_end":38054,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38059,"byte_end":38101,"line_start":473,"line_end":473,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38106,"byte_end":38113,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39361,"byte_end":39378,"line_start":517,"line_end":517,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Ok = ()> + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38404,"byte_end":38477,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38482,"byte_end":38524,"line_start":486,"line_end":486,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38529,"byte_end":38532,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38537,"byte_end":38606,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38611,"byte_end":38655,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38660,"byte_end":38663,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38668,"byte_end":38714,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38719,"byte_end":38763,"line_start":492,"line_end":492,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38768,"byte_end":38771,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38776,"byte_end":38790,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38795,"byte_end":38798,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38803,"byte_end":38810,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38815,"byte_end":38837,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38842,"byte_end":38865,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38870,"byte_end":38873,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38878,"byte_end":38896,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38901,"byte_end":38927,"line_start":501,"line_end":501,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38932,"byte_end":38935,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38940,"byte_end":38977,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38982,"byte_end":38985,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":38990,"byte_end":39016,"line_start":505,"line_end":505,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39021,"byte_end":39048,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39053,"byte_end":39087,"line_start":507,"line_end":507,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39092,"byte_end":39137,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39142,"byte_end":39151,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39156,"byte_end":39199,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39204,"byte_end":39207,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39212,"byte_end":39265,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39270,"byte_end":39294,"line_start":513,"line_end":513,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39299,"byte_end":39331,"line_start":514,"line_end":514,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39336,"byte_end":39341,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39346,"byte_end":39353,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39924,"byte_end":39929,"line_start":538,"line_end":538,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39667,"byte_end":39724,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39729,"byte_end":39732,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39737,"byte_end":39751,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39756,"byte_end":39759,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39764,"byte_end":39771,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39776,"byte_end":39802,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39807,"byte_end":39810,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39815,"byte_end":39864,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39869,"byte_end":39872,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39877,"byte_end":39904,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39909,"byte_end":39916,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40380,"byte_end":40383,"line_start":556,"line_end":556,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":39988,"byte_end":40055,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40060,"byte_end":40090,"line_start":543,"line_end":543,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40095,"byte_end":40098,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40103,"byte_end":40117,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40122,"byte_end":40125,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40130,"byte_end":40137,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40142,"byte_end":40168,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40173,"byte_end":40176,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40181,"byte_end":40242,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40247,"byte_end":40250,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40255,"byte_end":40300,"line_start":552,"line_end":552,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40305,"byte_end":40308,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40313,"byte_end":40360,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40365,"byte_end":40372,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41726,"byte_end":41734,"line_start":593,"line_end":593,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40544,"byte_end":40613,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40618,"byte_end":40674,"line_start":565,"line_end":565,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40679,"byte_end":40682,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40687,"byte_end":40755,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40760,"byte_end":40831,"line_start":568,"line_end":568,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40836,"byte_end":40853,"line_start":569,"line_end":569,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40858,"byte_end":40861,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40866,"byte_end":40880,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40885,"byte_end":40888,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40893,"byte_end":40900,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40905,"byte_end":40938,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40943,"byte_end":40969,"line_start":575,"line_end":575,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40974,"byte_end":40977,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":40982,"byte_end":41021,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41026,"byte_end":41029,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41034,"byte_end":41060,"line_start":579,"line_end":579,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41065,"byte_end":41134,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41139,"byte_end":41185,"line_start":581,"line_end":581,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41190,"byte_end":41279,"line_start":582,"line_end":582,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41284,"byte_end":41348,"line_start":583,"line_end":583,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41353,"byte_end":41375,"line_start":584,"line_end":584,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41380,"byte_end":41475,"line_start":585,"line_end":585,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41480,"byte_end":41483,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41488,"byte_end":41579,"line_start":587,"line_end":587,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41584,"byte_end":41654,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41659,"byte_end":41672,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41677,"byte_end":41680,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41685,"byte_end":41706,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41711,"byte_end":41718,"line_start":592,"line_end":592,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42980,"byte_end":42988,"line_start":633,"line_end":633,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":41957,"byte_end":42030,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42035,"byte_end":42091,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42096,"byte_end":42099,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42104,"byte_end":42175,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42180,"byte_end":42246,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42251,"byte_end":42295,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42300,"byte_end":42303,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42308,"byte_end":42322,"line_start":609,"line_end":609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42327,"byte_end":42330,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42335,"byte_end":42342,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42347,"byte_end":42369,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42374,"byte_end":42397,"line_start":613,"line_end":613,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42402,"byte_end":42405,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42410,"byte_end":42428,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42433,"byte_end":42459,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42464,"byte_end":42467,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42472,"byte_end":42509,"line_start":618,"line_end":618,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42514,"byte_end":42538,"line_start":619,"line_end":619,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42543,"byte_end":42561,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42566,"byte_end":42629,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42634,"byte_end":42694,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42699,"byte_end":42717,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42722,"byte_end":42742,"line_start":624,"line_end":624,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42747,"byte_end":42764,"line_start":625,"line_end":625,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42769,"byte_end":42783,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42788,"byte_end":42808,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42813,"byte_end":42816,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42821,"byte_end":42874,"line_start":629,"line_end":629,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42879,"byte_end":42917,"line_start":630,"line_end":630,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42922,"byte_end":42960,"line_start":631,"line_end":631,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":42965,"byte_end":42972,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43809,"byte_end":43815,"line_start":660,"line_end":660,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`.","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43237,"byte_end":43307,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43312,"byte_end":43377,"line_start":643,"line_end":643,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43382,"byte_end":43385,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43390,"byte_end":43404,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43409,"byte_end":43412,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43417,"byte_end":43424,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43429,"byte_end":43455,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43460,"byte_end":43463,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43468,"byte_end":43490,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43495,"byte_end":43498,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43503,"byte_end":43562,"line_start":652,"line_end":652,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43567,"byte_end":43570,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43575,"byte_end":43630,"line_start":654,"line_end":654,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43635,"byte_end":43694,"line_start":655,"line_end":655,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43699,"byte_end":43702,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43707,"byte_end":43747,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43752,"byte_end":43789,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43794,"byte_end":43801,"line_start":659,"line_end":659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45010,"byte_end":45017,"line_start":697,"line_end":697,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":43974,"byte_end":44044,"line_start":668,"line_end":668,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44049,"byte_end":44122,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44127,"byte_end":44201,"line_start":670,"line_end":670,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44206,"byte_end":44209,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44214,"byte_end":44228,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44233,"byte_end":44236,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44241,"byte_end":44248,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44253,"byte_end":44279,"line_start":675,"line_end":675,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44284,"byte_end":44287,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44292,"byte_end":44317,"line_start":677,"line_end":677,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44322,"byte_end":44325,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44330,"byte_end":44371,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44376,"byte_end":44402,"line_start":680,"line_end":680,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44407,"byte_end":44432,"line_start":681,"line_end":681,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44437,"byte_end":44477,"line_start":682,"line_end":682,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44482,"byte_end":44530,"line_start":683,"line_end":683,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44535,"byte_end":44538,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44543,"byte_end":44567,"line_start":685,"line_end":685,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44572,"byte_end":44575,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44580,"byte_end":44649,"line_start":687,"line_end":687,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44654,"byte_end":44680,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44685,"byte_end":44710,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44715,"byte_end":44779,"line_start":690,"line_end":690,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44784,"byte_end":44824,"line_start":691,"line_end":691,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44829,"byte_end":44900,"line_start":692,"line_end":692,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44905,"byte_end":44953,"line_start":693,"line_end":693,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44958,"byte_end":44961,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44966,"byte_end":44990,"line_start":695,"line_end":695,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":44995,"byte_end":45002,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45526,"byte_end":45532,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45174,"byte_end":45232,"line_start":704,"line_end":704,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45237,"byte_end":45240,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45245,"byte_end":45259,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45264,"byte_end":45267,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45272,"byte_end":45279,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45284,"byte_end":45310,"line_start":709,"line_end":709,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45315,"byte_end":45318,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45323,"byte_end":45388,"line_start":711,"line_end":711,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45393,"byte_end":45396,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45401,"byte_end":45446,"line_start":713,"line_end":713,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45451,"byte_end":45454,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45459,"byte_end":45506,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45511,"byte_end":45518,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46127,"byte_end":46133,"line_start":738,"line_end":738,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45685,"byte_end":45755,"line_start":724,"line_end":724,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45760,"byte_end":45818,"line_start":725,"line_end":725,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45823,"byte_end":45826,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45831,"byte_end":45845,"line_start":727,"line_end":727,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45850,"byte_end":45853,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45858,"byte_end":45865,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45870,"byte_end":45896,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45901,"byte_end":45904,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45909,"byte_end":45979,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45984,"byte_end":45987,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":45992,"byte_end":46042,"line_start":734,"line_end":734,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46047,"byte_end":46050,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46055,"byte_end":46107,"line_start":736,"line_end":736,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46112,"byte_end":46119,"line_start":737,"line_end":737,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46927,"byte_end":46937,"line_start":763,"line_end":763,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46290,"byte_end":46363,"line_start":745,"line_end":745,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46368,"byte_end":46437,"line_start":746,"line_end":746,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46442,"byte_end":46445,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46450,"byte_end":46464,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46469,"byte_end":46472,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46477,"byte_end":46484,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46489,"byte_end":46515,"line_start":751,"line_end":751,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46520,"byte_end":46523,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46528,"byte_end":46574,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46579,"byte_end":46624,"line_start":754,"line_end":754,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46629,"byte_end":46690,"line_start":755,"line_end":755,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46695,"byte_end":46740,"line_start":756,"line_end":756,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46745,"byte_end":46776,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46781,"byte_end":46784,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46789,"byte_end":46839,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46844,"byte_end":46847,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46852,"byte_end":46907,"line_start":761,"line_end":761,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":46912,"byte_end":46919,"line_start":762,"line_end":762,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47621,"byte_end":47629,"line_start":787,"line_end":787,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested iterators,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47124,"byte_end":47199,"line_start":771,"line_end":771,"column_start":5,"column_end":80}},{"value":"/ producing a new iterator that flattens these back into one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47204,"byte_end":47267,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47272,"byte_end":47275,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47280,"byte_end":47294,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47299,"byte_end":47302,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47307,"byte_end":47314,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47319,"byte_end":47345,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47350,"byte_end":47353,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47358,"byte_end":47403,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47408,"byte_end":47411,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47416,"byte_end":47482,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47487,"byte_end":47490,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47495,"byte_end":47536,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47541,"byte_end":47544,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47549,"byte_end":47601,"line_start":785,"line_end":785,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47606,"byte_end":47613,"line_start":786,"line_end":786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48163,"byte_end":48170,"line_start":807,"line_end":807,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[{"value":"/ An adaptor that flattens iterable `Item`s into one large iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47817,"byte_end":47886,"line_start":795,"line_end":795,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47891,"byte_end":47894,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47899,"byte_end":47913,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47918,"byte_end":47921,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47926,"byte_end":47933,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47938,"byte_end":47964,"line_start":800,"line_end":800,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47969,"byte_end":47972,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":47977,"byte_end":48031,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48036,"byte_end":48094,"line_start":803,"line_end":803,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48099,"byte_end":48102,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48107,"byte_end":48143,"line_start":805,"line_end":805,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48148,"byte_end":48155,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49855,"byte_end":49861,"line_start":844,"line_end":844,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48290,"byte_end":48353,"line_start":814,"line_end":814,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48358,"byte_end":48422,"line_start":815,"line_end":815,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48427,"byte_end":48490,"line_start":816,"line_end":816,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48495,"byte_end":48561,"line_start":817,"line_end":817,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48566,"byte_end":48632,"line_start":818,"line_end":818,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48637,"byte_end":48700,"line_start":819,"line_end":819,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48705,"byte_end":48758,"line_start":820,"line_end":820,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48763,"byte_end":48766,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48771,"byte_end":48785,"line_start":822,"line_end":822,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48790,"byte_end":48793,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48798,"byte_end":48805,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48810,"byte_end":48875,"line_start":825,"line_end":825,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48880,"byte_end":48954,"line_start":826,"line_end":826,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":48959,"byte_end":49020,"line_start":827,"line_end":827,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49025,"byte_end":49051,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49056,"byte_end":49104,"line_start":829,"line_end":829,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49109,"byte_end":49172,"line_start":830,"line_end":830,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49177,"byte_end":49239,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49244,"byte_end":49316,"line_start":832,"line_end":832,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49321,"byte_end":49375,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49380,"byte_end":49434,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49439,"byte_end":49446,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49451,"byte_end":49454,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49459,"byte_end":49523,"line_start":837,"line_end":837,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49528,"byte_end":49592,"line_start":838,"line_end":838,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49597,"byte_end":49663,"line_start":839,"line_end":839,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49668,"byte_end":49732,"line_start":840,"line_end":840,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49737,"byte_end":49765,"line_start":841,"line_end":841,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49770,"byte_end":49773,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":49778,"byte_end":49847,"line_start":843,"line_end":843,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51202,"byte_end":51213,"line_start":878,"line_end":878,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50096,"byte_end":50159,"line_start":852,"line_end":852,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50164,"byte_end":50224,"line_start":853,"line_end":853,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50229,"byte_end":50252,"line_start":854,"line_end":854,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50257,"byte_end":50260,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50265,"byte_end":50321,"line_start":856,"line_end":856,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50326,"byte_end":50392,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50397,"byte_end":50430,"line_start":858,"line_end":858,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50435,"byte_end":50438,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50443,"byte_end":50457,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50462,"byte_end":50465,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50470,"byte_end":50477,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50482,"byte_end":50508,"line_start":863,"line_end":863,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50513,"byte_end":50561,"line_start":864,"line_end":864,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50566,"byte_end":50629,"line_start":865,"line_end":865,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50634,"byte_end":50696,"line_start":866,"line_end":866,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50701,"byte_end":50759,"line_start":867,"line_end":867,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50764,"byte_end":50789,"line_start":868,"line_end":868,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50794,"byte_end":50848,"line_start":869,"line_end":869,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50853,"byte_end":50860,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50865,"byte_end":50868,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50873,"byte_end":50937,"line_start":872,"line_end":872,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":50942,"byte_end":51006,"line_start":873,"line_end":873,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51011,"byte_end":51077,"line_start":874,"line_end":874,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51082,"byte_end":51112,"line_start":875,"line_end":875,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51117,"byte_end":51120,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51125,"byte_end":51194,"line_start":877,"line_end":877,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53183,"byte_end":53193,"line_start":930,"line_end":930,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51794,"byte_end":51868,"line_start":899,"line_end":899,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51873,"byte_end":51941,"line_start":900,"line_end":900,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51946,"byte_end":51949,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51954,"byte_end":51986,"line_start":902,"line_end":902,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51991,"byte_end":51994,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":51999,"byte_end":52073,"line_start":904,"line_end":904,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52078,"byte_end":52153,"line_start":905,"line_end":905,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52158,"byte_end":52234,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52239,"byte_end":52305,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52310,"byte_end":52385,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52390,"byte_end":52427,"line_start":909,"line_end":909,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52432,"byte_end":52435,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52440,"byte_end":52454,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52459,"byte_end":52462,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52467,"byte_end":52474,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52479,"byte_end":52505,"line_start":914,"line_end":914,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52510,"byte_end":52513,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52518,"byte_end":52582,"line_start":916,"line_end":916,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52587,"byte_end":52668,"line_start":917,"line_end":917,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52673,"byte_end":52701,"line_start":918,"line_end":918,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52706,"byte_end":52776,"line_start":919,"line_end":919,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52781,"byte_end":52850,"line_start":920,"line_end":920,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52855,"byte_end":52860,"line_start":921,"line_end":921,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52865,"byte_end":52925,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52930,"byte_end":52933,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52938,"byte_end":52967,"line_start":924,"line_end":924,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":52972,"byte_end":53017,"line_start":925,"line_end":925,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53022,"byte_end":53025,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53030,"byte_end":53102,"line_start":927,"line_end":927,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53107,"byte_end":53163,"line_start":928,"line_end":928,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53168,"byte_end":53175,"line_start":929,"line_end":929,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54820,"byte_end":54835,"line_start":974,"line_end":974,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53445,"byte_end":53519,"line_start":939,"line_end":939,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53524,"byte_end":53527,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53532,"byte_end":53605,"line_start":941,"line_end":941,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53610,"byte_end":53674,"line_start":942,"line_end":942,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53679,"byte_end":53726,"line_start":943,"line_end":943,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53731,"byte_end":53734,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53739,"byte_end":53781,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53786,"byte_end":53826,"line_start":946,"line_end":946,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53831,"byte_end":53834,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53839,"byte_end":53902,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53907,"byte_end":53943,"line_start":949,"line_end":949,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":53948,"byte_end":54005,"line_start":950,"line_end":950,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54010,"byte_end":54068,"line_start":951,"line_end":951,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54073,"byte_end":54076,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54081,"byte_end":54134,"line_start":953,"line_end":953,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54139,"byte_end":54175,"line_start":954,"line_end":954,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54180,"byte_end":54245,"line_start":955,"line_end":955,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54250,"byte_end":54306,"line_start":956,"line_end":956,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54311,"byte_end":54314,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54319,"byte_end":54333,"line_start":958,"line_end":958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54338,"byte_end":54341,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54346,"byte_end":54353,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54358,"byte_end":54384,"line_start":961,"line_end":961,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54389,"byte_end":54392,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54397,"byte_end":54446,"line_start":963,"line_end":963,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54451,"byte_end":54454,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54459,"byte_end":54487,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54492,"byte_end":54517,"line_start":966,"line_end":966,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54522,"byte_end":54591,"line_start":967,"line_end":967,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54596,"byte_end":54629,"line_start":968,"line_end":968,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54634,"byte_end":54680,"line_start":969,"line_end":969,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54685,"byte_end":54695,"line_start":970,"line_end":970,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54700,"byte_end":54762,"line_start":971,"line_end":971,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54767,"byte_end":54800,"line_start":972,"line_end":972,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":54805,"byte_end":54812,"line_start":973,"line_end":973,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60613,"byte_end":60617,"line_start":1115,"line_end":1115,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55040,"byte_end":55103,"line_start":982,"line_end":982,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55108,"byte_end":55160,"line_start":983,"line_end":983,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55165,"byte_end":55228,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55233,"byte_end":55296,"line_start":985,"line_end":985,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55301,"byte_end":55366,"line_start":986,"line_end":986,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55371,"byte_end":55437,"line_start":987,"line_end":987,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55442,"byte_end":55504,"line_start":988,"line_end":988,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55509,"byte_end":55573,"line_start":989,"line_end":989,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55578,"byte_end":55642,"line_start":990,"line_end":990,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55647,"byte_end":55687,"line_start":991,"line_end":991,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55692,"byte_end":55695,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55700,"byte_end":55762,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55767,"byte_end":55837,"line_start":994,"line_end":994,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55842,"byte_end":55854,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55859,"byte_end":55862,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55867,"byte_end":55881,"line_start":997,"line_end":997,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55886,"byte_end":55903,"line_start":998,"line_end":998,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55908,"byte_end":55925,"line_start":999,"line_end":999,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55930,"byte_end":55947,"line_start":1000,"line_end":1000,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55952,"byte_end":55959,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55964,"byte_end":55967,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":55972,"byte_end":56007,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56012,"byte_end":56015,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56020,"byte_end":56034,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56039,"byte_end":56056,"line_start":1006,"line_end":1006,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56061,"byte_end":56078,"line_start":1007,"line_end":1007,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56083,"byte_end":56100,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56105,"byte_end":56112,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56117,"byte_end":56120,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56125,"byte_end":56188,"line_start":1011,"line_end":1011,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56193,"byte_end":56230,"line_start":1012,"line_end":1012,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56235,"byte_end":56238,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56243,"byte_end":56269,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56274,"byte_end":56277,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56282,"byte_end":56351,"line_start":1016,"line_end":1016,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56356,"byte_end":56422,"line_start":1017,"line_end":1017,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56427,"byte_end":56430,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56435,"byte_end":56498,"line_start":1019,"line_end":1019,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56503,"byte_end":56562,"line_start":1020,"line_end":1020,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56567,"byte_end":56633,"line_start":1021,"line_end":1021,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56638,"byte_end":56704,"line_start":1022,"line_end":1022,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56709,"byte_end":56773,"line_start":1023,"line_end":1023,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56778,"byte_end":56841,"line_start":1024,"line_end":1024,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56846,"byte_end":56911,"line_start":1025,"line_end":1025,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56916,"byte_end":56979,"line_start":1026,"line_end":1026,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":56984,"byte_end":57049,"line_start":1027,"line_end":1027,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57054,"byte_end":57120,"line_start":1028,"line_end":1028,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57125,"byte_end":57181,"line_start":1029,"line_end":1029,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57186,"byte_end":57189,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57194,"byte_end":57256,"line_start":1031,"line_end":1031,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57261,"byte_end":57323,"line_start":1032,"line_end":1032,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57328,"byte_end":57390,"line_start":1033,"line_end":1033,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57395,"byte_end":57461,"line_start":1034,"line_end":1034,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57466,"byte_end":57530,"line_start":1035,"line_end":1035,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57535,"byte_end":57599,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57604,"byte_end":57626,"line_start":1037,"line_end":1037,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57631,"byte_end":57634,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57639,"byte_end":57698,"line_start":1039,"line_end":1039,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57703,"byte_end":57769,"line_start":1040,"line_end":1040,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57774,"byte_end":57838,"line_start":1041,"line_end":1041,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57843,"byte_end":57902,"line_start":1042,"line_end":1042,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57907,"byte_end":57973,"line_start":1043,"line_end":1043,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":57978,"byte_end":58043,"line_start":1044,"line_end":1044,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58048,"byte_end":58110,"line_start":1045,"line_end":1045,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58115,"byte_end":58142,"line_start":1046,"line_end":1046,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58147,"byte_end":58150,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58155,"byte_end":58181,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58186,"byte_end":58189,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58194,"byte_end":58253,"line_start":1050,"line_end":1050,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58258,"byte_end":58322,"line_start":1051,"line_end":1051,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58327,"byte_end":58393,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58398,"byte_end":58440,"line_start":1053,"line_end":1053,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58445,"byte_end":58448,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58453,"byte_end":58460,"line_start":1055,"line_end":1055,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58465,"byte_end":58491,"line_start":1056,"line_end":1056,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58496,"byte_end":58499,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58504,"byte_end":58515,"line_start":1058,"line_end":1058,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58520,"byte_end":58553,"line_start":1059,"line_end":1059,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58558,"byte_end":58577,"line_start":1060,"line_end":1060,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58582,"byte_end":58623,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58628,"byte_end":58661,"line_start":1062,"line_end":1062,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58666,"byte_end":58732,"line_start":1063,"line_end":1063,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58737,"byte_end":58740,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58745,"byte_end":58772,"line_start":1065,"line_end":1065,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58777,"byte_end":58784,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58789,"byte_end":58792,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58797,"byte_end":58863,"line_start":1068,"line_end":1068,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58868,"byte_end":58932,"line_start":1069,"line_end":1069,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":58937,"byte_end":58997,"line_start":1070,"line_end":1070,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59002,"byte_end":59067,"line_start":1071,"line_end":1071,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59072,"byte_end":59092,"line_start":1072,"line_end":1072,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59097,"byte_end":59100,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59105,"byte_end":59112,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59117,"byte_end":59143,"line_start":1075,"line_end":1075,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59148,"byte_end":59151,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59156,"byte_end":59167,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59172,"byte_end":59205,"line_start":1078,"line_end":1078,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59210,"byte_end":59229,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59234,"byte_end":59265,"line_start":1080,"line_end":1080,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59270,"byte_end":59330,"line_start":1081,"line_end":1081,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59335,"byte_end":59368,"line_start":1082,"line_end":1082,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59373,"byte_end":59439,"line_start":1083,"line_end":1083,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59444,"byte_end":59447,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59452,"byte_end":59479,"line_start":1085,"line_end":1085,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59484,"byte_end":59491,"line_start":1086,"line_end":1086,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59496,"byte_end":59499,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59504,"byte_end":59567,"line_start":1088,"line_end":1088,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59572,"byte_end":59637,"line_start":1089,"line_end":1089,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59642,"byte_end":59706,"line_start":1090,"line_end":1090,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59711,"byte_end":59777,"line_start":1091,"line_end":1091,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59782,"byte_end":59846,"line_start":1092,"line_end":1092,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59851,"byte_end":59914,"line_start":1093,"line_end":1093,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59919,"byte_end":59930,"line_start":1094,"line_end":1094,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59935,"byte_end":59938,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":59943,"byte_end":60009,"line_start":1096,"line_end":1096,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60014,"byte_end":60046,"line_start":1097,"line_end":1097,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60051,"byte_end":60054,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60059,"byte_end":60103,"line_start":1099,"line_end":1099,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60108,"byte_end":60111,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60116,"byte_end":60181,"line_start":1101,"line_end":1101,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60186,"byte_end":60251,"line_start":1102,"line_end":1102,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60256,"byte_end":60282,"line_start":1103,"line_end":1103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60287,"byte_end":60290,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60295,"byte_end":60302,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60307,"byte_end":60333,"line_start":1106,"line_end":1106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60338,"byte_end":60341,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60346,"byte_end":60371,"line_start":1108,"line_end":1108,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60376,"byte_end":60411,"line_start":1109,"line_end":1109,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60416,"byte_end":60482,"line_start":1110,"line_end":1110,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60487,"byte_end":60520,"line_start":1111,"line_end":1111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60525,"byte_end":60528,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60533,"byte_end":60593,"line_start":1113,"line_end":1113,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60598,"byte_end":60605,"line_start":1114,"line_end":1114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61542,"byte_end":61551,"line_start":1143,"line_end":1143,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60854,"byte_end":60924,"line_start":1124,"line_end":1124,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60929,"byte_end":60987,"line_start":1125,"line_end":1125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":60992,"byte_end":60995,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61000,"byte_end":61072,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61077,"byte_end":61148,"line_start":1128,"line_end":1128,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61153,"byte_end":61182,"line_start":1129,"line_end":1129,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61187,"byte_end":61190,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61195,"byte_end":61209,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61214,"byte_end":61217,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61222,"byte_end":61229,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61234,"byte_end":61260,"line_start":1134,"line_end":1134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61265,"byte_end":61268,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61273,"byte_end":61298,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61303,"byte_end":61338,"line_start":1137,"line_end":1137,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61343,"byte_end":61411,"line_start":1138,"line_end":1138,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61416,"byte_end":61449,"line_start":1139,"line_end":1139,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61454,"byte_end":61457,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61462,"byte_end":61522,"line_start":1141,"line_end":1141,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61527,"byte_end":61534,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62683,"byte_end":62691,"line_start":1176,"line_end":1176,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Ok = T> + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61753,"byte_end":61790,"line_start":1151,"line_end":1151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61795,"byte_end":61798,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61803,"byte_end":61875,"line_start":1153,"line_end":1153,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61880,"byte_end":61946,"line_start":1154,"line_end":1154,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":61951,"byte_end":62026,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62031,"byte_end":62059,"line_start":1156,"line_end":1156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62064,"byte_end":62067,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62072,"byte_end":62132,"line_start":1158,"line_end":1158,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62137,"byte_end":62198,"line_start":1159,"line_end":1159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62203,"byte_end":62206,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62211,"byte_end":62239,"line_start":1161,"line_end":1161,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62244,"byte_end":62284,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62289,"byte_end":62292,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62297,"byte_end":62311,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62316,"byte_end":62319,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62324,"byte_end":62331,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62336,"byte_end":62362,"line_start":1167,"line_end":1167,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62367,"byte_end":62370,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62375,"byte_end":62400,"line_start":1169,"line_end":1169,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62405,"byte_end":62440,"line_start":1170,"line_end":1170,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62445,"byte_end":62524,"line_start":1171,"line_end":1171,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62529,"byte_end":62584,"line_start":1172,"line_end":1172,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62589,"byte_end":62592,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62597,"byte_end":62663,"line_start":1174,"line_end":1174,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62668,"byte_end":62675,"line_start":1175,"line_end":1175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63610,"byte_end":63623,"line_start":1203,"line_end":1203,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Ok = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":62954,"byte_end":63021,"line_start":1185,"line_end":1185,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63026,"byte_end":63029,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63034,"byte_end":63107,"line_start":1187,"line_end":1187,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63112,"byte_end":63144,"line_start":1188,"line_end":1188,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63149,"byte_end":63152,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63157,"byte_end":63195,"line_start":1190,"line_end":1190,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63200,"byte_end":63236,"line_start":1191,"line_end":1191,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63241,"byte_end":63244,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63249,"byte_end":63256,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63261,"byte_end":63287,"line_start":1194,"line_end":1194,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63292,"byte_end":63295,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63300,"byte_end":63325,"line_start":1196,"line_end":1196,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63330,"byte_end":63365,"line_start":1197,"line_end":1197,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63370,"byte_end":63451,"line_start":1198,"line_end":1198,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63456,"byte_end":63511,"line_start":1199,"line_end":1199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63516,"byte_end":63519,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63524,"byte_end":63590,"line_start":1201,"line_end":1201,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63595,"byte_end":63602,"line_start":1202,"line_end":1202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64648,"byte_end":64651,"line_start":1236,"line_end":1236,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63865,"byte_end":63903,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63908,"byte_end":63911,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63916,"byte_end":63982,"line_start":1214,"line_end":1214,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":63987,"byte_end":64052,"line_start":1215,"line_end":1215,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64057,"byte_end":64119,"line_start":1216,"line_end":1216,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64124,"byte_end":64148,"line_start":1217,"line_end":1217,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64153,"byte_end":64156,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64161,"byte_end":64230,"line_start":1219,"line_end":1219,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64235,"byte_end":64238,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64243,"byte_end":64305,"line_start":1221,"line_end":1221,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64310,"byte_end":64372,"line_start":1222,"line_end":1222,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64377,"byte_end":64427,"line_start":1223,"line_end":1223,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64432,"byte_end":64435,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64440,"byte_end":64454,"line_start":1225,"line_end":1225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64459,"byte_end":64462,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64467,"byte_end":64474,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64479,"byte_end":64505,"line_start":1228,"line_end":1228,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64510,"byte_end":64513,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64518,"byte_end":64540,"line_start":1230,"line_end":1230,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64545,"byte_end":64548,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64553,"byte_end":64591,"line_start":1232,"line_end":1232,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64596,"byte_end":64599,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64604,"byte_end":64628,"line_start":1234,"line_end":1234,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64633,"byte_end":64640,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65650,"byte_end":65657,"line_start":1269,"line_end":1269,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64760,"byte_end":64805,"line_start":1243,"line_end":1243,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64810,"byte_end":64813,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64818,"byte_end":64884,"line_start":1245,"line_end":1245,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64889,"byte_end":64954,"line_start":1246,"line_end":1246,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":64959,"byte_end":65021,"line_start":1247,"line_end":1247,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65026,"byte_end":65050,"line_start":1248,"line_end":1248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65055,"byte_end":65058,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65063,"byte_end":65132,"line_start":1250,"line_end":1250,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65137,"byte_end":65140,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65145,"byte_end":65207,"line_start":1252,"line_end":1252,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65212,"byte_end":65274,"line_start":1253,"line_end":1253,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65279,"byte_end":65329,"line_start":1254,"line_end":1254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65334,"byte_end":65337,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65342,"byte_end":65356,"line_start":1256,"line_end":1256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65361,"byte_end":65364,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65369,"byte_end":65376,"line_start":1258,"line_end":1258,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65381,"byte_end":65407,"line_start":1259,"line_end":1259,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65412,"byte_end":65415,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65420,"byte_end":65453,"line_start":1261,"line_end":1261,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65458,"byte_end":65499,"line_start":1262,"line_end":1262,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65504,"byte_end":65509,"line_start":1263,"line_end":1263,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65514,"byte_end":65517,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65522,"byte_end":65554,"line_start":1265,"line_end":1265,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65559,"byte_end":65591,"line_start":1266,"line_end":1266,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65596,"byte_end":65630,"line_start":1267,"line_end":1267,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65635,"byte_end":65642,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66500,"byte_end":66503,"line_start":1299,"line_end":1299,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65782,"byte_end":65847,"line_start":1276,"line_end":1276,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65852,"byte_end":65917,"line_start":1277,"line_end":1277,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65922,"byte_end":65938,"line_start":1278,"line_end":1278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65943,"byte_end":65946,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":65951,"byte_end":66016,"line_start":1280,"line_end":1280,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66021,"byte_end":66087,"line_start":1281,"line_end":1281,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66092,"byte_end":66130,"line_start":1282,"line_end":1282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66135,"byte_end":66138,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66143,"byte_end":66213,"line_start":1284,"line_end":1284,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66218,"byte_end":66221,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66226,"byte_end":66240,"line_start":1286,"line_end":1286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66245,"byte_end":66248,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66253,"byte_end":66260,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66265,"byte_end":66291,"line_start":1289,"line_end":1289,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66296,"byte_end":66299,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66304,"byte_end":66329,"line_start":1291,"line_end":1291,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66334,"byte_end":66337,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66342,"byte_end":66388,"line_start":1293,"line_end":1293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66393,"byte_end":66396,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66401,"byte_end":66426,"line_start":1295,"line_end":1295,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66431,"byte_end":66434,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66439,"byte_end":66480,"line_start":1297,"line_end":1297,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66485,"byte_end":66492,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67242,"byte_end":67248,"line_start":1323,"line_end":1323,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66619,"byte_end":66692,"line_start":1306,"line_end":1306,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66697,"byte_end":66767,"line_start":1307,"line_end":1307,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66772,"byte_end":66821,"line_start":1308,"line_end":1308,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66826,"byte_end":66829,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66834,"byte_end":66899,"line_start":1310,"line_end":1310,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66904,"byte_end":66973,"line_start":1311,"line_end":1311,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":66978,"byte_end":67016,"line_start":1312,"line_end":1312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67021,"byte_end":67024,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67029,"byte_end":67043,"line_start":1314,"line_end":1314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67048,"byte_end":67051,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67056,"byte_end":67063,"line_start":1316,"line_end":1316,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67068,"byte_end":67094,"line_start":1317,"line_end":1317,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67099,"byte_end":67102,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67107,"byte_end":67145,"line_start":1319,"line_end":1319,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67150,"byte_end":67153,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67158,"byte_end":67222,"line_start":1321,"line_end":1321,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67227,"byte_end":67234,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68095,"byte_end":68105,"line_start":1350,"line_end":1350,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67497,"byte_end":67562,"line_start":1333,"line_end":1333,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67567,"byte_end":67626,"line_start":1334,"line_end":1334,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67631,"byte_end":67671,"line_start":1335,"line_end":1335,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67676,"byte_end":67679,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67684,"byte_end":67749,"line_start":1337,"line_end":1337,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67754,"byte_end":67820,"line_start":1338,"line_end":1338,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67825,"byte_end":67863,"line_start":1339,"line_end":1339,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67868,"byte_end":67871,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67876,"byte_end":67890,"line_start":1341,"line_end":1341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67895,"byte_end":67898,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67903,"byte_end":67910,"line_start":1343,"line_end":1343,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67915,"byte_end":67941,"line_start":1344,"line_end":1344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67946,"byte_end":67949,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":67954,"byte_end":67999,"line_start":1346,"line_end":1346,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68004,"byte_end":68007,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68012,"byte_end":68075,"line_start":1348,"line_end":1348,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68080,"byte_end":68087,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69056,"byte_end":69059,"line_start":1382,"line_end":1382,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68338,"byte_end":68403,"line_start":1359,"line_end":1359,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68408,"byte_end":68473,"line_start":1360,"line_end":1360,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68478,"byte_end":68494,"line_start":1361,"line_end":1361,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68499,"byte_end":68502,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68507,"byte_end":68572,"line_start":1363,"line_end":1363,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68577,"byte_end":68643,"line_start":1364,"line_end":1364,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68648,"byte_end":68686,"line_start":1365,"line_end":1365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68691,"byte_end":68694,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68699,"byte_end":68769,"line_start":1367,"line_end":1367,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68774,"byte_end":68777,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68782,"byte_end":68796,"line_start":1369,"line_end":1369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68801,"byte_end":68804,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68809,"byte_end":68816,"line_start":1371,"line_end":1371,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68821,"byte_end":68847,"line_start":1372,"line_end":1372,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68852,"byte_end":68855,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68860,"byte_end":68885,"line_start":1374,"line_end":1374,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68890,"byte_end":68893,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68898,"byte_end":68944,"line_start":1376,"line_end":1376,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68949,"byte_end":68952,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68957,"byte_end":68982,"line_start":1378,"line_end":1378,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68987,"byte_end":68990,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":68995,"byte_end":69036,"line_start":1380,"line_end":1380,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69041,"byte_end":69048,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69812,"byte_end":69818,"line_start":1406,"line_end":1406,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69175,"byte_end":69248,"line_start":1389,"line_end":1389,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69253,"byte_end":69323,"line_start":1390,"line_end":1390,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69328,"byte_end":69377,"line_start":1391,"line_end":1391,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69382,"byte_end":69385,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69390,"byte_end":69455,"line_start":1393,"line_end":1393,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69460,"byte_end":69529,"line_start":1394,"line_end":1394,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69534,"byte_end":69572,"line_start":1395,"line_end":1395,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69577,"byte_end":69580,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69585,"byte_end":69599,"line_start":1397,"line_end":1397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69604,"byte_end":69607,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69612,"byte_end":69619,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69624,"byte_end":69650,"line_start":1400,"line_end":1400,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69655,"byte_end":69658,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69663,"byte_end":69701,"line_start":1402,"line_end":1402,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69706,"byte_end":69709,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69714,"byte_end":69792,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":69797,"byte_end":69804,"line_start":1405,"line_end":1405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70666,"byte_end":70676,"line_start":1433,"line_end":1433,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70067,"byte_end":70132,"line_start":1416,"line_end":1416,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70137,"byte_end":70196,"line_start":1417,"line_end":1417,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70201,"byte_end":70241,"line_start":1418,"line_end":1418,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70246,"byte_end":70249,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70254,"byte_end":70319,"line_start":1420,"line_end":1420,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70324,"byte_end":70390,"line_start":1421,"line_end":1421,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70395,"byte_end":70433,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70438,"byte_end":70441,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70446,"byte_end":70460,"line_start":1424,"line_end":1424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70465,"byte_end":70468,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70473,"byte_end":70480,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70485,"byte_end":70511,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70516,"byte_end":70519,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70524,"byte_end":70569,"line_start":1429,"line_end":1429,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70574,"byte_end":70577,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70582,"byte_end":70646,"line_start":1431,"line_end":1431,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70651,"byte_end":70658,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71325,"byte_end":71330,"line_start":1458,"line_end":1458,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70909,"byte_end":70970,"line_start":1442,"line_end":1442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70975,"byte_end":70978,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":70983,"byte_end":70997,"line_start":1444,"line_end":1444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71002,"byte_end":71005,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71010,"byte_end":71017,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71022,"byte_end":71048,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71053,"byte_end":71056,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71061,"byte_end":71083,"line_start":1449,"line_end":1449,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71088,"byte_end":71110,"line_start":1450,"line_end":1450,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71115,"byte_end":71118,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71123,"byte_end":71175,"line_start":1452,"line_end":1452,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71180,"byte_end":71183,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71188,"byte_end":71242,"line_start":1454,"line_end":1454,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71247,"byte_end":71250,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71255,"byte_end":71305,"line_start":1456,"line_end":1456,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71310,"byte_end":71317,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72424,"byte_end":72432,"line_start":1488,"line_end":1488,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71501,"byte_end":71561,"line_start":1465,"line_end":1465,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71566,"byte_end":71628,"line_start":1466,"line_end":1466,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71633,"byte_end":71693,"line_start":1467,"line_end":1467,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71698,"byte_end":71764,"line_start":1468,"line_end":1468,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71769,"byte_end":71845,"line_start":1469,"line_end":1469,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71850,"byte_end":71853,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71858,"byte_end":71919,"line_start":1471,"line_end":1471,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71924,"byte_end":71985,"line_start":1472,"line_end":1472,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":71990,"byte_end":72049,"line_start":1473,"line_end":1473,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72054,"byte_end":72057,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72062,"byte_end":72140,"line_start":1475,"line_end":1475,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72145,"byte_end":72148,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72153,"byte_end":72167,"line_start":1477,"line_end":1477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72172,"byte_end":72175,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72180,"byte_end":72187,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72192,"byte_end":72218,"line_start":1480,"line_end":1480,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72223,"byte_end":72226,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72231,"byte_end":72256,"line_start":1482,"line_end":1482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72261,"byte_end":72264,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72269,"byte_end":72331,"line_start":1484,"line_end":1484,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72336,"byte_end":72339,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72344,"byte_end":72404,"line_start":1486,"line_end":1486,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72409,"byte_end":72416,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73471,"byte_end":73481,"line_start":1518,"line_end":1518,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72591,"byte_end":72664,"line_start":1495,"line_end":1495,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72669,"byte_end":72721,"line_start":1496,"line_end":1496,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72726,"byte_end":72729,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72734,"byte_end":72799,"line_start":1498,"line_end":1498,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72804,"byte_end":72873,"line_start":1499,"line_end":1499,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72878,"byte_end":72908,"line_start":1500,"line_end":1500,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72913,"byte_end":72916,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72921,"byte_end":72992,"line_start":1502,"line_end":1502,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":72997,"byte_end":73068,"line_start":1503,"line_end":1503,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73073,"byte_end":73144,"line_start":1504,"line_end":1504,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73149,"byte_end":73183,"line_start":1505,"line_end":1505,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73188,"byte_end":73191,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73196,"byte_end":73210,"line_start":1507,"line_end":1507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73215,"byte_end":73218,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73223,"byte_end":73230,"line_start":1509,"line_end":1509,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73235,"byte_end":73261,"line_start":1510,"line_end":1510,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73266,"byte_end":73269,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73274,"byte_end":73299,"line_start":1512,"line_end":1512,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73304,"byte_end":73307,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73312,"byte_end":73376,"line_start":1514,"line_end":1514,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73381,"byte_end":73384,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73389,"byte_end":73451,"line_start":1516,"line_end":1516,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73456,"byte_end":73463,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74494,"byte_end":74503,"line_start":1547,"line_end":1547,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73657,"byte_end":73729,"line_start":1525,"line_end":1525,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73734,"byte_end":73786,"line_start":1526,"line_end":1526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73791,"byte_end":73794,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73799,"byte_end":73863,"line_start":1528,"line_end":1528,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73868,"byte_end":73938,"line_start":1529,"line_end":1529,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73943,"byte_end":73970,"line_start":1530,"line_end":1530,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73975,"byte_end":73978,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":73983,"byte_end":74054,"line_start":1532,"line_end":1532,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74059,"byte_end":74131,"line_start":1533,"line_end":1533,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74136,"byte_end":74208,"line_start":1534,"line_end":1534,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74213,"byte_end":74216,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74221,"byte_end":74235,"line_start":1536,"line_end":1536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74240,"byte_end":74243,"line_start":1537,"line_end":1537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74248,"byte_end":74255,"line_start":1538,"line_end":1538,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74260,"byte_end":74286,"line_start":1539,"line_end":1539,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74291,"byte_end":74294,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74299,"byte_end":74324,"line_start":1541,"line_end":1541,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74329,"byte_end":74332,"line_start":1542,"line_end":1542,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74337,"byte_end":74400,"line_start":1543,"line_end":1543,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74405,"byte_end":74408,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74413,"byte_end":74474,"line_start":1545,"line_end":1545,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74479,"byte_end":74486,"line_start":1546,"line_end":1546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75582,"byte_end":75594,"line_start":1577,"line_end":1577,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74678,"byte_end":74747,"line_start":1554,"line_end":1554,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74752,"byte_end":74813,"line_start":1555,"line_end":1555,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74818,"byte_end":74821,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74826,"byte_end":74895,"line_start":1557,"line_end":1557,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74900,"byte_end":74968,"line_start":1558,"line_end":1558,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":74973,"byte_end":74997,"line_start":1559,"line_end":1559,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75002,"byte_end":75005,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75010,"byte_end":75078,"line_start":1561,"line_end":1561,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75083,"byte_end":75154,"line_start":1562,"line_end":1562,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75159,"byte_end":75227,"line_start":1563,"line_end":1563,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75232,"byte_end":75299,"line_start":1564,"line_end":1564,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75304,"byte_end":75307,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75312,"byte_end":75326,"line_start":1566,"line_end":1566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75331,"byte_end":75334,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75339,"byte_end":75346,"line_start":1568,"line_end":1568,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75351,"byte_end":75377,"line_start":1569,"line_end":1569,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75382,"byte_end":75385,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75390,"byte_end":75427,"line_start":1571,"line_end":1571,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75432,"byte_end":75435,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75440,"byte_end":75511,"line_start":1573,"line_end":1573,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75516,"byte_end":75519,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75524,"byte_end":75562,"line_start":1575,"line_end":1575,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75567,"byte_end":75574,"line_start":1576,"line_end":1576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76727,"byte_end":76741,"line_start":1608,"line_end":1608,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75786,"byte_end":75859,"line_start":1585,"line_end":1585,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75864,"byte_end":75940,"line_start":1586,"line_end":1586,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75945,"byte_end":75948,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":75953,"byte_end":76027,"line_start":1588,"line_end":1588,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76032,"byte_end":76105,"line_start":1589,"line_end":1589,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76110,"byte_end":76162,"line_start":1590,"line_end":1590,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76167,"byte_end":76170,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76175,"byte_end":76246,"line_start":1592,"line_end":1592,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76251,"byte_end":76321,"line_start":1593,"line_end":1593,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76326,"byte_end":76401,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76406,"byte_end":76444,"line_start":1595,"line_end":1595,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76449,"byte_end":76452,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76457,"byte_end":76471,"line_start":1597,"line_end":1597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76476,"byte_end":76479,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76484,"byte_end":76491,"line_start":1599,"line_end":1599,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76496,"byte_end":76522,"line_start":1600,"line_end":1600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76527,"byte_end":76530,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76535,"byte_end":76572,"line_start":1602,"line_end":1602,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76577,"byte_end":76580,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76585,"byte_end":76656,"line_start":1604,"line_end":1604,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76661,"byte_end":76664,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76669,"byte_end":76707,"line_start":1606,"line_end":1606,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76712,"byte_end":76719,"line_start":1607,"line_end":1607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77871,"byte_end":77884,"line_start":1639,"line_end":1639,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":76935,"byte_end":77008,"line_start":1616,"line_end":1616,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77013,"byte_end":77088,"line_start":1617,"line_end":1617,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77093,"byte_end":77096,"line_start":1618,"line_end":1618,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77101,"byte_end":77175,"line_start":1619,"line_end":1619,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77180,"byte_end":77253,"line_start":1620,"line_end":1620,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77258,"byte_end":77307,"line_start":1621,"line_end":1621,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77312,"byte_end":77315,"line_start":1622,"line_end":1622,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77320,"byte_end":77391,"line_start":1623,"line_end":1623,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77396,"byte_end":77466,"line_start":1624,"line_end":1624,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77471,"byte_end":77546,"line_start":1625,"line_end":1625,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77551,"byte_end":77589,"line_start":1626,"line_end":1626,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77594,"byte_end":77597,"line_start":1627,"line_end":1627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77602,"byte_end":77616,"line_start":1628,"line_end":1628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77621,"byte_end":77624,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77629,"byte_end":77636,"line_start":1630,"line_end":1630,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77641,"byte_end":77667,"line_start":1631,"line_end":1631,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77672,"byte_end":77675,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77680,"byte_end":77717,"line_start":1633,"line_end":1633,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77722,"byte_end":77725,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77730,"byte_end":77800,"line_start":1635,"line_end":1635,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77805,"byte_end":77808,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77813,"byte_end":77851,"line_start":1637,"line_end":1637,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":77856,"byte_end":77863,"line_start":1638,"line_end":1638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78244,"byte_end":78248,"line_start":1650,"line_end":1650,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78096,"byte_end":78236,"line_start":1648,"line_end":1649,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78953,"byte_end":78956,"line_start":1674,"line_end":1674,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78404,"byte_end":78464,"line_start":1657,"line_end":1657,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78469,"byte_end":78531,"line_start":1658,"line_end":1658,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78536,"byte_end":78596,"line_start":1659,"line_end":1659,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78601,"byte_end":78667,"line_start":1660,"line_end":1660,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78672,"byte_end":78709,"line_start":1661,"line_end":1661,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78714,"byte_end":78717,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78722,"byte_end":78736,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78741,"byte_end":78744,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78749,"byte_end":78756,"line_start":1665,"line_end":1665,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78761,"byte_end":78787,"line_start":1666,"line_end":1666,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78792,"byte_end":78795,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78800,"byte_end":78836,"line_start":1668,"line_end":1668,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78841,"byte_end":78844,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78849,"byte_end":78898,"line_start":1670,"line_end":1670,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78903,"byte_end":78906,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78911,"byte_end":78933,"line_start":1672,"line_end":1672,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":78938,"byte_end":78945,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79579,"byte_end":79582,"line_start":1696,"line_end":1696,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79119,"byte_end":79187,"line_start":1681,"line_end":1681,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79192,"byte_end":79262,"line_start":1682,"line_end":1682,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79267,"byte_end":79334,"line_start":1683,"line_end":1683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79339,"byte_end":79342,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79347,"byte_end":79361,"line_start":1685,"line_end":1685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79366,"byte_end":79369,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79374,"byte_end":79381,"line_start":1687,"line_end":1687,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79386,"byte_end":79412,"line_start":1688,"line_end":1688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79417,"byte_end":79420,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79425,"byte_end":79461,"line_start":1690,"line_end":1690,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79466,"byte_end":79469,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79474,"byte_end":79523,"line_start":1692,"line_end":1692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79528,"byte_end":79531,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79536,"byte_end":79559,"line_start":1694,"line_end":1694,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79564,"byte_end":79571,"line_start":1695,"line_end":1695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80479,"byte_end":80489,"line_start":1725,"line_end":1725,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79746,"byte_end":79817,"line_start":1703,"line_end":1703,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79822,"byte_end":79857,"line_start":1704,"line_end":1704,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79862,"byte_end":79865,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79870,"byte_end":79884,"line_start":1706,"line_end":1706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79889,"byte_end":79892,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79897,"byte_end":79904,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79909,"byte_end":79935,"line_start":1709,"line_end":1709,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79940,"byte_end":79991,"line_start":1710,"line_end":1710,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":79996,"byte_end":79999,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80004,"byte_end":80042,"line_start":1712,"line_end":1712,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80047,"byte_end":80076,"line_start":1713,"line_end":1713,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80081,"byte_end":80105,"line_start":1714,"line_end":1714,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80110,"byte_end":80128,"line_start":1715,"line_end":1715,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80133,"byte_end":80189,"line_start":1716,"line_end":1716,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80194,"byte_end":80248,"line_start":1717,"line_end":1717,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80253,"byte_end":80268,"line_start":1718,"line_end":1718,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80273,"byte_end":80294,"line_start":1719,"line_end":1719,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80299,"byte_end":80314,"line_start":1720,"line_end":1720,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80319,"byte_end":80322,"line_start":1721,"line_end":1721,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80327,"byte_end":80359,"line_start":1722,"line_end":1722,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80364,"byte_end":80459,"line_start":1723,"line_end":1723,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80464,"byte_end":80471,"line_start":1724,"line_end":1724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81800,"byte_end":81810,"line_start":1763,"line_end":1763,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80641,"byte_end":80713,"line_start":1733,"line_end":1733,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80718,"byte_end":80742,"line_start":1734,"line_end":1734,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80747,"byte_end":80750,"line_start":1735,"line_end":1735,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80755,"byte_end":80828,"line_start":1736,"line_end":1736,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80833,"byte_end":80907,"line_start":1737,"line_end":1737,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80912,"byte_end":80987,"line_start":1738,"line_end":1738,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":80992,"byte_end":81062,"line_start":1739,"line_end":1739,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81067,"byte_end":81139,"line_start":1740,"line_end":1740,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81144,"byte_end":81147,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81152,"byte_end":81188,"line_start":1742,"line_end":1742,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81193,"byte_end":81196,"line_start":1743,"line_end":1743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81201,"byte_end":81215,"line_start":1744,"line_end":1744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81220,"byte_end":81223,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81228,"byte_end":81300,"line_start":1746,"line_end":1746,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81305,"byte_end":81377,"line_start":1747,"line_end":1747,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81382,"byte_end":81414,"line_start":1748,"line_end":1748,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81419,"byte_end":81422,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81427,"byte_end":81446,"line_start":1750,"line_end":1750,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81451,"byte_end":81477,"line_start":1751,"line_end":1751,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81482,"byte_end":81510,"line_start":1752,"line_end":1752,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81515,"byte_end":81518,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81523,"byte_end":81541,"line_start":1754,"line_end":1754,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81546,"byte_end":81570,"line_start":1755,"line_end":1755,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81575,"byte_end":81596,"line_start":1756,"line_end":1756,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81601,"byte_end":81624,"line_start":1757,"line_end":1757,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81629,"byte_end":81662,"line_start":1758,"line_end":1758,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81667,"byte_end":81723,"line_start":1759,"line_end":1759,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81728,"byte_end":81764,"line_start":1760,"line_end":1760,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81769,"byte_end":81780,"line_start":1761,"line_end":1761,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81785,"byte_end":81792,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82559,"byte_end":82566,"line_start":1786,"line_end":1786,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Create a fresh collection containing all the element produced","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81878,"byte_end":81943,"line_start":1767,"line_end":1767,"column_start":5,"column_end":70}},{"value":"/ by this parallel iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81948,"byte_end":81978,"line_start":1768,"line_end":1768,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81983,"byte_end":81986,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `collect_into_vec()`, which allocates more","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":81991,"byte_end":82059,"line_start":1770,"line_end":1770,"column_start":5,"column_end":73}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82064,"byte_end":82127,"line_start":1771,"line_end":1771,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse an existing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82132,"byte_end":82195,"line_start":1772,"line_end":1772,"column_start":5,"column_end":68}},{"value":"/ vector's backing store rather than allocating a fresh vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82200,"byte_end":82265,"line_start":1773,"line_end":1773,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82270,"byte_end":82273,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82278,"byte_end":82292,"line_start":1775,"line_end":1775,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82297,"byte_end":82300,"line_start":1776,"line_end":1776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82305,"byte_end":82312,"line_start":1777,"line_end":1777,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82317,"byte_end":82343,"line_start":1778,"line_end":1778,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82348,"byte_end":82351,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82356,"byte_end":82414,"line_start":1780,"line_end":1780,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82419,"byte_end":82422,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82427,"byte_end":82490,"line_start":1782,"line_end":1782,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82495,"byte_end":82498,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82503,"byte_end":82539,"line_start":1784,"line_end":1784,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82544,"byte_end":82551,"line_start":1785,"line_end":1785,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83818,"byte_end":83823,"line_start":1827,"line_end":1827,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82684,"byte_end":82752,"line_start":1793,"line_end":1793,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82757,"byte_end":82789,"line_start":1794,"line_end":1794,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82794,"byte_end":82797,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82802,"byte_end":82869,"line_start":1796,"line_end":1796,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82874,"byte_end":82937,"line_start":1797,"line_end":1797,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":82942,"byte_end":83002,"line_start":1798,"line_end":1798,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83007,"byte_end":83072,"line_start":1799,"line_end":1799,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83077,"byte_end":83080,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83085,"byte_end":83099,"line_start":1801,"line_end":1801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83104,"byte_end":83107,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83112,"byte_end":83119,"line_start":1803,"line_end":1803,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83124,"byte_end":83150,"line_start":1804,"line_end":1804,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83155,"byte_end":83158,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83163,"byte_end":83208,"line_start":1806,"line_end":1806,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83213,"byte_end":83216,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83221,"byte_end":83293,"line_start":1808,"line_end":1808,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83298,"byte_end":83301,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83306,"byte_end":83341,"line_start":1810,"line_end":1810,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83346,"byte_end":83382,"line_start":1811,"line_end":1811,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83387,"byte_end":83394,"line_start":1812,"line_end":1812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83399,"byte_end":83402,"line_start":1813,"line_end":1813,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83407,"byte_end":83444,"line_start":1814,"line_end":1814,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83449,"byte_end":83452,"line_start":1815,"line_end":1815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83457,"byte_end":83464,"line_start":1816,"line_end":1816,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83469,"byte_end":83495,"line_start":1817,"line_end":1817,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83500,"byte_end":83503,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83508,"byte_end":83595,"line_start":1819,"line_end":1819,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83600,"byte_end":83641,"line_start":1820,"line_end":1820,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83646,"byte_end":83663,"line_start":1821,"line_end":1821,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83668,"byte_end":83671,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83676,"byte_end":83713,"line_start":1823,"line_end":1823,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83718,"byte_end":83756,"line_start":1824,"line_end":1824,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83761,"byte_end":83798,"line_start":1825,"line_end":1825,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":83803,"byte_end":83810,"line_start":1826,"line_end":1826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84929,"byte_end":84938,"line_start":1857,"line_end":1857,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84105,"byte_end":84177,"line_start":1838,"line_end":1838,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84182,"byte_end":84255,"line_start":1839,"line_end":1839,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84260,"byte_end":84330,"line_start":1840,"line_end":1840,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84335,"byte_end":84338,"line_start":1841,"line_end":1841,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84343,"byte_end":84416,"line_start":1842,"line_end":1842,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84421,"byte_end":84495,"line_start":1843,"line_end":1843,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84500,"byte_end":84572,"line_start":1844,"line_end":1844,"column_start":5,"column_end":77}},{"value":"/ that used type inferrence assuming the two were the same.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84577,"byte_end":84638,"line_start":1845,"line_end":1845,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84643,"byte_end":84646,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84651,"byte_end":84665,"line_start":1847,"line_end":1847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84670,"byte_end":84673,"line_start":1848,"line_end":1848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84678,"byte_end":84685,"line_start":1849,"line_end":1849,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84690,"byte_end":84716,"line_start":1850,"line_end":1850,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84721,"byte_end":84724,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84729,"byte_end":84820,"line_start":1852,"line_end":1852,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84825,"byte_end":84828,"line_start":1853,"line_end":1853,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84833,"byte_end":84868,"line_start":1854,"line_end":1854,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84873,"byte_end":84909,"line_start":1855,"line_end":1855,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":84914,"byte_end":84921,"line_start":1856,"line_end":1856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86658,"byte_end":86671,"line_start":1909,"line_end":1909,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85209,"byte_end":85280,"line_start":1866,"line_end":1866,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85285,"byte_end":85357,"line_start":1867,"line_end":1867,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85362,"byte_end":85432,"line_start":1868,"line_end":1868,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85437,"byte_end":85440,"line_start":1869,"line_end":1869,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85445,"byte_end":85459,"line_start":1870,"line_end":1870,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85464,"byte_end":85467,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85472,"byte_end":85479,"line_start":1872,"line_end":1872,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85484,"byte_end":85510,"line_start":1873,"line_end":1873,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85515,"byte_end":85543,"line_start":1874,"line_end":1874,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85548,"byte_end":85551,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85556,"byte_end":85620,"line_start":1876,"line_end":1876,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85625,"byte_end":85653,"line_start":1877,"line_end":1877,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85658,"byte_end":85685,"line_start":1878,"line_end":1878,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85690,"byte_end":85725,"line_start":1879,"line_end":1879,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85730,"byte_end":85750,"line_start":1880,"line_end":1880,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85755,"byte_end":85791,"line_start":1881,"line_end":1881,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85796,"byte_end":85809,"line_start":1882,"line_end":1882,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85814,"byte_end":85825,"line_start":1883,"line_end":1883,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85830,"byte_end":85833,"line_start":1884,"line_end":1884,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85838,"byte_end":85875,"line_start":1885,"line_end":1885,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85880,"byte_end":85918,"line_start":1886,"line_end":1886,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85923,"byte_end":85930,"line_start":1887,"line_end":1887,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85935,"byte_end":85938,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85943,"byte_end":85990,"line_start":1889,"line_end":1889,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":85995,"byte_end":85998,"line_start":1890,"line_end":1890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86003,"byte_end":86010,"line_start":1891,"line_end":1891,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86015,"byte_end":86041,"line_start":1892,"line_end":1892,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86046,"byte_end":86077,"line_start":1893,"line_end":1893,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86082,"byte_end":86085,"line_start":1894,"line_end":1894,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86090,"byte_end":86179,"line_start":1895,"line_end":1895,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86184,"byte_end":86208,"line_start":1896,"line_end":1896,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86213,"byte_end":86262,"line_start":1897,"line_end":1897,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86267,"byte_end":86303,"line_start":1898,"line_end":1898,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86308,"byte_end":86345,"line_start":1899,"line_end":1899,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86350,"byte_end":86387,"line_start":1900,"line_end":1900,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86392,"byte_end":86430,"line_start":1901,"line_end":1901,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86435,"byte_end":86446,"line_start":1902,"line_end":1902,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86451,"byte_end":86454,"line_start":1903,"line_end":1903,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86459,"byte_end":86490,"line_start":1904,"line_end":1904,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86495,"byte_end":86535,"line_start":1905,"line_end":1905,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86540,"byte_end":86570,"line_start":1906,"line_end":1906,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86575,"byte_end":86638,"line_start":1907,"line_end":1907,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86643,"byte_end":86650,"line_start":1908,"line_end":1908,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87304,"byte_end":87315,"line_start":1932,"line_end":1932,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":86975,"byte_end":87044,"line_start":1920,"line_end":1920,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87049,"byte_end":87052,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87057,"byte_end":87071,"line_start":1922,"line_end":1922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87076,"byte_end":87079,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87084,"byte_end":87091,"line_start":1924,"line_end":1924,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87096,"byte_end":87122,"line_start":1925,"line_end":1925,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87127,"byte_end":87130,"line_start":1926,"line_end":1926,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87135,"byte_end":87161,"line_start":1927,"line_end":1927,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87166,"byte_end":87230,"line_start":1928,"line_end":1928,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87235,"byte_end":87238,"line_start":1929,"line_end":1929,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87243,"byte_end":87284,"line_start":1930,"line_end":1930,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87289,"byte_end":87296,"line_start":1931,"line_end":1931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87977,"byte_end":87992,"line_start":1951,"line_end":1951,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87458,"byte_end":87522,"line_start":1939,"line_end":1939,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87527,"byte_end":87583,"line_start":1940,"line_end":1940,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87588,"byte_end":87591,"line_start":1941,"line_end":1941,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87596,"byte_end":87657,"line_start":1942,"line_end":1942,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87662,"byte_end":87727,"line_start":1943,"line_end":1943,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87732,"byte_end":87791,"line_start":1944,"line_end":1944,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87796,"byte_end":87835,"line_start":1945,"line_end":1945,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87840,"byte_end":87843,"line_start":1946,"line_end":1946,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87848,"byte_end":87914,"line_start":1947,"line_end":1947,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87919,"byte_end":87933,"line_start":1948,"line_end":1948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87938,"byte_end":87941,"line_start":1949,"line_end":1949,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":87946,"byte_end":87969,"line_start":1950,"line_end":1950,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88879,"byte_end":88886,"line_start":1969,"line_end":1969,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88085,"byte_end":88149,"line_start":1955,"line_end":1955,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88154,"byte_end":88210,"line_start":1956,"line_end":1956,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88215,"byte_end":88218,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88223,"byte_end":88290,"line_start":1958,"line_end":1958,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88295,"byte_end":88364,"line_start":1959,"line_end":1959,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88369,"byte_end":88440,"line_start":1960,"line_end":1960,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88445,"byte_end":88515,"line_start":1961,"line_end":1961,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88520,"byte_end":88589,"line_start":1962,"line_end":1962,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88594,"byte_end":88661,"line_start":1963,"line_end":1963,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88666,"byte_end":88700,"line_start":1964,"line_end":1964,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88705,"byte_end":88708,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88713,"byte_end":88777,"line_start":1966,"line_end":1966,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88782,"byte_end":88837,"line_start":1967,"line_end":1967,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88842,"byte_end":88871,"line_start":1968,"line_end":1968,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89329,"byte_end":89352,"line_start":1988,"line_end":1988,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3736},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3773}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89091,"byte_end":89157,"line_start":1983,"line_end":1983,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89158,"byte_end":89223,"line_start":1984,"line_end":1984,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89224,"byte_end":89241,"line_start":1985,"line_end":1985,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89242,"byte_end":89245,"line_start":1986,"line_end":1986,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89246,"byte_end":89318,"line_start":1987,"line_end":1987,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89961,"byte_end":89977,"line_start":2007,"line_end":2007,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89377,"byte_end":89436,"line_start":1989,"line_end":1989,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89441,"byte_end":89500,"line_start":1990,"line_end":1990,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89505,"byte_end":89570,"line_start":1991,"line_end":1991,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89575,"byte_end":89641,"line_start":1992,"line_end":1992,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89646,"byte_end":89649,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89654,"byte_end":89668,"line_start":1994,"line_end":1994,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89673,"byte_end":89676,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89681,"byte_end":89688,"line_start":1996,"line_end":1996,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89693,"byte_end":89719,"line_start":1997,"line_end":1997,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89724,"byte_end":89727,"line_start":1998,"line_end":1998,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89732,"byte_end":89771,"line_start":1999,"line_end":1999,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89776,"byte_end":89811,"line_start":2000,"line_end":2000,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89816,"byte_end":89819,"line_start":2001,"line_end":2001,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89824,"byte_end":89850,"line_start":2002,"line_end":2002,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89855,"byte_end":89891,"line_start":2003,"line_end":2003,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89896,"byte_end":89899,"line_start":2004,"line_end":2004,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89904,"byte_end":89941,"line_start":2005,"line_end":2005,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89946,"byte_end":89953,"line_start":2006,"line_end":2006,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90787,"byte_end":90802,"line_start":2032,"line_end":2032,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90076,"byte_end":90133,"line_start":2011,"line_end":2011,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90138,"byte_end":90200,"line_start":2012,"line_end":2012,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90205,"byte_end":90271,"line_start":2013,"line_end":2013,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90276,"byte_end":90343,"line_start":2014,"line_end":2014,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90348,"byte_end":90351,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90356,"byte_end":90370,"line_start":2016,"line_end":2016,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90375,"byte_end":90378,"line_start":2017,"line_end":2017,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90383,"byte_end":90390,"line_start":2018,"line_end":2018,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90395,"byte_end":90421,"line_start":2019,"line_end":2019,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90426,"byte_end":90429,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90434,"byte_end":90473,"line_start":2021,"line_end":2021,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90478,"byte_end":90510,"line_start":2022,"line_end":2022,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90515,"byte_end":90548,"line_start":2023,"line_end":2023,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90553,"byte_end":90556,"line_start":2024,"line_end":2024,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90561,"byte_end":90589,"line_start":2025,"line_end":2025,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90594,"byte_end":90614,"line_start":2026,"line_end":2026,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90619,"byte_end":90667,"line_start":2027,"line_end":2027,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90672,"byte_end":90675,"line_start":2028,"line_end":2028,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90680,"byte_end":90718,"line_start":2029,"line_end":2029,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90723,"byte_end":90767,"line_start":2030,"line_end":2030,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":90772,"byte_end":90779,"line_start":2031,"line_end":2031,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91613,"byte_end":91616,"line_start":2059,"line_end":2059,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterate over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91022,"byte_end":91084,"line_start":2041,"line_end":2041,"column_start":5,"column_end":67}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91089,"byte_end":91155,"line_start":2042,"line_end":2042,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91160,"byte_end":91219,"line_start":2043,"line_end":2043,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91224,"byte_end":91288,"line_start":2044,"line_end":2044,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91293,"byte_end":91312,"line_start":2045,"line_end":2045,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91317,"byte_end":91320,"line_start":2046,"line_end":2046,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91325,"byte_end":91339,"line_start":2047,"line_end":2047,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91344,"byte_end":91347,"line_start":2048,"line_end":2048,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91352,"byte_end":91359,"line_start":2049,"line_end":2049,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91364,"byte_end":91390,"line_start":2050,"line_end":2050,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91395,"byte_end":91398,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91403,"byte_end":91434,"line_start":2052,"line_end":2052,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91439,"byte_end":91463,"line_start":2053,"line_end":2053,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91468,"byte_end":91501,"line_start":2054,"line_end":2054,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91506,"byte_end":91525,"line_start":2055,"line_end":2055,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91530,"byte_end":91533,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91538,"byte_end":91593,"line_start":2057,"line_end":2057,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91598,"byte_end":91605,"line_start":2058,"line_end":2058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92390,"byte_end":92396,"line_start":2086,"line_end":2086,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91808,"byte_end":91885,"line_start":2067,"line_end":2067,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91890,"byte_end":91893,"line_start":2068,"line_end":2068,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91898,"byte_end":91910,"line_start":2069,"line_end":2069,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91915,"byte_end":91977,"line_start":2070,"line_end":2070,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91982,"byte_end":91985,"line_start":2071,"line_end":2071,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":91990,"byte_end":92009,"line_start":2072,"line_end":2072,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92014,"byte_end":92040,"line_start":2073,"line_end":2073,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92045,"byte_end":92048,"line_start":2074,"line_end":2074,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92053,"byte_end":92073,"line_start":2075,"line_end":2075,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92078,"byte_end":92101,"line_start":2076,"line_end":2076,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92106,"byte_end":92140,"line_start":2077,"line_end":2077,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92145,"byte_end":92179,"line_start":2078,"line_end":2078,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92184,"byte_end":92187,"line_start":2079,"line_end":2079,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92192,"byte_end":92214,"line_start":2080,"line_end":2080,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92219,"byte_end":92289,"line_start":2081,"line_end":2081,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92294,"byte_end":92297,"line_start":2082,"line_end":2082,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92302,"byte_end":92333,"line_start":2083,"line_end":2083,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92338,"byte_end":92370,"line_start":2084,"line_end":2084,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92375,"byte_end":92382,"line_start":2085,"line_end":2085,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93242,"byte_end":93252,"line_start":2110,"line_end":2110,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92682,"byte_end":92742,"line_start":2096,"line_end":2096,"column_start":5,"column_end":65}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92747,"byte_end":92811,"line_start":2097,"line_end":2097,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92816,"byte_end":92881,"line_start":2098,"line_end":2098,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92886,"byte_end":92951,"line_start":2099,"line_end":2099,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92956,"byte_end":92975,"line_start":2100,"line_end":2100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92980,"byte_end":92983,"line_start":2101,"line_end":2101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":92988,"byte_end":93002,"line_start":2102,"line_end":2102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93007,"byte_end":93010,"line_start":2103,"line_end":2103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93015,"byte_end":93022,"line_start":2104,"line_end":2104,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93027,"byte_end":93053,"line_start":2105,"line_end":2105,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93058,"byte_end":93106,"line_start":2106,"line_end":2106,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93111,"byte_end":93175,"line_start":2107,"line_end":2107,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93180,"byte_end":93222,"line_start":2108,"line_end":2108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93227,"byte_end":93234,"line_start":2109,"line_end":2109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93869,"byte_end":93888,"line_start":2129,"line_end":2129,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93494,"byte_end":93554,"line_start":2118,"line_end":2118,"column_start":5,"column_end":65}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93559,"byte_end":93596,"line_start":2119,"line_end":2119,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93601,"byte_end":93604,"line_start":2120,"line_end":2120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93609,"byte_end":93623,"line_start":2121,"line_end":2121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93628,"byte_end":93631,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93636,"byte_end":93643,"line_start":2123,"line_end":2123,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93648,"byte_end":93674,"line_start":2124,"line_end":2124,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93679,"byte_end":93727,"line_start":2125,"line_end":2125,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93732,"byte_end":93805,"line_start":2126,"line_end":2126,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93810,"byte_end":93849,"line_start":2127,"line_end":2127,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":93854,"byte_end":93861,"line_start":2128,"line_end":2128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95068,"byte_end":95074,"line_start":2157,"line_end":2157,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Split an iterator up into fixed-size chunks.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94146,"byte_end":94194,"line_start":2137,"line_end":2137,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94199,"byte_end":94202,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94207,"byte_end":94283,"line_start":2139,"line_end":2139,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94288,"byte_end":94367,"line_start":2140,"line_end":2140,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94372,"byte_end":94424,"line_start":2141,"line_end":2141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94429,"byte_end":94432,"line_start":2142,"line_end":2142,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94437,"byte_end":94515,"line_start":2143,"line_end":2143,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94520,"byte_end":94594,"line_start":2144,"line_end":2144,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94599,"byte_end":94602,"line_start":2145,"line_end":2145,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94607,"byte_end":94680,"line_start":2146,"line_end":2146,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94685,"byte_end":94769,"line_start":2147,"line_end":2147,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94774,"byte_end":94777,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94782,"byte_end":94796,"line_start":2149,"line_end":2149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94801,"byte_end":94804,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94809,"byte_end":94816,"line_start":2151,"line_end":2151,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94821,"byte_end":94847,"line_start":2152,"line_end":2152,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94852,"byte_end":94900,"line_start":2153,"line_end":2153,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94905,"byte_end":94970,"line_start":2154,"line_end":2154,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":94975,"byte_end":95048,"line_start":2155,"line_end":2155,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95053,"byte_end":95060,"line_start":2156,"line_end":2156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95686,"byte_end":95689,"line_start":2176,"line_end":2176,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95232,"byte_end":95316,"line_start":2162,"line_end":2162,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95321,"byte_end":95333,"line_start":2163,"line_end":2163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95338,"byte_end":95341,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95346,"byte_end":95360,"line_start":2165,"line_end":2165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95365,"byte_end":95368,"line_start":2166,"line_end":2166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95373,"byte_end":95380,"line_start":2167,"line_end":2167,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95385,"byte_end":95411,"line_start":2168,"line_end":2168,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95416,"byte_end":95446,"line_start":2169,"line_end":2169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95451,"byte_end":95454,"line_start":2170,"line_end":2170,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95459,"byte_end":95485,"line_start":2171,"line_end":2171,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95490,"byte_end":95545,"line_start":2172,"line_end":2172,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95550,"byte_end":95606,"line_start":2173,"line_end":2173,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95611,"byte_end":95666,"line_start":2174,"line_end":2174,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":95671,"byte_end":95678,"line_start":2175,"line_end":2175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96731,"byte_end":96742,"line_start":2206,"line_end":2206,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96117,"byte_end":96201,"line_start":2190,"line_end":2190,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96206,"byte_end":96218,"line_start":2191,"line_end":2191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96223,"byte_end":96226,"line_start":2192,"line_end":2192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96231,"byte_end":96245,"line_start":2193,"line_end":2193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96250,"byte_end":96253,"line_start":2194,"line_end":2194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96258,"byte_end":96265,"line_start":2195,"line_end":2195,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96270,"byte_end":96296,"line_start":2196,"line_end":2196,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96301,"byte_end":96331,"line_start":2197,"line_end":2197,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96336,"byte_end":96358,"line_start":2198,"line_end":2198,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96363,"byte_end":96366,"line_start":2199,"line_end":2199,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96371,"byte_end":96403,"line_start":2200,"line_end":2200,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96408,"byte_end":96483,"line_start":2201,"line_end":2201,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96488,"byte_end":96564,"line_start":2202,"line_end":2202,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96569,"byte_end":96642,"line_start":2203,"line_end":2203,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96647,"byte_end":96711,"line_start":2204,"line_end":2204,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":96716,"byte_end":96723,"line_start":2205,"line_end":2205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97305,"byte_end":97307,"line_start":2222,"line_end":2222,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97202,"byte_end":97259,"line_start":2220,"line_end":2220,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97264,"byte_end":97297,"line_start":2221,"line_end":2221,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97701,"byte_end":97703,"line_start":2234,"line_end":2234,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97596,"byte_end":97653,"line_start":2232,"line_end":2232,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97658,"byte_end":97693,"line_start":2233,"line_end":2233,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98020,"byte_end":98022,"line_start":2245,"line_end":2245,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97897,"byte_end":97954,"line_start":2243,"line_end":2243,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":97959,"byte_end":98012,"line_start":2244,"line_end":2244,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98361,"byte_end":98363,"line_start":2256,"line_end":2256,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98249,"byte_end":98306,"line_start":2254,"line_end":2254,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98311,"byte_end":98353,"line_start":2255,"line_end":2255,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98771,"byte_end":98773,"line_start":2268,"line_end":2268,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98645,"byte_end":98702,"line_start":2266,"line_end":2266,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":98707,"byte_end":98763,"line_start":2267,"line_end":2267,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99115,"byte_end":99117,"line_start":2279,"line_end":2279,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99003,"byte_end":99060,"line_start":2277,"line_end":2277,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99065,"byte_end":99107,"line_start":2278,"line_end":2278,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99771,"byte_end":99780,"line_start":2304,"line_end":2304,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99402,"byte_end":99443,"line_start":2289,"line_end":2289,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99448,"byte_end":99451,"line_start":2290,"line_end":2290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99456,"byte_end":99470,"line_start":2291,"line_end":2291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99475,"byte_end":99478,"line_start":2292,"line_end":2292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99483,"byte_end":99490,"line_start":2293,"line_end":2293,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99495,"byte_end":99521,"line_start":2294,"line_end":2294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99526,"byte_end":99529,"line_start":2295,"line_end":2295,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99534,"byte_end":99570,"line_start":2296,"line_end":2296,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99575,"byte_end":99605,"line_start":2297,"line_end":2297,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99610,"byte_end":99634,"line_start":2298,"line_end":2298,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99639,"byte_end":99659,"line_start":2299,"line_end":2299,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99664,"byte_end":99683,"line_start":2300,"line_end":2300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99688,"byte_end":99691,"line_start":2301,"line_end":2301,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99696,"byte_end":99751,"line_start":2302,"line_end":2302,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99756,"byte_end":99763,"line_start":2303,"line_end":2303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100183,"byte_end":100187,"line_start":2322,"line_end":2322,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99848,"byte_end":99906,"line_start":2308,"line_end":2308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99911,"byte_end":99914,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99919,"byte_end":99933,"line_start":2310,"line_end":2310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99938,"byte_end":99941,"line_start":2311,"line_end":2311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99946,"byte_end":99953,"line_start":2312,"line_end":2312,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99958,"byte_end":99984,"line_start":2313,"line_end":2313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99989,"byte_end":99992,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":99997,"byte_end":100030,"line_start":2315,"line_end":2315,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100035,"byte_end":100059,"line_start":2316,"line_end":2316,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100064,"byte_end":100081,"line_start":2317,"line_end":2317,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100086,"byte_end":100105,"line_start":2318,"line_end":2318,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100110,"byte_end":100113,"line_start":2319,"line_end":2319,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100118,"byte_end":100163,"line_start":2320,"line_end":2320,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100168,"byte_end":100175,"line_start":2321,"line_end":2321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100588,"byte_end":100592,"line_start":2340,"line_end":2340,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100258,"byte_end":100317,"line_start":2326,"line_end":2326,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100322,"byte_end":100325,"line_start":2327,"line_end":2327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100330,"byte_end":100344,"line_start":2328,"line_end":2328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100349,"byte_end":100352,"line_start":2329,"line_end":2329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100357,"byte_end":100364,"line_start":2330,"line_end":2330,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100369,"byte_end":100395,"line_start":2331,"line_end":2331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100400,"byte_end":100403,"line_start":2332,"line_end":2332,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100408,"byte_end":100441,"line_start":2333,"line_end":2333,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100446,"byte_end":100470,"line_start":2334,"line_end":2334,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100475,"byte_end":100491,"line_start":2335,"line_end":2335,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100496,"byte_end":100515,"line_start":2336,"line_end":2336,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100520,"byte_end":100523,"line_start":2337,"line_end":2337,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100528,"byte_end":100568,"line_start":2338,"line_end":2338,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100573,"byte_end":100580,"line_start":2339,"line_end":2339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101306,"byte_end":101318,"line_start":2362,"line_end":2362,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100663,"byte_end":100723,"line_start":2344,"line_end":2344,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100728,"byte_end":100789,"line_start":2345,"line_end":2345,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100794,"byte_end":100856,"line_start":2346,"line_end":2346,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100861,"byte_end":100922,"line_start":2347,"line_end":2347,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100927,"byte_end":100979,"line_start":2348,"line_end":2348,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100984,"byte_end":100987,"line_start":2349,"line_end":2349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":100992,"byte_end":101006,"line_start":2350,"line_end":2350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101011,"byte_end":101014,"line_start":2351,"line_end":2351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101019,"byte_end":101026,"line_start":2352,"line_end":2352,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101031,"byte_end":101057,"line_start":2353,"line_end":2353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101062,"byte_end":101065,"line_start":2354,"line_end":2354,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101070,"byte_end":101095,"line_start":2355,"line_end":2355,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101100,"byte_end":101103,"line_start":2356,"line_end":2356,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101108,"byte_end":101175,"line_start":2357,"line_end":2357,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101180,"byte_end":101210,"line_start":2358,"line_end":2358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101215,"byte_end":101218,"line_start":2359,"line_end":2359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101223,"byte_end":101286,"line_start":2360,"line_end":2360,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101291,"byte_end":101298,"line_start":2361,"line_end":2361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102470,"byte_end":102484,"line_start":2394,"line_end":2394,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101528,"byte_end":101601,"line_start":2370,"line_end":2370,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101606,"byte_end":101666,"line_start":2371,"line_end":2371,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101671,"byte_end":101674,"line_start":2372,"line_end":2372,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101679,"byte_end":101742,"line_start":2373,"line_end":2373,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101747,"byte_end":101812,"line_start":2374,"line_end":2374,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101817,"byte_end":101880,"line_start":2375,"line_end":2375,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101885,"byte_end":101898,"line_start":2376,"line_end":2376,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101903,"byte_end":101906,"line_start":2377,"line_end":2377,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101911,"byte_end":101982,"line_start":2378,"line_end":2378,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":101987,"byte_end":102058,"line_start":2379,"line_end":2379,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102063,"byte_end":102134,"line_start":2380,"line_end":2380,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102139,"byte_end":102177,"line_start":2381,"line_end":2381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102182,"byte_end":102185,"line_start":2382,"line_end":2382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102190,"byte_end":102204,"line_start":2383,"line_end":2383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102209,"byte_end":102212,"line_start":2384,"line_end":2384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102217,"byte_end":102224,"line_start":2385,"line_end":2385,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102229,"byte_end":102255,"line_start":2386,"line_end":2386,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102260,"byte_end":102263,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102268,"byte_end":102293,"line_start":2388,"line_end":2388,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102298,"byte_end":102301,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102306,"byte_end":102372,"line_start":2390,"line_end":2390,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102377,"byte_end":102380,"line_start":2391,"line_end":2391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102385,"byte_end":102450,"line_start":2392,"line_end":2392,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102455,"byte_end":102462,"line_start":2393,"line_end":2393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103602,"byte_end":103615,"line_start":2426,"line_end":2426,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102696,"byte_end":102768,"line_start":2402,"line_end":2402,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102773,"byte_end":102833,"line_start":2403,"line_end":2403,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102838,"byte_end":102841,"line_start":2404,"line_end":2404,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102846,"byte_end":102908,"line_start":2405,"line_end":2405,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102913,"byte_end":102977,"line_start":2406,"line_end":2406,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":102982,"byte_end":103043,"line_start":2407,"line_end":2407,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103048,"byte_end":103061,"line_start":2408,"line_end":2408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103066,"byte_end":103069,"line_start":2409,"line_end":2409,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103074,"byte_end":103145,"line_start":2410,"line_end":2410,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103150,"byte_end":103222,"line_start":2411,"line_end":2411,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103227,"byte_end":103295,"line_start":2412,"line_end":2412,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103300,"byte_end":103311,"line_start":2413,"line_end":2413,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103316,"byte_end":103319,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103324,"byte_end":103338,"line_start":2415,"line_end":2415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103343,"byte_end":103346,"line_start":2416,"line_end":2416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103351,"byte_end":103358,"line_start":2417,"line_end":2417,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103363,"byte_end":103389,"line_start":2418,"line_end":2418,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103394,"byte_end":103397,"line_start":2419,"line_end":2419,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103402,"byte_end":103427,"line_start":2420,"line_end":2420,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103432,"byte_end":103435,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103440,"byte_end":103505,"line_start":2422,"line_end":2422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103510,"byte_end":103513,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103518,"byte_end":103582,"line_start":2424,"line_end":2424,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103587,"byte_end":103594,"line_start":2425,"line_end":2425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104014,"byte_end":104022,"line_start":2439,"line_end":2439,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":103845,"byte_end":104006,"line_start":2435,"line_end":2438,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104531,"byte_end":104534,"line_start":2461,"line_end":2461,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104176,"byte_end":104241,"line_start":2446,"line_end":2446,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104246,"byte_end":104264,"line_start":2447,"line_end":2447,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104269,"byte_end":104272,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104277,"byte_end":104291,"line_start":2449,"line_end":2449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104296,"byte_end":104299,"line_start":2450,"line_end":2450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104304,"byte_end":104311,"line_start":2451,"line_end":2451,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104316,"byte_end":104342,"line_start":2452,"line_end":2452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104347,"byte_end":104350,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104355,"byte_end":104386,"line_start":2454,"line_end":2454,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104391,"byte_end":104415,"line_start":2455,"line_end":2455,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104420,"byte_end":104434,"line_start":2456,"line_end":2456,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104439,"byte_end":104458,"line_start":2457,"line_end":2457,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104463,"byte_end":104466,"line_start":2458,"line_end":2458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104471,"byte_end":104511,"line_start":2459,"line_end":2459,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104516,"byte_end":104523,"line_start":2460,"line_end":2460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105351,"byte_end":105363,"line_start":2487,"line_end":2487,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104590,"byte_end":104657,"line_start":2465,"line_end":2465,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will not split any smaller than this length, but","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104662,"byte_end":104729,"line_start":2466,"line_end":2466,"column_start":5,"column_end":72}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104734,"byte_end":104799,"line_start":2467,"line_end":2467,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104804,"byte_end":104807,"line_start":2468,"line_end":2468,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104812,"byte_end":104881,"line_start":2469,"line_end":2469,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104886,"byte_end":104899,"line_start":2470,"line_end":2470,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104904,"byte_end":104970,"line_start":2471,"line_end":2471,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":104975,"byte_end":105004,"line_start":2472,"line_end":2472,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105009,"byte_end":105012,"line_start":2473,"line_end":2473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105017,"byte_end":105031,"line_start":2474,"line_end":2474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105036,"byte_end":105039,"line_start":2475,"line_end":2475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105044,"byte_end":105051,"line_start":2476,"line_end":2476,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105056,"byte_end":105082,"line_start":2477,"line_end":2477,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105087,"byte_end":105090,"line_start":2478,"line_end":2478,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105095,"byte_end":105123,"line_start":2479,"line_end":2479,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105128,"byte_end":105152,"line_start":2480,"line_end":2480,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105157,"byte_end":105184,"line_start":2481,"line_end":2481,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105189,"byte_end":105264,"line_start":2482,"line_end":2482,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105269,"byte_end":105293,"line_start":2483,"line_end":2483,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105298,"byte_end":105301,"line_start":2484,"line_end":2484,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105306,"byte_end":105331,"line_start":2485,"line_end":2485,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105336,"byte_end":105343,"line_start":2486,"line_end":2486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106302,"byte_end":106314,"line_start":2515,"line_end":2515,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105442,"byte_end":105509,"line_start":2491,"line_end":2491,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will try to split at least below this length,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105514,"byte_end":105578,"line_start":2492,"line_end":2492,"column_start":5,"column_end":69}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105583,"byte_end":105651,"line_start":2493,"line_end":2493,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105656,"byte_end":105724,"line_start":2494,"line_end":2494,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105729,"byte_end":105751,"line_start":2495,"line_end":2495,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105756,"byte_end":105759,"line_start":2496,"line_end":2496,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105764,"byte_end":105832,"line_start":2497,"line_end":2497,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105837,"byte_end":105850,"line_start":2498,"line_end":2498,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105855,"byte_end":105921,"line_start":2499,"line_end":2499,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105926,"byte_end":105955,"line_start":2500,"line_end":2500,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105960,"byte_end":105963,"line_start":2501,"line_end":2501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105968,"byte_end":105982,"line_start":2502,"line_end":2502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105987,"byte_end":105990,"line_start":2503,"line_end":2503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":105995,"byte_end":106002,"line_start":2504,"line_end":2504,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106007,"byte_end":106033,"line_start":2505,"line_end":2505,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106038,"byte_end":106041,"line_start":2506,"line_end":2506,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106046,"byte_end":106074,"line_start":2507,"line_end":2507,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106079,"byte_end":106103,"line_start":2508,"line_end":2508,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106108,"byte_end":106135,"line_start":2509,"line_end":2509,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106140,"byte_end":106215,"line_start":2510,"line_end":2510,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106220,"byte_end":106244,"line_start":2511,"line_end":2511,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106249,"byte_end":106252,"line_start":2512,"line_end":2512,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106257,"byte_end":106282,"line_start":2513,"line_end":2513,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106287,"byte_end":106294,"line_start":2514,"line_end":2514,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106802,"byte_end":106805,"line_start":2533,"line_end":2533,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106393,"byte_end":106457,"line_start":2519,"line_end":2519,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106462,"byte_end":106501,"line_start":2520,"line_end":2520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106506,"byte_end":106509,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106514,"byte_end":106528,"line_start":2522,"line_end":2522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106533,"byte_end":106536,"line_start":2523,"line_end":2523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106541,"byte_end":106548,"line_start":2524,"line_end":2524,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106553,"byte_end":106579,"line_start":2525,"line_end":2525,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106584,"byte_end":106587,"line_start":2526,"line_end":2526,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106592,"byte_end":106653,"line_start":2527,"line_end":2527,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106658,"byte_end":106693,"line_start":2528,"line_end":2528,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106698,"byte_end":106701,"line_start":2529,"line_end":2529,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106706,"byte_end":106747,"line_start":2530,"line_end":2530,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106752,"byte_end":106782,"line_start":2531,"line_end":2531,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106787,"byte_end":106794,"line_start":2532,"line_end":2532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107505,"byte_end":107510,"line_start":2549,"line_end":2549,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106828,"byte_end":106892,"line_start":2535,"line_end":2535,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106897,"byte_end":106953,"line_start":2536,"line_end":2536,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106958,"byte_end":106961,"line_start":2537,"line_end":2537,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":106966,"byte_end":107027,"line_start":2538,"line_end":2538,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107032,"byte_end":107097,"line_start":2539,"line_end":2539,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107102,"byte_end":107161,"line_start":2540,"line_end":2540,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107166,"byte_end":107232,"line_start":2541,"line_end":2541,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107237,"byte_end":107301,"line_start":2542,"line_end":2542,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107306,"byte_end":107363,"line_start":2543,"line_end":2543,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107368,"byte_end":107371,"line_start":2544,"line_end":2544,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107376,"byte_end":107442,"line_start":2545,"line_end":2545,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107447,"byte_end":107461,"line_start":2546,"line_end":2546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107466,"byte_end":107469,"line_start":2547,"line_end":2547,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107474,"byte_end":107497,"line_start":2548,"line_end":2548,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108286,"byte_end":108299,"line_start":2566,"line_end":2566,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107574,"byte_end":107638,"line_start":2551,"line_end":2551,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107643,"byte_end":107699,"line_start":2552,"line_end":2552,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107704,"byte_end":107707,"line_start":2553,"line_end":2553,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107712,"byte_end":107776,"line_start":2554,"line_end":2554,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107781,"byte_end":107844,"line_start":2555,"line_end":2555,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107849,"byte_end":107907,"line_start":2556,"line_end":2556,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107912,"byte_end":107978,"line_start":2557,"line_end":2557,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":107983,"byte_end":108048,"line_start":2558,"line_end":2558,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108053,"byte_end":108119,"line_start":2559,"line_end":2559,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108124,"byte_end":108144,"line_start":2560,"line_end":2560,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108149,"byte_end":108152,"line_start":2561,"line_end":2561,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108157,"byte_end":108223,"line_start":2562,"line_end":2562,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108228,"byte_end":108242,"line_start":2563,"line_end":2563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108247,"byte_end":108250,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108255,"byte_end":108278,"line_start":2565,"line_end":2565,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109449,"byte_end":109469,"line_start":2605,"line_end":2605,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3777}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108372,"byte_end":108438,"line_start":2569,"line_end":2569,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108439,"byte_end":108487,"line_start":2570,"line_end":2570,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108488,"byte_end":108558,"line_start":2571,"line_end":2571,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108559,"byte_end":108588,"line_start":2572,"line_end":2572,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108589,"byte_end":108592,"line_start":2573,"line_end":2573,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108593,"byte_end":108680,"line_start":2574,"line_end":2574,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108681,"byte_end":108684,"line_start":2575,"line_end":2575,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108685,"byte_end":108738,"line_start":2576,"line_end":2576,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108739,"byte_end":108800,"line_start":2577,"line_end":2577,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108801,"byte_end":108804,"line_start":2578,"line_end":2578,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108805,"byte_end":108819,"line_start":2579,"line_end":2579,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108820,"byte_end":108823,"line_start":2580,"line_end":2580,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108824,"byte_end":108878,"line_start":2581,"line_end":2581,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108879,"byte_end":108882,"line_start":2582,"line_end":2582,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108883,"byte_end":108890,"line_start":2583,"line_end":2583,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108891,"byte_end":108917,"line_start":2584,"line_end":2584,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108918,"byte_end":108935,"line_start":2585,"line_end":2585,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108936,"byte_end":108939,"line_start":2586,"line_end":2586,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108940,"byte_end":108962,"line_start":2587,"line_end":2587,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108963,"byte_end":108983,"line_start":2588,"line_end":2588,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108984,"byte_end":108989,"line_start":2589,"line_end":2589,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108990,"byte_end":108993,"line_start":2590,"line_end":2590,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":108994,"byte_end":109051,"line_start":2591,"line_end":2591,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109052,"byte_end":109100,"line_start":2592,"line_end":2592,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109101,"byte_end":109152,"line_start":2593,"line_end":2593,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109153,"byte_end":109162,"line_start":2594,"line_end":2594,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109163,"byte_end":109215,"line_start":2595,"line_end":2595,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109216,"byte_end":109239,"line_start":2596,"line_end":2596,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109240,"byte_end":109301,"line_start":2597,"line_end":2597,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109302,"byte_end":109315,"line_start":2598,"line_end":2598,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109316,"byte_end":109325,"line_start":2599,"line_end":2599,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109326,"byte_end":109331,"line_start":2600,"line_end":2600,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109332,"byte_end":109335,"line_start":2601,"line_end":2601,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109336,"byte_end":109399,"line_start":2602,"line_end":2602,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109400,"byte_end":109430,"line_start":2603,"line_end":2603,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109431,"byte_end":109438,"line_start":2604,"line_end":2604,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110447,"byte_end":110460,"line_start":2624,"line_end":2624,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109498,"byte_end":109578,"line_start":2609,"line_end":2609,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109583,"byte_end":109586,"line_start":2610,"line_end":2610,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109591,"byte_end":109657,"line_start":2611,"line_end":2611,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109662,"byte_end":109727,"line_start":2612,"line_end":2612,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109732,"byte_end":109796,"line_start":2613,"line_end":2613,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109801,"byte_end":109866,"line_start":2614,"line_end":2614,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109871,"byte_end":109919,"line_start":2615,"line_end":2615,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109924,"byte_end":109984,"line_start":2616,"line_end":2616,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":109989,"byte_end":110054,"line_start":2617,"line_end":2617,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110059,"byte_end":110123,"line_start":2618,"line_end":2618,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110128,"byte_end":110131,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110136,"byte_end":110220,"line_start":2620,"line_end":2620,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110225,"byte_end":110287,"line_start":2621,"line_end":2621,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110292,"byte_end":110364,"line_start":2622,"line_end":2622,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110369,"byte_end":110439,"line_start":2623,"line_end":2623,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111359,"byte_end":111373,"line_start":2660,"line_end":2660,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3781}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110541,"byte_end":110632,"line_start":2629,"line_end":2629,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110633,"byte_end":110636,"line_start":2630,"line_end":2630,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110637,"byte_end":110690,"line_start":2631,"line_end":2631,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110691,"byte_end":110694,"line_start":2632,"line_end":2632,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110695,"byte_end":110709,"line_start":2633,"line_end":2633,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110710,"byte_end":110713,"line_start":2634,"line_end":2634,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110714,"byte_end":110762,"line_start":2635,"line_end":2635,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110763,"byte_end":110766,"line_start":2636,"line_end":2636,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110767,"byte_end":110774,"line_start":2637,"line_end":2637,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110775,"byte_end":110801,"line_start":2638,"line_end":2638,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110802,"byte_end":110819,"line_start":2639,"line_end":2639,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110820,"byte_end":110823,"line_start":2640,"line_end":2640,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110824,"byte_end":110846,"line_start":2641,"line_end":2641,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110847,"byte_end":110867,"line_start":2642,"line_end":2642,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110868,"byte_end":110873,"line_start":2643,"line_end":2643,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110874,"byte_end":110877,"line_start":2644,"line_end":2644,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110878,"byte_end":110929,"line_start":2645,"line_end":2645,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110930,"byte_end":110978,"line_start":2646,"line_end":2646,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":110979,"byte_end":111030,"line_start":2647,"line_end":2647,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111031,"byte_end":111040,"line_start":2648,"line_end":2648,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111041,"byte_end":111093,"line_start":2649,"line_end":2649,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111094,"byte_end":111158,"line_start":2650,"line_end":2650,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111159,"byte_end":111168,"line_start":2651,"line_end":2651,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111169,"byte_end":111174,"line_start":2652,"line_end":2652,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111175,"byte_end":111178,"line_start":2653,"line_end":2653,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111179,"byte_end":111218,"line_start":2654,"line_end":2654,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111219,"byte_end":111249,"line_start":2655,"line_end":2655,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111250,"byte_end":111280,"line_start":2656,"line_end":2656,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111281,"byte_end":111309,"line_start":2657,"line_end":2657,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111310,"byte_end":111340,"line_start":2658,"line_end":2658,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111341,"byte_end":111348,"line_start":2659,"line_end":2659,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111801,"byte_end":111811,"line_start":2677,"line_end":2677,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3779},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111402,"byte_end":111467,"line_start":2664,"line_end":2664,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111472,"byte_end":111514,"line_start":2665,"line_end":2665,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111519,"byte_end":111522,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111527,"byte_end":111541,"line_start":2667,"line_end":2667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111546,"byte_end":111549,"line_start":2668,"line_end":2668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111554,"byte_end":111561,"line_start":2669,"line_end":2669,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111566,"byte_end":111592,"line_start":2670,"line_end":2670,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111597,"byte_end":111600,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111605,"byte_end":111630,"line_start":2672,"line_end":2672,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111635,"byte_end":111660,"line_start":2673,"line_end":2673,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111665,"byte_end":111723,"line_start":2674,"line_end":2674,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111728,"byte_end":111781,"line_start":2675,"line_end":2675,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":111786,"byte_end":111793,"line_start":2676,"line_end":2676,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112183,"byte_end":112186,"line_start":2688,"line_end":2688,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112062,"byte_end":112091,"line_start":2685,"line_end":2685,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112096,"byte_end":112099,"line_start":2686,"line_end":2686,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112104,"byte_end":112168,"line_start":2687,"line_end":2687,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":3785},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112228,"byte_end":112230,"line_start":2691,"line_end":2691,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112245,"byte_end":112250,"line_start":2692,"line_end":2692,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112263,"byte_end":112274,"line_start":2693,"line_end":2693,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112326,"byte_end":112333,"line_start":2694,"line_end":2694,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"pub fn from_ok(Self::Ok) -> Self","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112367,"byte_end":112377,"line_start":2695,"line_end":2695,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"pub fn from_error(Self::Error) -> Self","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":5560},{"krate":0,"index":5566},{"krate":0,"index":5563},{"krate":0,"index":3812},{"krate":0,"index":3817},{"krate":0,"index":3823},{"krate":0,"index":5569},{"krate":0,"index":5573},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":5585},{"krate":0,"index":5577},{"krate":0,"index":5592},{"krate":0,"index":5596},{"krate":0,"index":3840},{"krate":0,"index":5608},{"krate":0,"index":5600},{"krate":0,"index":3846},{"krate":0,"index":3849},{"krate":0,"index":3855}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":356969,"byte_end":357023,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357024,"byte_end":357027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357028,"byte_end":357106,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357107,"byte_end":357145,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357146,"byte_end":357149,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357150,"byte_end":357213,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357816,"byte_end":357824,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5562}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357308,"byte_end":357384,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357385,"byte_end":357388,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357389,"byte_end":357471,"line_start":15,"line_end":15,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357472,"byte_end":357475,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357476,"byte_end":357539,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357540,"byte_end":357543,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357544,"byte_end":357613,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357614,"byte_end":357694,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357695,"byte_end":357780,"line_start":21,"line_end":21,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359466,"byte_end":359470,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5572}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358971,"byte_end":359053,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359054,"byte_end":359057,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359058,"byte_end":359140,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359141,"byte_end":359144,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359145,"byte_end":359203,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359204,"byte_end":359207,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359208,"byte_end":359277,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359278,"byte_end":359358,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359359,"byte_end":359437,"line_start":86,"line_end":86,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360509,"byte_end":360516,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5595}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359991,"byte_end":360081,"line_start":116,"line_end":116,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360082,"byte_end":360085,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360086,"byte_end":360168,"line_start":118,"line_end":118,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360169,"byte_end":360172,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360173,"byte_end":360235,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360236,"byte_end":360239,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360240,"byte_end":360309,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360310,"byte_end":360390,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":360391,"byte_end":360480,"line_start":124,"line_end":124,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362291,"byte_end":362359,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362360,"byte_end":362429,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\prelude.rs","byte_start":362430,"byte_end":362499,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":5615},{"krate":0,"index":5621},{"krate":0,"index":5618},{"krate":0,"index":3878},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3892},{"krate":0,"index":5624},{"krate":0,"index":5629},{"krate":0,"index":5635},{"krate":0,"index":5640},{"krate":0,"index":5645},{"krate":0,"index":5651},{"krate":0,"index":5656},{"krate":0,"index":5661},{"krate":0,"index":5667},{"krate":0,"index":5672},{"krate":0,"index":5677},{"krate":0,"index":5683},{"krate":0,"index":5688},{"krate":0,"index":5693},{"krate":0,"index":5699},{"krate":0,"index":5704},{"krate":0,"index":5709},{"krate":0,"index":5715},{"krate":0,"index":5720},{"krate":0,"index":5725},{"krate":0,"index":5731},{"krate":0,"index":5736},{"krate":0,"index":5741},{"krate":0,"index":5747},{"krate":0,"index":5752},{"krate":0,"index":5754},{"krate":0,"index":5760},{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5773},{"krate":0,"index":5778},{"krate":0,"index":5780},{"krate":0,"index":5786},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5799}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":362878,"byte_end":362931,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":362932,"byte_end":362985,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":362986,"byte_end":362989,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":362990,"byte_end":363068,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363069,"byte_end":363112,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363113,"byte_end":363116,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363117,"byte_end":363124,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363125,"byte_end":363151,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363152,"byte_end":363155,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363156,"byte_end":363195,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363196,"byte_end":363226,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363227,"byte_end":363230,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363231,"byte_end":363280,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363281,"byte_end":363322,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363323,"byte_end":363330,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363331,"byte_end":363334,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363335,"byte_end":363405,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364210,"byte_end":364214,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5617}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363481,"byte_end":363551,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363552,"byte_end":363555,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363556,"byte_end":363624,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363625,"byte_end":363690,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363691,"byte_end":363694,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363695,"byte_end":363702,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363703,"byte_end":363729,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363730,"byte_end":363733,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363734,"byte_end":363774,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363775,"byte_end":363813,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363814,"byte_end":363879,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363880,"byte_end":363922,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363923,"byte_end":363961,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363962,"byte_end":363965,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":363966,"byte_end":364001,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364002,"byte_end":364067,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364068,"byte_end":364110,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364111,"byte_end":364140,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364141,"byte_end":364144,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364145,"byte_end":364166,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364167,"byte_end":364174,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","parent":null,"children":[{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":5804},{"krate":0,"index":5810},{"krate":0,"index":5807},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":5819},{"krate":0,"index":5813},{"krate":0,"index":5830},{"krate":0,"index":5824},{"krate":0,"index":5841},{"krate":0,"index":5835},{"krate":0,"index":5852},{"krate":0,"index":5846},{"krate":0,"index":5857},{"krate":0,"index":5862},{"krate":0,"index":5867},{"krate":0,"index":5872},{"krate":0,"index":5877},{"krate":0,"index":5882},{"krate":0,"index":5887},{"krate":0,"index":5892}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371467,"byte_end":371530,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371531,"byte_end":371585,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371586,"byte_end":371589,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371590,"byte_end":371668,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371669,"byte_end":371712,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371713,"byte_end":371716,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371717,"byte_end":371724,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371725,"byte_end":371751,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371752,"byte_end":371755,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371756,"byte_end":371796,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371797,"byte_end":371828,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371829,"byte_end":371832,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371833,"byte_end":371882,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371883,"byte_end":371925,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371926,"byte_end":371933,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371934,"byte_end":371937,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":371938,"byte_end":372017,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372823,"byte_end":372827,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5806}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372086,"byte_end":372167,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372168,"byte_end":372171,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372172,"byte_end":372240,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, and `i16`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372241,"byte_end":372304,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372305,"byte_end":372308,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372309,"byte_end":372316,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372317,"byte_end":372343,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372344,"byte_end":372347,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372348,"byte_end":372387,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372388,"byte_end":372425,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372426,"byte_end":372491,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372492,"byte_end":372534,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372535,"byte_end":372571,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372572,"byte_end":372575,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372576,"byte_end":372614,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372615,"byte_end":372680,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372681,"byte_end":372723,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372724,"byte_end":372753,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372754,"byte_end":372757,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372758,"byte_end":372779,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372780,"byte_end":372787,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","parent":null,"children":[{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":5897},{"krate":0,"index":5903},{"krate":0,"index":5900},{"krate":0,"index":3916},{"krate":0,"index":5913},{"krate":0,"index":5906},{"krate":0,"index":5919},{"krate":0,"index":5923},{"krate":0,"index":3922},{"krate":0,"index":3926},{"krate":0,"index":5935},{"krate":0,"index":5927},{"krate":0,"index":5942},{"krate":0,"index":5946},{"krate":0,"index":3933},{"krate":0,"index":5958},{"krate":0,"index":5950},{"krate":0,"index":3940}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377397,"byte_end":377451,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377452,"byte_end":377455,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377456,"byte_end":377534,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377535,"byte_end":377573,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377574,"byte_end":377577,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377578,"byte_end":377641,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377786,"byte_end":377794,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5899}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377715,"byte_end":377750,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5919},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378236,"byte_end":378240,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5922}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378146,"byte_end":378207,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378867,"byte_end":378874,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5945}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378780,"byte_end":378838,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":3947},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":4030},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":6693},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4166},{"krate":0,"index":4172},{"krate":0,"index":4178},{"krate":0,"index":5987},{"krate":0,"index":5991},{"krate":0,"index":4184},{"krate":0,"index":4188},{"krate":0,"index":4195},{"krate":0,"index":4203},{"krate":0,"index":4207},{"krate":0,"index":5995},{"krate":0,"index":6000},{"krate":0,"index":4214},{"krate":0,"index":4218},{"krate":0,"index":4225},{"krate":0,"index":4233},{"krate":0,"index":4238},{"krate":0,"index":6004},{"krate":0,"index":6009},{"krate":0,"index":4245},{"krate":0,"index":4249},{"krate":0,"index":4256},{"krate":0,"index":4264},{"krate":0,"index":4269},{"krate":0,"index":6013},{"krate":0,"index":6017},{"krate":0,"index":4276},{"krate":0,"index":4283},{"krate":0,"index":4291},{"krate":0,"index":4295},{"krate":0,"index":6021},{"krate":0,"index":6026},{"krate":0,"index":4302},{"krate":0,"index":4309},{"krate":0,"index":4317},{"krate":0,"index":4322},{"krate":0,"index":4329},{"krate":0,"index":4335},{"krate":0,"index":4340},{"krate":0,"index":4345},{"krate":0,"index":4352},{"krate":0,"index":4363},{"krate":0,"index":4369},{"krate":0,"index":4374},{"krate":0,"index":4381}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380666,"byte_end":380718,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380719,"byte_end":380722,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380723,"byte_end":380801,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380802,"byte_end":380840,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380841,"byte_end":380844,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":380845,"byte_end":380906,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381227,"byte_end":381240,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":4129}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381181,"byte_end":381216,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381359,"byte_end":381376,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":4123},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381256,"byte_end":381325,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381330,"byte_end":381351,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381809,"byte_end":381818,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":4123},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381398,"byte_end":381471,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381476,"byte_end":381500,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381505,"byte_end":381508,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381513,"byte_end":381527,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381532,"byte_end":381535,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381540,"byte_end":381547,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381552,"byte_end":381578,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381583,"byte_end":381635,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381640,"byte_end":381671,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381676,"byte_end":381729,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381734,"byte_end":381749,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381754,"byte_end":381789,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":381794,"byte_end":381801,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382352,"byte_end":382363,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":4123},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382024,"byte_end":382093,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382098,"byte_end":382137,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382142,"byte_end":382145,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382150,"byte_end":382164,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382169,"byte_end":382172,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382177,"byte_end":382184,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382189,"byte_end":382215,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382220,"byte_end":382281,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382286,"byte_end":382332,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382337,"byte_end":382344,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383076,"byte_end":383086,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":4123},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382520,"byte_end":382589,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382594,"byte_end":382642,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382647,"byte_end":382650,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382655,"byte_end":382720,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382725,"byte_end":382796,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382801,"byte_end":382846,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382851,"byte_end":382854,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382859,"byte_end":382873,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382878,"byte_end":382881,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382886,"byte_end":382893,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382898,"byte_end":382924,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382929,"byte_end":382994,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":382999,"byte_end":383056,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383061,"byte_end":383068,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383475,"byte_end":383491,"line_start":101,"line_end":101,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4148},{"krate":0,"index":4150},{"krate":0,"index":4153}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383421,"byte_end":383464,"line_start":100,"line_end":100,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383618,"byte_end":383639,"line_start":104,"line_end":104,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383507,"byte_end":383580,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383585,"byte_end":383610,"line_start":103,"line_end":103,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384088,"byte_end":384101,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383669,"byte_end":383736,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383741,"byte_end":383779,"line_start":107,"line_end":107,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383784,"byte_end":383787,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383792,"byte_end":383806,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383811,"byte_end":383814,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383819,"byte_end":383826,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383831,"byte_end":383857,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383862,"byte_end":383916,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383921,"byte_end":383957,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":383962,"byte_end":384006,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384011,"byte_end":384068,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384073,"byte_end":384080,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384927,"byte_end":384941,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384321,"byte_end":384390,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384395,"byte_end":384459,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384464,"byte_end":384467,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384472,"byte_end":384537,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384542,"byte_end":384613,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384618,"byte_end":384663,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384668,"byte_end":384671,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384676,"byte_end":384690,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384695,"byte_end":384698,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384703,"byte_end":384710,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384715,"byte_end":384741,"line_start":138,"line_end":138,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384746,"byte_end":384782,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384787,"byte_end":384814,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384819,"byte_end":384863,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384868,"byte_end":384907,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":384912,"byte_end":384919,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386630,"byte_end":386638,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385173,"byte_end":385205,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385210,"byte_end":385213,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385218,"byte_end":385309,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385314,"byte_end":385317,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385322,"byte_end":385415,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385420,"byte_end":385473,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385478,"byte_end":385535,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385540,"byte_end":385543,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385548,"byte_end":385576,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385581,"byte_end":385584,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385589,"byte_end":385652,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385657,"byte_end":385710,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385715,"byte_end":385807,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385812,"byte_end":385876,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385881,"byte_end":385884,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385889,"byte_end":385982,"line_start":167,"line_end":167,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":385987,"byte_end":386037,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386042,"byte_end":386045,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386050,"byte_end":386144,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386149,"byte_end":386243,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386248,"byte_end":386344,"line_start":172,"line_end":172,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386349,"byte_end":386413,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386418,"byte_end":386421,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386426,"byte_end":386440,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386445,"byte_end":386448,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386453,"byte_end":386460,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386465,"byte_end":386491,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386496,"byte_end":386499,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386504,"byte_end":386538,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386543,"byte_end":386546,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386551,"byte_end":386568,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386573,"byte_end":386610,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386615,"byte_end":386622,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388373,"byte_end":388384,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386762,"byte_end":386821,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386826,"byte_end":386829,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386834,"byte_end":386925,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386930,"byte_end":386933,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":386938,"byte_end":387031,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387036,"byte_end":387089,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387094,"byte_end":387157,"line_start":198,"line_end":198,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387162,"byte_end":387165,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387170,"byte_end":387198,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387203,"byte_end":387206,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387211,"byte_end":387274,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387279,"byte_end":387332,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387337,"byte_end":387429,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387434,"byte_end":387498,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387503,"byte_end":387506,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387511,"byte_end":387604,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387609,"byte_end":387659,"line_start":208,"line_end":208,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387664,"byte_end":387667,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387672,"byte_end":387766,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387771,"byte_end":387865,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387870,"byte_end":387966,"line_start":212,"line_end":212,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":387971,"byte_end":388035,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388040,"byte_end":388043,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388048,"byte_end":388062,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388067,"byte_end":388070,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388075,"byte_end":388082,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388087,"byte_end":388113,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388118,"byte_end":388121,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388126,"byte_end":388158,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388163,"byte_end":388198,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388203,"byte_end":388238,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388243,"byte_end":388246,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388251,"byte_end":388273,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388278,"byte_end":388313,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388318,"byte_end":388353,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388358,"byte_end":388365,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390120,"byte_end":390135,"line_start":270,"line_end":270,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) -> B + Sync","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388597,"byte_end":388660,"line_start":237,"line_end":237,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388665,"byte_end":388668,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388673,"byte_end":388764,"line_start":239,"line_end":239,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388769,"byte_end":388772,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388777,"byte_end":388870,"line_start":241,"line_end":241,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388875,"byte_end":388928,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":388933,"byte_end":389004,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389009,"byte_end":389012,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389017,"byte_end":389045,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389050,"byte_end":389053,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389058,"byte_end":389121,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389126,"byte_end":389179,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389184,"byte_end":389276,"line_start":249,"line_end":249,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389281,"byte_end":389345,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389350,"byte_end":389353,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389358,"byte_end":389451,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389456,"byte_end":389506,"line_start":253,"line_end":253,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389511,"byte_end":389514,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389519,"byte_end":389613,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389618,"byte_end":389712,"line_start":256,"line_end":256,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389717,"byte_end":389813,"line_start":257,"line_end":257,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389818,"byte_end":389882,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389887,"byte_end":389890,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389895,"byte_end":389909,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389914,"byte_end":389917,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389922,"byte_end":389929,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389934,"byte_end":389960,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389965,"byte_end":389968,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":389973,"byte_end":390010,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390015,"byte_end":390018,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390023,"byte_end":390058,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390063,"byte_end":390100,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390105,"byte_end":390112,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391580,"byte_end":391597,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but may not preserve the order of equal elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390309,"byte_end":390391,"line_start":278,"line_end":278,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390396,"byte_end":390399,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390404,"byte_end":390499,"line_start":280,"line_end":280,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390504,"byte_end":390536,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390541,"byte_end":390544,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390549,"byte_end":390577,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390582,"byte_end":390585,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390590,"byte_end":390681,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390686,"byte_end":390773,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390778,"byte_end":390868,"line_start":287,"line_end":287,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390873,"byte_end":390907,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390912,"byte_end":390915,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":390920,"byte_end":391012,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391017,"byte_end":391077,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391082,"byte_end":391085,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391090,"byte_end":391179,"line_start":293,"line_end":293,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391184,"byte_end":391277,"line_start":294,"line_end":294,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391282,"byte_end":391295,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391300,"byte_end":391303,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391308,"byte_end":391354,"line_start":297,"line_end":297,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391359,"byte_end":391362,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391367,"byte_end":391381,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391386,"byte_end":391389,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391394,"byte_end":391401,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391406,"byte_end":391432,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391437,"byte_end":391440,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391445,"byte_end":391479,"line_start":304,"line_end":304,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391484,"byte_end":391487,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391492,"byte_end":391518,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391523,"byte_end":391560,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391565,"byte_end":391572,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393157,"byte_end":393177,"line_start":351,"line_end":351,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but may not preserve the order of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391721,"byte_end":391814,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ equal elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391819,"byte_end":391838,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391843,"byte_end":391846,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391851,"byte_end":391946,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391951,"byte_end":391983,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391988,"byte_end":391991,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":391996,"byte_end":392024,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392029,"byte_end":392032,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392037,"byte_end":392128,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392133,"byte_end":392220,"line_start":325,"line_end":325,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392225,"byte_end":392315,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392320,"byte_end":392354,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392359,"byte_end":392362,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392367,"byte_end":392459,"line_start":329,"line_end":329,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392464,"byte_end":392524,"line_start":330,"line_end":330,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392529,"byte_end":392532,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392537,"byte_end":392626,"line_start":332,"line_end":332,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392631,"byte_end":392724,"line_start":333,"line_end":333,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392729,"byte_end":392742,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392747,"byte_end":392750,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392755,"byte_end":392801,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392806,"byte_end":392809,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392814,"byte_end":392828,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392833,"byte_end":392836,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392841,"byte_end":392848,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392853,"byte_end":392879,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392884,"byte_end":392887,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392892,"byte_end":392924,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392929,"byte_end":392973,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":392978,"byte_end":393013,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393018,"byte_end":393021,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393026,"byte_end":393048,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393053,"byte_end":393097,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393102,"byte_end":393137,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393142,"byte_end":393149,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394721,"byte_end":394745,"line_start":392,"line_end":392,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) ->\nB + Sync","parent":{"krate":0,"index":4133},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but may not preserve the order","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393390,"byte_end":393484,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ of equal elements.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393489,"byte_end":393511,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393516,"byte_end":393519,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393524,"byte_end":393619,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393624,"byte_end":393656,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393661,"byte_end":393664,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393669,"byte_end":393697,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393702,"byte_end":393705,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393710,"byte_end":393801,"line_start":368,"line_end":368,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393806,"byte_end":393893,"line_start":369,"line_end":369,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393898,"byte_end":393988,"line_start":370,"line_end":370,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":393993,"byte_end":394027,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394032,"byte_end":394035,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394040,"byte_end":394132,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394137,"byte_end":394197,"line_start":374,"line_end":374,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394202,"byte_end":394205,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394210,"byte_end":394299,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394304,"byte_end":394397,"line_start":377,"line_end":377,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394402,"byte_end":394415,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394420,"byte_end":394423,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394428,"byte_end":394474,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394479,"byte_end":394482,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394487,"byte_end":394501,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394506,"byte_end":394509,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394514,"byte_end":394521,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394526,"byte_end":394552,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394557,"byte_end":394560,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394565,"byte_end":394602,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394607,"byte_end":394610,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394615,"byte_end":394659,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394664,"byte_end":394701,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":394706,"byte_end":394713,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5987},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":395995,"byte_end":395999,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5990}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":395913,"byte_end":395966,"line_start":444,"line_end":444,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5995},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397525,"byte_end":397531,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5998},{"krate":0,"index":5999}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397426,"byte_end":397496,"line_start":509,"line_end":509,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6004},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399500,"byte_end":399507,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":6007},{"krate":0,"index":6008}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399404,"byte_end":399471,"line_start":589,"line_end":589,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6013},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401560,"byte_end":401567,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6016}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401480,"byte_end":401531,"line_start":671,"line_end":671,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403062,"byte_end":403071,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":6024},{"krate":0,"index":6025}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402965,"byte_end":403033,"line_start":733,"line_end":733,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404946,"byte_end":404951,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404876,"byte_end":404934,"line_start":807,"line_end":807,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4363},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406827,"byte_end":406835,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406749,"byte_end":406815,"line_start":883,"line_end":883,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","parent":null,"children":[{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4447},{"krate":0,"index":6033},{"krate":0,"index":6039},{"krate":0,"index":6036},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4470},{"krate":0,"index":6042},{"krate":0,"index":6048},{"krate":0,"index":6045},{"krate":0,"index":4476},{"krate":0,"index":4480},{"krate":0,"index":4485},{"krate":0,"index":6051},{"krate":0,"index":6057},{"krate":0,"index":6054},{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4500},{"krate":0,"index":6060},{"krate":0,"index":6066},{"krate":0,"index":6063},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4514},{"krate":0,"index":6069},{"krate":0,"index":6078},{"krate":0,"index":6074},{"krate":0,"index":4520},{"krate":0,"index":4524},{"krate":0,"index":4530},{"krate":0,"index":6082},{"krate":0,"index":6091},{"krate":0,"index":6087},{"krate":0,"index":4540},{"krate":0,"index":4546},{"krate":0,"index":4550},{"krate":0,"index":4555},{"krate":0,"index":4561},{"krate":0,"index":6095},{"krate":0,"index":6102},{"krate":0,"index":6099},{"krate":0,"index":4570},{"krate":0,"index":6105},{"krate":0,"index":6112},{"krate":0,"index":6109},{"krate":0,"index":4576},{"krate":0,"index":6115},{"krate":0,"index":6124},{"krate":0,"index":6120},{"krate":0,"index":4582},{"krate":0,"index":4588},{"krate":0,"index":4594},{"krate":0,"index":6128},{"krate":0,"index":6137},{"krate":0,"index":6133},{"krate":0,"index":4602},{"krate":0,"index":4609},{"krate":0,"index":4615}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468385,"byte_end":468436,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468437,"byte_end":468440,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468441,"byte_end":468519,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468520,"byte_end":468558,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468559,"byte_end":468562,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468563,"byte_end":468635,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468636,"byte_end":468708,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468709,"byte_end":468784,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468785,"byte_end":468862,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468863,"byte_end":468866,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468867,"byte_end":468946,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":468947,"byte_end":469032,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":469033,"byte_end":469036,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":469037,"byte_end":469094,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470322,"byte_end":470336,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4413}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470275,"byte_end":470311,"line_start":58,"line_end":58,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470453,"byte_end":470471,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470343,"byte_end":470415,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470420,"byte_end":470445,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470756,"byte_end":470765,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470493,"byte_end":470557,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470562,"byte_end":470565,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470570,"byte_end":470584,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470589,"byte_end":470592,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470597,"byte_end":470604,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470609,"byte_end":470635,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470640,"byte_end":470700,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470705,"byte_end":470736,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470741,"byte_end":470748,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4402},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471174,"byte_end":471190,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470871,"byte_end":470957,"line_start":79,"line_end":79,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470962,"byte_end":470965,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470970,"byte_end":470984,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470989,"byte_end":470992,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":470997,"byte_end":471004,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471009,"byte_end":471035,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471040,"byte_end":471113,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471118,"byte_end":471154,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471159,"byte_end":471166,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471850,"byte_end":471859,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471308,"byte_end":471367,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471372,"byte_end":471375,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471380,"byte_end":471454,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471459,"byte_end":471532,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471537,"byte_end":471613,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().cloned()` instead.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471618,"byte_end":471670,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471675,"byte_end":471678,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471683,"byte_end":471697,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471702,"byte_end":471705,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471710,"byte_end":471717,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471722,"byte_end":471748,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471753,"byte_end":471793,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471798,"byte_end":471830,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471835,"byte_end":471842,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472580,"byte_end":472596,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":471965,"byte_end":472029,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472034,"byte_end":472037,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472042,"byte_end":472115,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472120,"byte_end":472189,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472194,"byte_end":472197,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472202,"byte_end":472216,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472221,"byte_end":472224,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472229,"byte_end":472236,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472241,"byte_end":472267,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472272,"byte_end":472275,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472280,"byte_end":472327,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472332,"byte_end":472371,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472376,"byte_end":472379,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472384,"byte_end":472428,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472433,"byte_end":472463,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472468,"byte_end":472520,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472525,"byte_end":472560,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472565,"byte_end":472572,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473284,"byte_end":473293,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472714,"byte_end":472776,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472781,"byte_end":472839,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472844,"byte_end":472847,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472852,"byte_end":472923,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":472928,"byte_end":473005,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473010,"byte_end":473013,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473018,"byte_end":473032,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473037,"byte_end":473040,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473045,"byte_end":473052,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473057,"byte_end":473083,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473088,"byte_end":473130,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473135,"byte_end":473157,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473162,"byte_end":473214,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473219,"byte_end":473233,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473238,"byte_end":473264,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473269,"byte_end":473276,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474122,"byte_end":474142,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473413,"byte_end":473476,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473481,"byte_end":473550,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473555,"byte_end":473625,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473630,"byte_end":473672,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473677,"byte_end":473680,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473685,"byte_end":473756,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473761,"byte_end":473838,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473843,"byte_end":473846,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473851,"byte_end":473865,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473870,"byte_end":473873,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473878,"byte_end":473885,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473890,"byte_end":473916,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473921,"byte_end":473960,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":473965,"byte_end":474020,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474025,"byte_end":474044,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474049,"byte_end":474102,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474107,"byte_end":474114,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474813,"byte_end":474822,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474284,"byte_end":474358,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474363,"byte_end":474433,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474438,"byte_end":474513,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474518,"byte_end":474541,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474546,"byte_end":474549,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474554,"byte_end":474568,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474573,"byte_end":474576,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474581,"byte_end":474588,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474593,"byte_end":474619,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474624,"byte_end":474672,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474677,"byte_end":474697,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474702,"byte_end":474727,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474732,"byte_end":474751,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474756,"byte_end":474793,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474798,"byte_end":474805,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475447,"byte_end":475467,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474897,"byte_end":474969,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":474974,"byte_end":475016,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475021,"byte_end":475024,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475029,"byte_end":475102,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475107,"byte_end":475172,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475177,"byte_end":475180,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475185,"byte_end":475199,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475204,"byte_end":475207,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475212,"byte_end":475219,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475224,"byte_end":475250,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475255,"byte_end":475301,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475306,"byte_end":475337,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475342,"byte_end":475381,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475386,"byte_end":475427,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475432,"byte_end":475439,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476144,"byte_end":476155,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475562,"byte_end":475622,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475627,"byte_end":475687,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475692,"byte_end":475695,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475700,"byte_end":475771,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475776,"byte_end":475853,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475858,"byte_end":475861,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475866,"byte_end":475880,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475885,"byte_end":475888,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475893,"byte_end":475900,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475905,"byte_end":475931,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475936,"byte_end":475978,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":475983,"byte_end":476020,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476025,"byte_end":476074,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476079,"byte_end":476093,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476098,"byte_end":476124,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476129,"byte_end":476136,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476933,"byte_end":476950,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476313,"byte_end":476389,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476394,"byte_end":476466,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476471,"byte_end":476474,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476479,"byte_end":476550,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476555,"byte_end":476632,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476637,"byte_end":476640,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476645,"byte_end":476659,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476664,"byte_end":476667,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476672,"byte_end":476679,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476684,"byte_end":476710,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476715,"byte_end":476766,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476771,"byte_end":476814,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476819,"byte_end":476837,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476842,"byte_end":476913,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":476918,"byte_end":476925,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4419},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477840,"byte_end":477847,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4426},{"krate":0,"index":4429}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477627,"byte_end":477698,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477703,"byte_end":477748,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477753,"byte_end":477756,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477761,"byte_end":477825,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477907,"byte_end":477914,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477967,"byte_end":477975,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4422},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478028,"byte_end":478040,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478084,"byte_end":478095,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4426},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478222,"byte_end":478234,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":478344,"byte_end":478362,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":4419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480753,"byte_end":480758,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":6035}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480664,"byte_end":480717,"line_start":388,"line_end":388,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6042},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481800,"byte_end":481811,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":6044}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481689,"byte_end":481764,"line_start":432,"line_end":432,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483198,"byte_end":483203,"line_start":490,"line_end":490,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":6053}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483114,"byte_end":483162,"line_start":488,"line_end":488,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6060},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484219,"byte_end":484230,"line_start":534,"line_end":534,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":6062}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484130,"byte_end":484183,"line_start":532,"line_end":532,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6069},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485298,"byte_end":485303,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6073}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485202,"byte_end":485262,"line_start":576,"line_end":576,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":486972,"byte_end":486987,"line_start":639,"line_end":639,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":6085},{"krate":0,"index":6086}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":486865,"byte_end":486936,"line_start":637,"line_end":637,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6095},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488852,"byte_end":488857,"line_start":705,"line_end":705,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488772,"byte_end":488816,"line_start":703,"line_end":703,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6105},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489535,"byte_end":489550,"line_start":731,"line_end":731,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489438,"byte_end":489499,"line_start":729,"line_end":729,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490093,"byte_end":490100,"line_start":751,"line_end":751,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":6118},{"krate":0,"index":6119}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489999,"byte_end":490057,"line_start":749,"line_end":749,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491508,"byte_end":491520,"line_start":807,"line_end":807,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":6131},{"krate":0,"index":6132}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491392,"byte_end":491472,"line_start":805,"line_end":805,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":4623},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","parent":null,"children":[{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":6141},{"krate":0,"index":6147},{"krate":0,"index":6144},{"krate":0,"index":4627},{"krate":0,"index":4632},{"krate":0,"index":4638},{"krate":0,"index":4645},{"krate":0,"index":4649},{"krate":0,"index":4656},{"krate":0,"index":4660},{"krate":0,"index":4664},{"krate":0,"index":4670},{"krate":0,"index":4674},{"krate":0,"index":4678}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":492905,"byte_end":492967,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":492968,"byte_end":492971,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":492972,"byte_end":493050,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493051,"byte_end":493089,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493090,"byte_end":493093,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493094,"byte_end":493151,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493284,"byte_end":493292,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6143}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493199,"byte_end":493248,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13045,"byte_end":13055,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13517,"byte_end":13521,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14710,"byte_end":14714,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16219,"byte_end":16223,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17476,"byte_end":17480,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19120,"byte_end":19124,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20214,"byte_end":20218,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21609,"byte_end":21613,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114835,"byte_end":114836,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115346,"byte_end":115356,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116325,"byte_end":116345,"line_start":106,"line_end":106,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116637,"byte_end":116657,"line_start":117,"line_end":117,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120561,"byte_end":120566,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120794,"byte_end":120799,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":121902,"byte_end":121907,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":122842,"byte_end":122851,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":123529,"byte_end":123538,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124207,"byte_end":124220,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124403,"byte_end":124416,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126028,"byte_end":126036,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126250,"byte_end":126258,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126554,"byte_end":126562,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126683,"byte_end":126691,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127315,"byte_end":127327,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127481,"byte_end":127493,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128078,"byte_end":128090,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128454,"byte_end":128464,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":129350,"byte_end":129361,"line_start":112,"line_end":112,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":131887,"byte_end":131899,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":132449,"byte_end":132461,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":133527,"byte_end":133539,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":135101,"byte_end":135111,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":136819,"byte_end":136830,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137653,"byte_end":137659,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137858,"byte_end":137864,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138197,"byte_end":138203,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138901,"byte_end":138909,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":139482,"byte_end":139495,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":140614,"byte_end":140622,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141300,"byte_end":141308,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141469,"byte_end":141477,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":148736,"byte_end":148751,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":149044,"byte_end":149059,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":150086,"byte_end":150099,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":151110,"byte_end":151125,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":144484,"byte_end":144491,"line_start":77,"line_end":77,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":146157,"byte_end":146160,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159602,"byte_end":159611,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159804,"byte_end":159813,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160157,"byte_end":160166,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160672,"byte_end":160680,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":161264,"byte_end":161281,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163087,"byte_end":163093,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163253,"byte_end":163259,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163470,"byte_end":163476,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164024,"byte_end":164038,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164189,"byte_end":164203,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164947,"byte_end":164961,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":165348,"byte_end":165360,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166636,"byte_end":166645,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166852,"byte_end":166861,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167050,"byte_end":167059,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167626,"byte_end":167643,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167796,"byte_end":167813,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":168599,"byte_end":168616,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":169021,"byte_end":169036,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170338,"byte_end":170345,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170524,"byte_end":170531,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170711,"byte_end":170718,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171333,"byte_end":171348,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171493,"byte_end":171508,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172300,"byte_end":172315,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172759,"byte_end":172772,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174344,"byte_end":174351,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174585,"byte_end":174592,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":174976,"byte_end":174980,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175777,"byte_end":175781,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175971,"byte_end":175975,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":176592,"byte_end":176604,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177460,"byte_end":177472,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177945,"byte_end":177955,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":178952,"byte_end":178960,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179749,"byte_end":179757,"line_start":203,"line_end":203,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180011,"byte_end":180019,"line_start":212,"line_end":212,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180591,"byte_end":180607,"line_start":239,"line_end":239,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":181525,"byte_end":181541,"line_start":278,"line_end":278,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182274,"byte_end":182289,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182685,"byte_end":182700,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":183142,"byte_end":183157,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184009,"byte_end":184012,"line_start":21,"line_end":21,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184281,"byte_end":184289,"line_start":34,"line_end":34,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184645,"byte_end":184655,"line_start":48,"line_end":48,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184964,"byte_end":184974,"line_start":62,"line_end":62,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185437,"byte_end":185444,"line_start":78,"line_end":78,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185978,"byte_end":185986,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186285,"byte_end":186292,"line_start":110,"line_end":110,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186614,"byte_end":186622,"line_start":124,"line_end":124,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186900,"byte_end":186906,"line_start":137,"line_end":137,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187167,"byte_end":187173,"line_start":147,"line_end":147,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187440,"byte_end":187446,"line_start":157,"line_end":157,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187709,"byte_end":187715,"line_start":167,"line_end":167,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187985,"byte_end":187991,"line_start":177,"line_end":177,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":188434,"byte_end":188437,"line_start":191,"line_end":191,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":200552,"byte_end":200560,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":201679,"byte_end":201693,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204051,"byte_end":204059,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208322,"byte_end":208329,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209231,"byte_end":209238,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209434,"byte_end":209441,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":210145,"byte_end":210160,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211051,"byte_end":211066,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211588,"byte_end":211601,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212327,"byte_end":212338,"line_start":165,"line_end":165,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213179,"byte_end":213190,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213471,"byte_end":213482,"line_start":206,"line_end":206,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":214096,"byte_end":214115,"line_start":234,"line_end":234,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":215078,"byte_end":215097,"line_start":274,"line_end":274,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":215994,"byte_end":216008,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216050,"byte_end":216064,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216166,"byte_end":216180,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216707,"byte_end":216721,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216970,"byte_end":216984,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":217229,"byte_end":217241,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218356,"byte_end":218360,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218592,"byte_end":218596,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218931,"byte_end":218935,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":219516,"byte_end":219524,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220677,"byte_end":220694,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220736,"byte_end":220753,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220855,"byte_end":220872,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221486,"byte_end":221503,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221770,"byte_end":221787,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":222267,"byte_end":222282,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223548,"byte_end":223569,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223603,"byte_end":223624,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223718,"byte_end":223739,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224318,"byte_end":224339,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224576,"byte_end":224597,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":225256,"byte_end":225275,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230591,"byte_end":230596,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230776,"byte_end":230781,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":231273,"byte_end":231286,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232247,"byte_end":232251,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232483,"byte_end":232487,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232822,"byte_end":232826,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":233389,"byte_end":233397,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234335,"byte_end":234338,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234495,"byte_end":234498,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234700,"byte_end":234703,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235177,"byte_end":235180,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235922,"byte_end":235930,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":236613,"byte_end":236624,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237800,"byte_end":237811,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237952,"byte_end":237963,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":238702,"byte_end":238713,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":239108,"byte_end":239117,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240354,"byte_end":240361,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240593,"byte_end":240600,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240831,"byte_end":240838,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":241354,"byte_end":241361,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":242206,"byte_end":242214,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":243001,"byte_end":243016,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244353,"byte_end":244364,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244745,"byte_end":244756,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245047,"byte_end":245058,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245376,"byte_end":245391,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245557,"byte_end":245572,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246416,"byte_end":246431,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246895,"byte_end":246908,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248306,"byte_end":248313,"line_start":347,"line_end":347,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248486,"byte_end":248493,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248736,"byte_end":248743,"line_start":363,"line_end":363,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":249283,"byte_end":249290,"line_start":385,"line_end":385,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250165,"byte_end":250173,"line_start":420,"line_end":420,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250991,"byte_end":251006,"line_start":452,"line_end":452,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252464,"byte_end":252479,"line_start":515,"line_end":515,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252661,"byte_end":252676,"line_start":521,"line_end":521,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":253532,"byte_end":253547,"line_start":554,"line_end":554,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254462,"byte_end":254465,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254687,"byte_end":254690,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255074,"byte_end":255077,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255737,"byte_end":255746,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":256367,"byte_end":256376,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":257033,"byte_end":257044,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258453,"byte_end":258458,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258727,"byte_end":258732,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":259124,"byte_end":259129,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260246,"byte_end":260256,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260507,"byte_end":260517,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260894,"byte_end":260904,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":261800,"byte_end":261809,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":262619,"byte_end":262628,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263409,"byte_end":263427,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263747,"byte_end":263765,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":266586,"byte_end":266599,"line_start":264,"line_end":264,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":267732,"byte_end":267745,"line_start":303,"line_end":303,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":268306,"byte_end":268319,"line_start":324,"line_end":324,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269246,"byte_end":269264,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269905,"byte_end":269923,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":270300,"byte_end":270318,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271420,"byte_end":271431,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271661,"byte_end":271672,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":272202,"byte_end":272213,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273120,"byte_end":273128,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273695,"byte_end":273714,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273955,"byte_end":273974,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276149,"byte_end":276164,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276936,"byte_end":276951,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277599,"byte_end":277614,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277962,"byte_end":277981,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":278206,"byte_end":278225,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279303,"byte_end":279322,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279862,"byte_end":279879,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281652,"byte_end":281658,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281818,"byte_end":281824,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282035,"byte_end":282041,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282503,"byte_end":282509,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283250,"byte_end":283258,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2324},{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283939,"byte_end":283953,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285217,"byte_end":285231,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285378,"byte_end":285392,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286138,"byte_end":286152,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286542,"byte_end":286554,"line_start":226,"line_end":226,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":287531,"byte_end":287540,"line_start":271,"line_end":271,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288493,"byte_end":288502,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288609,"byte_end":288618,"line_start":321,"line_end":321,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":288907,"byte_end":288919,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289010,"byte_end":289022,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289366,"byte_end":289378,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289739,"byte_end":289751,"line_start":51,"line_end":51,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289945,"byte_end":289956,"line_start":63,"line_end":63,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290510,"byte_end":290513,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290694,"byte_end":290697,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291032,"byte_end":291035,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291605,"byte_end":291613,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":292128,"byte_end":292139,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293358,"byte_end":293364,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293568,"byte_end":293574,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293909,"byte_end":293915,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":294493,"byte_end":294501,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":295136,"byte_end":295150,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296442,"byte_end":296448,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296652,"byte_end":296658,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296993,"byte_end":296999,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":297577,"byte_end":297585,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":298220,"byte_end":298234,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299533,"byte_end":299539,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299726,"byte_end":299732,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300180,"byte_end":300186,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300831,"byte_end":300839,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":301396,"byte_end":301410,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302306,"byte_end":302320,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302432,"byte_end":302446,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303094,"byte_end":303108,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303428,"byte_end":303440,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304479,"byte_end":304494,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304516,"byte_end":304531,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304680,"byte_end":304695,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305245,"byte_end":305260,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305492,"byte_end":305507,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2694}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305692,"byte_end":305705,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306693,"byte_end":306704,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306726,"byte_end":306737,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306878,"byte_end":306889,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307356,"byte_end":307367,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307583,"byte_end":307594,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307767,"byte_end":307776,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308872,"byte_end":308879,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309040,"byte_end":309047,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309262,"byte_end":309269,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309729,"byte_end":309736,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":310478,"byte_end":310486,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":311161,"byte_end":311176,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312390,"byte_end":312405,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312555,"byte_end":312570,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313313,"byte_end":313328,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313711,"byte_end":313724,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315112,"byte_end":315116,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315274,"byte_end":315278,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315388,"byte_end":315397,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315591,"byte_end":315600,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316110,"byte_end":316119,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316819,"byte_end":316827,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":317536,"byte_end":317553,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":318651,"byte_end":318664,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319011,"byte_end":319024,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319275,"byte_end":319288,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319599,"byte_end":319616,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":320574,"byte_end":320591,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321070,"byte_end":321085,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321827,"byte_end":321843,"line_start":331,"line_end":331,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322561,"byte_end":322570,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322759,"byte_end":322768,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":323398,"byte_end":323415,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324215,"byte_end":324232,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324635,"byte_end":324650,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327221,"byte_end":327231,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327552,"byte_end":327562,"line_start":68,"line_end":68,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327898,"byte_end":327906,"line_start":81,"line_end":81,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328232,"byte_end":328240,"line_start":95,"line_end":95,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328575,"byte_end":328583,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328876,"byte_end":328884,"line_start":122,"line_end":122,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329194,"byte_end":329201,"line_start":135,"line_end":135,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329671,"byte_end":329678,"line_start":151,"line_end":151,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330075,"byte_end":330082,"line_start":166,"line_end":166,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330437,"byte_end":330444,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330807,"byte_end":330817,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331425,"byte_end":331435,"line_start":217,"line_end":217,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331747,"byte_end":331753,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332698,"byte_end":332704,"line_start":259,"line_end":259,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332988,"byte_end":332994,"line_start":269,"line_end":269,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333285,"byte_end":333291,"line_start":279,"line_end":279,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333597,"byte_end":333603,"line_start":289,"line_end":289,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334552,"byte_end":334560,"line_start":320,"line_end":320,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334871,"byte_end":334879,"line_start":333,"line_end":333,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":335316,"byte_end":335319,"line_start":349,"line_end":349,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336356,"byte_end":336362,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337211,"byte_end":337217,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337667,"byte_end":337681,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338732,"byte_end":338739,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339057,"byte_end":339064,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339676,"byte_end":339691,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340488,"byte_end":340492,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340870,"byte_end":340874,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":341003,"byte_end":341007,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344029,"byte_end":344034,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344915,"byte_end":344924,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":345961,"byte_end":345973,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":346608,"byte_end":346614,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348015,"byte_end":348021,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348962,"byte_end":348975,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350238,"byte_end":350251,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350919,"byte_end":350930,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":351671,"byte_end":351683,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":352767,"byte_end":352775,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353901,"byte_end":353906,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353996,"byte_end":354001,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354137,"byte_end":354142,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3476}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354428,"byte_end":354433,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354913,"byte_end":354926,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356225,"byte_end":356229,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356515,"byte_end":356519,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31135,"byte_end":31136,"line_start":255,"line_end":255,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32644,"byte_end":32645,"line_start":302,"line_end":302,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88986,"byte_end":88987,"line_start":1974,"line_end":1974,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112430,"byte_end":112436,"line_start":2698,"line_end":2698,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5558},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112761,"byte_end":112767,"line_start":2715,"line_end":2715,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5559},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357898,"byte_end":357904,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358077,"byte_end":358085,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358380,"byte_end":358388,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3825},{"krate":0,"index":3827},{"krate":0,"index":3828}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359550,"byte_end":359554,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3833}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361035,"byte_end":361049,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361661,"byte_end":361667,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364277,"byte_end":364282,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364559,"byte_end":364571,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372874,"byte_end":372878,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3902}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":373452,"byte_end":373466,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377883,"byte_end":377889,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378328,"byte_end":378332,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":379590,"byte_end":379596,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":409282,"byte_end":409292,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412242,"byte_end":412248,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412497,"byte_end":412510,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":416236,"byte_end":416245,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":427687,"byte_end":427692,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":436879,"byte_end":436890,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4041}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437120,"byte_end":437126,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437333,"byte_end":437343,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396083,"byte_end":396087,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396214,"byte_end":396218,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396544,"byte_end":396548,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397059,"byte_end":397071,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397638,"byte_end":397644,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397773,"byte_end":397779,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398107,"byte_end":398113,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4231}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398744,"byte_end":398758,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399615,"byte_end":399622,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399752,"byte_end":399759,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400087,"byte_end":400094,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4259},{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400776,"byte_end":400791,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401674,"byte_end":401681,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402011,"byte_end":402018,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4288},{"krate":0,"index":4289}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402539,"byte_end":402554,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403201,"byte_end":403210,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403542,"byte_end":403551,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4315}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404192,"byte_end":404209,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405053,"byte_end":405058,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405241,"byte_end":405246,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405442,"byte_end":405447,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406941,"byte_end":406949,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":407174,"byte_end":407182,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":479613,"byte_end":479615,"line_start":345,"line_end":345,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6032},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480873,"byte_end":480878,"line_start":398,"line_end":398,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481138,"byte_end":481151,"line_start":409,"line_end":409,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481950,"byte_end":481961,"line_start":443,"line_end":443,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":482312,"byte_end":482331,"line_start":458,"line_end":458,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483318,"byte_end":483323,"line_start":498,"line_end":498,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4497},{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483581,"byte_end":483594,"line_start":509,"line_end":509,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484351,"byte_end":484362,"line_start":542,"line_end":542,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4511},{"krate":0,"index":4512}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484627,"byte_end":484646,"line_start":553,"line_end":553,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485387,"byte_end":485392,"line_start":583,"line_end":583,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485542,"byte_end":485547,"line_start":589,"line_end":589,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4527},{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487207,"byte_end":487222,"line_start":649,"line_end":649,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4549}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487376,"byte_end":487399,"line_start":655,"line_end":655,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487707,"byte_end":487722,"line_start":664,"line_end":664,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488070,"byte_end":488093,"line_start":676,"line_end":676,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4568}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488906,"byte_end":488911,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4572},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489599,"byte_end":489614,"line_start":733,"line_end":733,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4578},{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490304,"byte_end":490311,"line_start":761,"line_end":761,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4591},{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490688,"byte_end":490703,"line_start":776,"line_end":776,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491747,"byte_end":491759,"line_start":818,"line_end":818,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":492172,"byte_end":492192,"line_start":834,"line_end":834,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493363,"byte_end":493366,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493539,"byte_end":493547,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4637}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493844,"byte_end":493852,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":4643}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":494975,"byte_end":494986,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":495650,"byte_end":495661,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496030,"byte_end":496040,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496362,"byte_end":496372,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496577,"byte_end":496587,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496693,"byte_end":496703,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":497751,"byte_end":497757,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4696}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":498277,"byte_end":498283,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4703}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":499077,"byte_end":499083,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4709}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3935,"byte_end":3946,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12459,"byte_end":12470,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":53}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12480,"byte_end":12489,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12499,"byte_end":12508,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12518,"byte_end":12526,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12536,"byte_end":12544,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":99}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12554,"byte_end":12565,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":111}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\mod.rs","byte_start":12575,"byte_end":12584,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":120}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3956,"byte_end":3960,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":142}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":27112,"byte_end":27120,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1081}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3970,"byte_end":3976,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3805}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":3986,"byte_end":3993,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3861}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4003,"byte_end":4008,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3873}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4018,"byte_end":4033,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":3896}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4043,"byte_end":4049,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3911}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4059,"byte_end":4064,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3947}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4074,"byte_end":4077,"line_start":112,"line_end":112,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4392}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\lib.rs","byte_start":4087,"byte_end":4090,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4623}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8003,"byte_end":8008,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13045,"byte_end":13055,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":431},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\binary_heap.rs","byte_start":13517,"byte_end":13521,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4764},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_map.rs","byte_start":14710,"byte_end":14714,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4816},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\btree_set.rs","byte_start":16219,"byte_end":16223,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_map.rs","byte_start":17476,"byte_end":17480,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4931},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\hash_set.rs","byte_start":19120,"byte_end":19124,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5004},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\linked_list.rs","byte_start":20214,"byte_end":20218,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5048},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\collections\\vec_deque.rs","byte_start":21609,"byte_end":21613,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5120},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114671,"byte_end":114676,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":174}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":114835,"byte_end":114836,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":174}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":115346,"byte_end":115356,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5166},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116325,"byte_end":116345,"line_start":106,"line_end":106,"column_start":41,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":184},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\par_bridge.rs","byte_start":116637,"byte_end":116657,"line_start":117,"line_end":117,"column_start":60,"column_end":80},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120561,"byte_end":120566,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":120794,"byte_end":120799,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5175},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":121902,"byte_end":121907,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5175},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":122842,"byte_end":122851,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":123529,"byte_end":123538,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124207,"byte_end":124220,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":124403,"byte_end":124416,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126028,"byte_end":126036,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126250,"byte_end":126258,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126554,"byte_end":126562,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chain.rs","byte_start":126683,"byte_end":126691,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127315,"byte_end":127327,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":127481,"byte_end":127493,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128078,"byte_end":128090,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":128454,"byte_end":128464,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":334},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find.rs","byte_start":129350,"byte_end":129361,"line_start":112,"line_end":112,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":352},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":131887,"byte_end":131899,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":132449,"byte_end":132461,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":133527,"byte_end":133539,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":135101,"byte_end":135111,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\find_first_last\\mod.rs","byte_start":136819,"byte_end":136830,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":417},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137653,"byte_end":137659,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":137858,"byte_end":137864,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5196},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138197,"byte_end":138203,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5196},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":138901,"byte_end":138909,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":139482,"byte_end":139495,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":140614,"byte_end":140622,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141300,"byte_end":141308,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\chunks.rs","byte_start":141469,"byte_end":141477,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":148736,"byte_end":148751,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":149044,"byte_end":149059,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":504},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":150086,"byte_end":150099,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\consumer.rs","byte_start":151110,"byte_end":151125,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":504},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":144484,"byte_end":144491,"line_start":77,"line_end":77,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\collect\\mod.rs","byte_start":146157,"byte_end":146160,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159602,"byte_end":159611,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":159804,"byte_end":159813,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5206},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160157,"byte_end":160166,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5206},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":160672,"byte_end":160680,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\enumerate.rs","byte_start":161264,"byte_end":161281,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163087,"byte_end":163093,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5215},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163253,"byte_end":163259,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":163470,"byte_end":163476,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5215},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164024,"byte_end":164038,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164189,"byte_end":164203,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":635},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":164947,"byte_end":164961,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":635},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter.rs","byte_start":165348,"byte_end":165360,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":664},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166636,"byte_end":166645,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5224},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":166852,"byte_end":166861,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167050,"byte_end":167059,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5224},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167626,"byte_end":167643,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":167796,"byte_end":167813,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":701},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":168599,"byte_end":168616,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":701},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\filter_map.rs","byte_start":169021,"byte_end":169036,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170338,"byte_end":170345,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5233},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170524,"byte_end":170531,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":170711,"byte_end":170718,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5233},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171333,"byte_end":171348,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":171493,"byte_end":171508,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172300,"byte_end":172315,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flat_map.rs","byte_start":172759,"byte_end":172772,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174344,"byte_end":174351,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\flatten.rs","byte_start":174585,"byte_end":174592,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5242},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":174976,"byte_end":174980,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175777,"byte_end":175781,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":175971,"byte_end":175975,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5251},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":176592,"byte_end":176604,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":860},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177460,"byte_end":177472,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":860},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":177945,"byte_end":177955,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":890},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":178952,"byte_end":178960,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":179749,"byte_end":179757,"line_start":203,"line_end":203,"column_start":58,"column_end":66},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5263},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180011,"byte_end":180019,"line_start":212,"line_end":212,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5263},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":180591,"byte_end":180607,"line_start":239,"line_end":239,"column_start":38,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":928},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\fold.rs","byte_start":181525,"byte_end":181541,"line_start":278,"line_end":278,"column_start":47,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":928},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182274,"byte_end":182289,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":964},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":182685,"byte_end":182700,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":964},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\for_each.rs","byte_start":183142,"byte_end":183157,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":964},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184009,"byte_end":184012,"line_start":21,"line_end":21,"column_start":37,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184281,"byte_end":184289,"line_start":34,"line_end":34,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":2825},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184645,"byte_end":184655,"line_start":48,"line_end":48,"column_start":37,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":431},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":184964,"byte_end":184974,"line_start":62,"line_end":62,"column_start":37,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":2399},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185437,"byte_end":185444,"line_start":78,"line_end":78,"column_start":48,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6637},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":185978,"byte_end":185986,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":721},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186285,"byte_end":186292,"line_start":110,"line_end":110,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186614,"byte_end":186622,"line_start":124,"line_end":124,"column_start":37,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":5141},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":186900,"byte_end":186906,"line_start":137,"line_end":137,"column_start":37,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187167,"byte_end":187173,"line_start":147,"line_end":147,"column_start":45,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187440,"byte_end":187446,"line_start":157,"line_end":157,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187709,"byte_end":187715,"line_start":167,"line_end":167,"column_start":39,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":187985,"byte_end":187991,"line_start":177,"line_end":177,"column_start":49,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\from_par_iter.rs","byte_start":188434,"byte_end":188437,"line_start":191,"line_end":191,"column_start":52,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":340},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192085,"byte_end":192089,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":192092,"byte_end":192097,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195099,"byte_end":195103,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":195106,"byte_end":195111,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":196419,"byte_end":196424,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":198439,"byte_end":198447,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1100},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199552,"byte_end":199556,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":199559,"byte_end":199564,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":200552,"byte_end":200560,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":201679,"byte_end":201693,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\plumbing\\mod.rs","byte_start":204051,"byte_end":204059,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1137},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":208322,"byte_end":208329,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209231,"byte_end":209238,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5286},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":209434,"byte_end":209441,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5286},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":210145,"byte_end":210160,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1194},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211051,"byte_end":211066,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1194},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":211588,"byte_end":211601,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":212327,"byte_end":212338,"line_start":165,"line_end":165,"column_start":15,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213179,"byte_end":213190,"line_start":194,"line_end":194,"column_start":56,"column_end":67},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":213471,"byte_end":213482,"line_start":206,"line_end":206,"column_start":36,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":214096,"byte_end":214115,"line_start":234,"line_end":234,"column_start":38,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_fold.rs","byte_start":215078,"byte_end":215097,"line_start":274,"line_end":274,"column_start":47,"column_end":66},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":215994,"byte_end":216008,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216050,"byte_end":216064,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216166,"byte_end":216180,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216707,"byte_end":216721,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":216970,"byte_end":216984,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\reduce.rs","byte_start":217229,"byte_end":217241,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218356,"byte_end":218360,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218592,"byte_end":218596,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5313},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":218931,"byte_end":218935,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5313},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\skip.rs","byte_start":219516,"byte_end":219524,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220677,"byte_end":220694,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220736,"byte_end":220753,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":220855,"byte_end":220872,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221486,"byte_end":221503,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":221770,"byte_end":221787,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce.rs","byte_start":222267,"byte_end":222282,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223548,"byte_end":223569,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1466},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223603,"byte_end":223624,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1466},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":223718,"byte_end":223739,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1466},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224318,"byte_end":224339,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1466},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":224576,"byte_end":224597,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1466},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\try_reduce_with.rs","byte_start":225256,"byte_end":225275,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1499},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230591,"byte_end":230596,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":230776,"byte_end":230781,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5323},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\splitter.rs","byte_start":231273,"byte_end":231286,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232247,"byte_end":232251,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232483,"byte_end":232487,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5332},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":232822,"byte_end":232826,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5332},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\take.rs","byte_start":233389,"byte_end":233397,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1572},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234335,"byte_end":234338,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5342},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234495,"byte_end":234498,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":234700,"byte_end":234703,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5342},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235177,"byte_end":235180,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5342},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":235922,"byte_end":235930,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1615},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":236613,"byte_end":236624,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1628},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237800,"byte_end":237811,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":237952,"byte_end":237963,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":238702,"byte_end":238713,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map.rs","byte_start":239108,"byte_end":239117,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240354,"byte_end":240361,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240593,"byte_end":240600,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":240831,"byte_end":240838,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":241354,"byte_end":241361,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5351},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":242206,"byte_end":242214,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1732},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":243001,"byte_end":243016,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1748},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244353,"byte_end":244364,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":244745,"byte_end":244756,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245047,"byte_end":245058,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245376,"byte_end":245391,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":245557,"byte_end":245572,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1800},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246416,"byte_end":246431,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1800},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":246895,"byte_end":246908,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1836},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248306,"byte_end":248313,"line_start":347,"line_end":347,"column_start":54,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5363},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248486,"byte_end":248493,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":248736,"byte_end":248743,"line_start":363,"line_end":363,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5363},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":249283,"byte_end":249290,"line_start":385,"line_end":385,"column_start":52,"column_end":59},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5363},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250165,"byte_end":250173,"line_start":420,"line_end":420,"column_start":60,"column_end":68},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1889},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":250991,"byte_end":251006,"line_start":452,"line_end":452,"column_start":41,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1906},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252464,"byte_end":252479,"line_start":515,"line_end":515,"column_start":22,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":252661,"byte_end":252676,"line_start":521,"line_end":521,"column_start":47,"column_end":62},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\map_with.rs","byte_start":253532,"byte_end":253547,"line_start":554,"line_end":554,"column_start":56,"column_end":71},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254462,"byte_end":254465,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":254687,"byte_end":254690,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5375},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255074,"byte_end":255077,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5375},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":255737,"byte_end":255746,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1994},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":256367,"byte_end":256376,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip.rs","byte_start":257033,"byte_end":257044,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2018},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258453,"byte_end":258458,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":258727,"byte_end":258732,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5388},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\zip_eq.rs","byte_start":259124,"byte_end":259129,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5388},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260246,"byte_end":260256,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260507,"byte_end":260517,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5400},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":260894,"byte_end":260904,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5400},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":261800,"byte_end":261809,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2080},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":262619,"byte_end":262628,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2094},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263409,"byte_end":263427,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":263747,"byte_end":263765,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2108},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":266586,"byte_end":266599,"line_start":264,"line_end":264,"column_start":25,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2130},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":267732,"byte_end":267745,"line_start":303,"line_end":303,"column_start":36,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2130},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave.rs","byte_start":268306,"byte_end":268319,"line_start":324,"line_end":324,"column_start":34,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2130},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269246,"byte_end":269264,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":269905,"byte_end":269923,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5413},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\interleave_shortest.rs","byte_start":270300,"byte_end":270318,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5413},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271420,"byte_end":271431,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":271661,"byte_end":271672,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5425},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":272202,"byte_end":272213,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5425},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273120,"byte_end":273128,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2197},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273695,"byte_end":273714,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":273955,"byte_end":273974,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2209},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276149,"byte_end":276164,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2228},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":276936,"byte_end":276951,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2228},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277599,"byte_end":277614,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2228},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":277962,"byte_end":277981,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":278206,"byte_end":278225,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279303,"byte_end":279322,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\intersperse.rs","byte_start":279862,"byte_end":279879,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2269},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281652,"byte_end":281658,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5435},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":281818,"byte_end":281824,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282035,"byte_end":282041,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5435},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":282503,"byte_end":282509,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5435},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283250,"byte_end":283258,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2315},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":283939,"byte_end":283953,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2327},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285217,"byte_end":285231,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":285378,"byte_end":285392,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2345},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286138,"byte_end":286152,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2345},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":286542,"byte_end":286554,"line_start":226,"line_end":226,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2374},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":287531,"byte_end":287540,"line_start":271,"line_end":271,"column_start":25,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288493,"byte_end":288502,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\update.rs","byte_start":288609,"byte_end":288618,"line_start":321,"line_end":321,"column_start":36,"column_end":45},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5444},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":288907,"byte_end":288919,"line_start":5,"line_end":5,"column_start":6,"column_end":18},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289010,"byte_end":289022,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2415},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289366,"byte_end":289378,"line_start":29,"line_end":29,"column_start":23,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2415},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289739,"byte_end":289751,"line_start":51,"line_end":51,"column_start":34,"column_end":46},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2415},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\noop.rs","byte_start":289945,"byte_end":289956,"line_start":63,"line_end":63,"column_start":22,"column_end":33},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2440},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290510,"byte_end":290513,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":290694,"byte_end":290697,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5457},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291032,"byte_end":291035,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5457},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":291605,"byte_end":291613,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2464},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\rev.rs","byte_start":292128,"byte_end":292139,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2474},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293358,"byte_end":293364,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293568,"byte_end":293574,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5466},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":293909,"byte_end":293915,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5466},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":294493,"byte_end":294501,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2507},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":295136,"byte_end":295150,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2517},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296442,"byte_end":296448,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296652,"byte_end":296658,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5476},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":296993,"byte_end":296999,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5476},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":297577,"byte_end":297585,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2547},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\len.rs","byte_start":298220,"byte_end":298234,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2557},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299533,"byte_end":299539,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":299726,"byte_end":299732,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5486},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300180,"byte_end":300186,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5486},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":300831,"byte_end":300839,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":301396,"byte_end":301410,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2608},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302306,"byte_end":302320,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":302432,"byte_end":302446,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2623},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303094,"byte_end":303108,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2623},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\cloned.rs","byte_start":303428,"byte_end":303440,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2645},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304479,"byte_end":304494,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304516,"byte_end":304531,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":304680,"byte_end":304695,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305245,"byte_end":305260,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305492,"byte_end":305507,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\product.rs","byte_start":305692,"byte_end":305705,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2695},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306693,"byte_end":306704,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2719},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306726,"byte_end":306737,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":306878,"byte_end":306889,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307356,"byte_end":307367,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307583,"byte_end":307594,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\sum.rs","byte_start":307767,"byte_end":307776,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2744},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":308872,"byte_end":308879,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309040,"byte_end":309047,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309262,"byte_end":309269,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5495},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":309729,"byte_end":309736,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5495},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":310478,"byte_end":310486,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2787},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":311161,"byte_end":311176,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2799},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312390,"byte_end":312405,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":312555,"byte_end":312570,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2817},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313313,"byte_end":313328,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2817},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\inspect.rs","byte_start":313711,"byte_end":313724,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2846},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315112,"byte_end":315116,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5513},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315274,"byte_end":315278,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315388,"byte_end":315397,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":315591,"byte_end":315600,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5504},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316110,"byte_end":316119,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5504},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":316819,"byte_end":316827,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2893},"to":{"krate":0,"index":1086}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":317536,"byte_end":317553,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2902},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":318651,"byte_end":318664,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2918},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319011,"byte_end":319024,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2918},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319275,"byte_end":319288,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2918},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":319599,"byte_end":319616,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2937},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":320574,"byte_end":320591,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2937},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321070,"byte_end":321085,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2958},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\panic_fuse.rs","byte_start":321827,"byte_end":321843,"line_start":331,"line_end":331,"column_start":31,"column_end":47},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322561,"byte_end":322570,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":322759,"byte_end":322768,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5520},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":323398,"byte_end":323415,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3000},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324215,"byte_end":324232,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3000},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\while_some.rs","byte_start":324635,"byte_end":324650,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3021},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327221,"byte_end":327231,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":431},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327552,"byte_end":327562,"line_start":68,"line_end":68,"column_start":39,"column_end":49},"kind":{"Impl":{"id":328}},"from":{"krate":5,"index":431},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":327898,"byte_end":327906,"line_start":81,"line_end":81,"column_start":39,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":721},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328232,"byte_end":328240,"line_start":95,"line_end":95,"column_start":51,"column_end":59},"kind":{"Impl":{"id":330}},"from":{"krate":5,"index":721},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328575,"byte_end":328583,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":5141},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":328876,"byte_end":328884,"line_start":122,"line_end":122,"column_start":39,"column_end":47},"kind":{"Impl":{"id":332}},"from":{"krate":5,"index":5141},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329194,"byte_end":329201,"line_start":135,"line_end":135,"column_start":42,"column_end":49},"kind":{"Impl":{"id":333}},"from":{"krate":1,"index":6637},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":329671,"byte_end":329678,"line_start":151,"line_end":151,"column_start":54,"column_end":61},"kind":{"Impl":{"id":334}},"from":{"krate":1,"index":6637},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330075,"byte_end":330082,"line_start":166,"line_end":166,"column_start":34,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330437,"byte_end":330444,"line_start":180,"line_end":180,"column_start":42,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":330807,"byte_end":330817,"line_start":194,"line_end":194,"column_start":31,"column_end":41},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":2399},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331425,"byte_end":331435,"line_start":217,"line_end":217,"column_start":39,"column_end":49},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":2399},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":331747,"byte_end":331753,"line_start":230,"line_end":230,"column_start":31,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332698,"byte_end":332704,"line_start":259,"line_end":259,"column_start":39,"column_end":45},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":332988,"byte_end":332994,"line_start":269,"line_end":269,"column_start":38,"column_end":44},"kind":{"Impl":{"id":341}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333285,"byte_end":333291,"line_start":279,"line_end":279,"column_start":33,"column_end":39},"kind":{"Impl":{"id":342}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":333597,"byte_end":333603,"line_start":289,"line_end":289,"column_start":43,"column_end":49},"kind":{"Impl":{"id":343}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334552,"byte_end":334560,"line_start":320,"line_end":320,"column_start":31,"column_end":39},"kind":{"Impl":{"id":344}},"from":{"krate":5,"index":2825},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":334871,"byte_end":334879,"line_start":333,"line_end":333,"column_start":39,"column_end":47},"kind":{"Impl":{"id":345}},"from":{"krate":5,"index":2825},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\extend.rs","byte_start":335316,"byte_end":335319,"line_start":349,"line_end":349,"column_start":39,"column_end":42},"kind":{"Impl":{"id":346}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":3779}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":336356,"byte_end":336362,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337211,"byte_end":337217,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5529},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":337667,"byte_end":337681,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3203},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":338732,"byte_end":338739,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339057,"byte_end":339064,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5538},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":339676,"byte_end":339691,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3227},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340488,"byte_end":340492,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":340870,"byte_end":340874,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\repeat.rs","byte_start":341003,"byte_end":341007,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341346,"byte_end":341350,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":341353,"byte_end":341357,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344029,"byte_end":344034,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3285},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":344915,"byte_end":344924,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3301},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":345961,"byte_end":345973,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3319},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":346608,"byte_end":346614,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3332},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348015,"byte_end":348021,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3349},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":348962,"byte_end":348975,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3367},"to":{"krate":0,"index":1100}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350238,"byte_end":350251,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3367},"to":{"krate":0,"index":1119}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":350919,"byte_end":350930,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3395},"to":{"krate":0,"index":1108}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":351671,"byte_end":351683,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3413},"to":{"krate":0,"index":1116}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\unzip.rs","byte_start":352767,"byte_end":352775,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3438},"to":{"krate":0,"index":3255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353901,"byte_end":353906,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":353996,"byte_end":354001,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354137,"byte_end":354142,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354428,"byte_end":354433,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\empty.rs","byte_start":354913,"byte_end":354926,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3484},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356225,"byte_end":356229,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5548},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\once.rs","byte_start":356515,"byte_end":356519,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5548},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":31135,"byte_end":31136,"line_start":255,"line_end":255,"column_start":67,"column_end":68},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":3524}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":32644,"byte_end":32645,"line_start":302,"line_end":302,"column_start":70,"column_end":71},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":3535}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33534,"byte_end":33539,"line_start":328,"line_end":328,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":33542,"byte_end":33546,"line_start":328,"line_end":328,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":88986,"byte_end":88987,"line_start":1974,"line_end":1974,"column_start":52,"column_end":53},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":89354,"byte_end":89370,"line_start":1988,"line_end":1988,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3546},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112430,"byte_end":112436,"line_start":2698,"line_end":2698,"column_start":21,"column_end":27},"kind":{"Impl":{"id":376}},"from":{"krate":2,"index":31728},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\iter\\mod.rs","byte_start":112761,"byte_end":112767,"line_start":2715,"line_end":2715,"column_start":24,"column_end":30},"kind":{"Impl":{"id":377}},"from":{"krate":2,"index":31887},"to":{"krate":0,"index":3784}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":357898,"byte_end":357904,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"kind":{"Impl":{"id":378}},"from":{"krate":2,"index":31728},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358077,"byte_end":358085,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5560},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":358380,"byte_end":358388,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5560},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":359550,"byte_end":359554,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5569},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361035,"byte_end":361049,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3846},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\option.rs","byte_start":361661,"byte_end":361667,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"kind":{"Impl":{"id":387}},"from":{"krate":2,"index":31728},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364277,"byte_end":364282,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"kind":{"Impl":{"id":388}},"from":{"krate":2,"index":30464},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range.rs","byte_start":364559,"byte_end":364571,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3883},"to":{"krate":2,"index":5194}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":372874,"byte_end":372878,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\range_inclusive.rs","byte_start":373452,"byte_end":373466,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"kind":{"Impl":{"id":391}},"from":{"krate":2,"index":30533},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":377883,"byte_end":377889,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":2,"index":31887},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":378328,"byte_end":378332,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\result.rs","byte_start":379590,"byte_end":379596,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":400}},"from":{"krate":2,"index":31887},"to":{"krate":0,"index":3775}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":409282,"byte_end":409292,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412242,"byte_end":412248,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":412497,"byte_end":412510,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3977},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":416236,"byte_end":416245,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3987},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mergesort.rs","byte_start":427687,"byte_end":427692,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4009},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":436879,"byte_end":436890,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4035},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437120,"byte_end":437126,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4042},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\quicksort.rs","byte_start":437333,"byte_end":437343,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4048},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396083,"byte_end":396087,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5987},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396214,"byte_end":396218,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5987},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":396544,"byte_end":396548,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5987},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397059,"byte_end":397071,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4203},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397638,"byte_end":397644,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5995},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":397773,"byte_end":397779,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5995},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398107,"byte_end":398113,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5995},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":398744,"byte_end":398758,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4233},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399615,"byte_end":399622,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6004},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":399752,"byte_end":399759,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6004},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400087,"byte_end":400094,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6004},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":400776,"byte_end":400791,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4264},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":401674,"byte_end":401681,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6013},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402011,"byte_end":402018,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6013},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":402539,"byte_end":402554,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4291},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403201,"byte_end":403210,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6021},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":403542,"byte_end":403551,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6021},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":404192,"byte_end":404209,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4317},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405053,"byte_end":405058,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4329},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405241,"byte_end":405246,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4329},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":405442,"byte_end":405447,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":4329},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":406941,"byte_end":406949,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":4363},"to":{"krate":2,"index":6562}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\slice\\mod.rs","byte_start":407174,"byte_end":407182,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4363},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477849,"byte_end":477854,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":4419}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477857,"byte_end":477861,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":4419}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":477864,"byte_end":477868,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":4419}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":479613,"byte_end":479615,"line_start":345,"line_end":345,"column_start":54,"column_end":56},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4448},"to":{"krate":0,"index":4419}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":480873,"byte_end":480878,"line_start":398,"line_end":398,"column_start":32,"column_end":37},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481138,"byte_end":481151,"line_start":409,"line_end":409,"column_start":33,"column_end":46},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4462},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":481950,"byte_end":481961,"line_start":443,"line_end":443,"column_start":32,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6042},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":482312,"byte_end":482331,"line_start":458,"line_end":458,"column_start":33,"column_end":52},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4476},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483318,"byte_end":483323,"line_start":498,"line_end":498,"column_start":32,"column_end":37},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6051},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":483581,"byte_end":483594,"line_start":509,"line_end":509,"column_start":33,"column_end":46},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":4492},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484351,"byte_end":484362,"line_start":542,"line_end":542,"column_start":32,"column_end":43},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6060},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":484627,"byte_end":484646,"line_start":553,"line_end":553,"column_start":33,"column_end":52},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":4506},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485387,"byte_end":485392,"line_start":583,"line_end":583,"column_start":23,"column_end":28},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":485542,"byte_end":485547,"line_start":589,"line_end":589,"column_start":44,"column_end":49},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6069},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487207,"byte_end":487222,"line_start":649,"line_end":649,"column_start":23,"column_end":38},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487376,"byte_end":487399,"line_start":655,"line_end":655,"column_start":36,"column_end":59},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":4540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":487707,"byte_end":487722,"line_start":664,"line_end":664,"column_start":44,"column_end":59},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6082},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488070,"byte_end":488093,"line_start":676,"line_end":676,"column_start":58,"column_end":81},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":4540},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":488906,"byte_end":488911,"line_start":707,"line_end":707,"column_start":32,"column_end":37},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6095},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":489599,"byte_end":489614,"line_start":733,"line_end":733,"column_start":32,"column_end":47},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6105},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490304,"byte_end":490311,"line_start":761,"line_end":761,"column_start":44,"column_end":51},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6115},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":490688,"byte_end":490703,"line_start":776,"line_end":776,"column_start":51,"column_end":66},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":4582},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":491747,"byte_end":491759,"line_start":818,"line_end":818,"column_start":44,"column_end":56},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6128},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\str.rs","byte_start":492172,"byte_end":492192,"line_start":834,"line_end":834,"column_start":51,"column_end":71},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":4602},"to":{"krate":0,"index":1123}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493363,"byte_end":493366,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":3520}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493539,"byte_end":493547,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6141},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":493844,"byte_end":493852,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6141},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":494975,"byte_end":494986,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":4645},"to":{"krate":0,"index":1091}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":495650,"byte_end":495661,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":4645},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496030,"byte_end":496040,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4660},"to":{"krate":2,"index":5288}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496362,"byte_end":496372,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":4660},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496577,"byte_end":496587,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":4660},"to":{"krate":2,"index":5242}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\vec.rs","byte_start":496693,"byte_end":496703,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":4660},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":497751,"byte_end":497757,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":464}},"from":{"krate":22,"index":158},"to":{"krate":0,"index":3546}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":498277,"byte_end":498283,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":465}},"from":{"krate":22,"index":158},"to":{"krate":0,"index":3718}},{"span":{"file_name":"C:\\Users\\Pranav\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.1.0\\src\\par_either.rs","byte_start":499077,"byte_end":499083,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":466}},"from":{"krate":22,"index":158},"to":{"krate":0,"index":3779}}]}